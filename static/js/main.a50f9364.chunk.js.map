{"version":3,"sources":["redux/action-types/index.ts","components/nav-taps/navTabsStyle.ts","components/vertical-stepper/verticalStepperStyle.ts","components/upload-file/uploadFileStyle.ts","components/upload-file/UploadFile.tsx","redux/reducers/ItemReducer.ts","enums/lixiEnums.ts","redux/reducers/customiserReducer.ts","redux/reducers/schemaReducer.ts","redux/reducers/index.ts","redux/store.ts","util/nameSpaces.ts","redux/action-creators/itemActionCreator.ts","redux/action-creators/customiserActionCreator.ts","redux/action-creators/schemaActionCreator.ts","hooks/useActions.ts","hooks/useTypeSelector.ts","components/vertical-stepper/upload-schema-step/uploadSchemaStepStyle.ts","components/vertical-stepper/upload-schema-step/UploadSchemaStep.tsx","components/vertical-stepper/upload-customisation-instruction/uploadCustomisationInstructionStyle.ts","components/vertical-stepper/upload-customisation-instruction/UploadCustomisationInstruction.tsx","components/vertical-stepper/VerticalStepper.tsx","components/itemXMLViewer/itemXMLViewerSettings.ts","components/itemXMLViewer/itemXMLViewerStyle.ts","components/itemXMLViewer/ItemXMLViewer.tsx","models/Customiser.ts","models/LixiBase.ts","models/ElementCustomiser.ts","components/formik-mterial-ui/AppCheckBox.tsx","components/lixi-list-item-header/lixiListItemHeaderStyle.ts","components/lixi-list-item-header/LixiListItemHeader.tsx","components/tool-tip/lixiItemToolTipStyle.ts","components/tool-tip/LixiItemToolTip.tsx","components/lixi-list-item/lixiListItemStyle.ts","components/confirm-remove-dialog/confirmRemoveItemDialogStyle.ts","components/confirm-remove-dialog/ConfirmRemoveItemDialog.tsx","components/lixi-list-item/LixiListItem.tsx","components/element-sub-items/elementSubItemsStyle.ts","components/element-sub-items/ElementSubItems.tsx","components/formik-mterial-ui/appTextFieldStyle.ts","components/formik-mterial-ui/AppTextField.tsx","components/excerpt-documentation/ExcerptDocumentation.tsx","components/customise-element/customiseElementStyle.ts","components/customise-element/CustomiseElement.tsx","components/customise-element/customiseElementSchema.ts","components/lixi-item/lixiItemStyle.ts","components/customise-attribute/integer-type-attribute/integerTypeAttributeStyle.ts","components/customise-attribute/integer-type-attribute/integerTypeAttributeSchema.ts","models/IntegerTypeAttributeCustomiser.ts","components/customise-attribute/integer-type-attribute/IntegerTypeAttribute.tsx","components/lixi-item/AttributeSwitchType.tsx","components/customise-attribute/string-type-attribute/stringTypeAttributeStyle.ts","components/customise-attribute/string-type-attribute/stringTypeAttributeSchema.ts","components/formik-mterial-ui/AppRadioButton.tsx","components/customise-attribute/string-type-attribute/string-to-pattern/stringToPatternStyle.ts","components/customise-attribute/string-type-attribute/string-to-pattern/StringToPattern.tsx","components/customise-attribute/string-type-attribute/string-to-list-header/stringToListHeaderSchema.ts","components/customise-attribute/string-type-attribute/string-to-list-header/stringToListHeaderStyle.ts","components/customise-attribute/string-type-attribute/string-to-list-header/StringToListHeader.tsx","components/customise-attribute/string-type-attribute/string-to-list-body/stringToListBodyStyle.ts","components/customise-attribute/string-type-attribute/string-to-list-body/StringToListBody.tsx","models/StringTypeAttributeCustomiser.ts","components/customise-attribute/string-type-attribute/StringTypeAttribute.tsx","components/lixi-item/lixi-item-attributes/attributesTransactionsStyle.ts","components/lixi-item/lixi-item-attributes/ItemAttributes.tsx","components/lixi-item/lixi-item-transactions/transactionsStyle.ts","components/lixi-item/lixi-item-transactions/Transactions.tsx","components/lixi-item/lixi-item-label-description/labelDescriptionStyle.ts","components/lixi-item/lixi-item-label-description/LabelDescription.tsx","components/customise-attribute/list-type-attribute/listTypeAttributeStyle.ts","models/ListTypeAttributeCustomiser.ts","components/customise-attribute/list-type-attribute/ListTypeAttribute.tsx","components/customise-simple-type/simple-token-type/simpleTokenTypeStyle.ts","models/TokenTypeCustomiser.ts","components/customise-simple-type/simple-token-type/SimpleTokenType.tsx","components/lixi-item/SimpleTypeSwitchType.tsx","components/lixi-item/LixiItem.tsx","components/breadCrumbs/breadCrumbsStyle.ts","components/breadCrumbs/breadCrumbsComponent.tsx","components/search/listBoxComponent.tsx","components/search/searchPathStyle.ts","components/search/SearchPath.tsx","components/nav-taps/create-instruction/CreateInstruction.tsx","components/nav-taps/NavTabPanel.tsx","components/sub-schema-menu/subSchemaMenuStyle.ts","components/sub-schema-menu/SubSchemaMenu.tsx","components/select-transaction-dialog/selectTransactionDialogStyle.ts","components/select-transaction-dialog/SelectTransactionDialog.tsx","components/nav-taps/NavTabs.tsx","appStyle.ts","App.tsx","reportWebVitals.ts","themes/getThem.ts","themes/light.ts","themes/dark.ts","themeProvider.tsx","index.tsx"],"names":["ItemActionType","CustomizationActionType","SchemaActionType","useStyles","makeStyles","theme","createStyles","root","flexGrow","tabPanelChildren","padding","spacing","breakpoints","down","width","margin","stepper","button","marginTop","marginRight","actionsContainer","marginBottom","resetContainer","customisationContainer","input","display","findPageIcon","color","palette","primary","light","loadIcon","main","fileName","backgroundColor","getContrastText","borderRadius","cursor","label","alignItems","uploadButton","marginLeft","minWidth","UploadFile","saveFace","classes","description","React","selectedFile","setSelectedFile","style","accept","className","id","type","onChange","target","files","Grid","wrap","alignContent","container","item","Tooltip","title","htmlFor","IconButton","aria-label","component","fontSize","Typography","variant","noWrap","name","onClick","undefined","LixiAttributeEnum","LixiTagEnum","LixiLocalNameEnum","initialState","data","error","loading","markedForDeletionList","reducer","state","action","SEARCH_ITEM","SEARCH_ITEM_SUCCESS","payload","SEARCH_ITEM_ERROR","REST_ITEM","MARKED_FOR_DELETION","customization","subSchema","transactionType","transactionVersion","metaData","UPLOAD_CUSTOMIZATION","UPLOAD_CUSTOMIZATION_SUCCESS","doc","file","UPLOAD_CUSTOMIZATION_ERROR","CUSTOMIZE_SUB_SCHEMA","RESET_SUB_SCHEMA","UPDATE_CUSTOMISATION","schema","UPLOAD_SCHEMA","UPLOAD_SCHEMA_SUCCESS","UPLOAD_SCHEMA_ERROR","RESET_SCHEMA","reducers","combineReducers","itemReducer","customizer","customiserReducer","SchemaReducer","store","createStore","applyMiddleware","thunk","nameSpaceResolver","prefix","xs","lx","li","XmlUtil","parsedDoc","this","elementsPath","elements","getElementsByTagName","element","Array","prototype","fill","e","push","path","textContent","itemsPath","result","evaluateXpath","iterateNext","transaction","transactions","split","includes","parentElement","children","xpath","contextNode","evaluate","XPathResult","ANY_TYPE","ANY_UNORDERED_NODE_TYPE","singleNodeValue","appInfo","map","call","i","localName","getAttribute","searchItem","lixiItem","Promise","resolves","rejects","xmlUtile","getItemByPath","dispatch","getState","a","sch","message","resetItem","markedForDeletion","customizeSubSchema","resetCustomizeSubSchema","uploadExistingCustomization","parsExistingCustomization","DOMParser","parseFromString","reader","FileReader","onload","onerror","readAsText","existingSchema","toString","existingCustomization","updateCustomisation","customisation","uploadBaseSchema","parsBaseSchema","baseSchema","resetBaseSchema","err","useAction","useDispatch","bindActionCreators","actionCreator","useTypedSelector","useSelector","uploadContainer","maxWidth","justifyContent","height","upload","nextButton","fileDetailHeaderRow","fileDetailHeaderCell","UploadSchemaStep","handelNextClicked","fileSize","useMemo","size","Math","floor","log","parseFloat","pow","toFixed","Paper","sm","Collapse","in","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","lastModified","Date","Button","endIcon","disabled","flexDirection","UploadCustomisationInstruction","handelBack","activeStep","handelSkip","handelNext","startIcon","VerticalLinearStepper","labelProps","optional","useState","setActiveStep","stepProps","setStepProp","handleNext","prevActiveStep","CssBaseline","Stepper","orientation","Step","StepLabel","StepContent","completed","options","indent","newline","customThemeVsCode","tagColor","attributeKeyColor","textColor","attributeValueColor","separatorColor","position","overflow","maxHeight","header","top","right","left","boxShadow","downloadLink","secondary","textDecoration","ItemXMLViewer","itemXML","role","serializer","XMLSerializer","xmlString","serializeToString","filename","exportFile","resolve","xml","prettifyXml","Customiser","customiseItem","excerpt","documentation","_customiseItemStub","cloneNode","_customisationStub","docStub","createElement","append","ExcludedItem","removeCustomisedItem","setAttribute","excludedPath","removeChild","allPath","from","find","p","existingCustomisedItem","getCustomisedItem","customExcerpt","trim","customDocumentation","filter","startsWith","paths","console","allCustomisedPaths","forEach","LixiBase","annotated","annotation","ownerDocument","referenceTargets","targets","t","attributes","complexType","getLixiComplexType","child","attribute","complex","subElements","firstChild","firstElementChild","sequence","choice","Object","keys","length","restriction","ElementCustomiser","values","object","fixedList","includeAllElements","includeAllAttributes","heading","newMin","newMax","itemPath","setInLineAttributes","customMaxOccurs","customMinOccurs","customAttributes","customElements","att","idx","exclude","customisedEle","parseInt","parentCustomised","parentStatus","pathList","pathLeaf","pop","customiser","join","customisedItem","getTouchedItem","customisedObject","included","AppCheckBox","checked","props","useField","field","meta","FormControl","touched","FormControlLabel","control","Checkbox","subItemHeader","zIndex","viewItem","LixiListItemHeader","toggle","items","selectedItemsLength","arrayHelper","value","setValue","useFormikContext","useEffect","ListSubheader","ListItemIcon","disableRipple","checkedIcon","icon","indeterminateIcon","indeterminate","ListItemText","tooltip","common","white","tooltip2","typography","pxToRem","LixiItemToolTip","placement","Fragment","subItem","paper","alert","ConfirmRemoveItemDialog","open","affected","handleClose","initialValues","agree","validationSchema","Yup","shape","oneOf","enableReinitialize","onSubmit","setSubmitting","resetForm","setTimeout","deletionList","isSubmitting","errors","Dialog","draggable","BackdropProps","PaperProps","elevation2","onClose","aria-labelledby","DialogTitle","Alert","severity","DialogContent","DialogContentText","Divider","DialogActions","LixiListItem","excluded","fixedListItem","selectAll","toggleSelectAll","neutral","setNeutral","affectedPath","setAffectedPath","setOpen","leafItem","furtherCustomisation","d","remove","indexOf","affectedItem","affectedList","affectedDecedents","handelAddItem","subEle","ListItem","divider","dense","ListItemSecondaryAction","edge","paddingTop","ElementSubItems","subItems","setExcludedList","setSelectAll","setTouched","includeAllItem","titleCaseName","replace","RegExp","matched","toUpperCase","affected2","excludedFullPath","leaf","exc","pre","toggleExclude","render","helperText","background","borderColor","borderStyle","borderWidth","boxSizing","AppTextField","TextField","FormHelperTextProps","ExcerptDocumentation","multiline","fullWidth","rows","saveMinMax","gap","minMaxContainer","textFieldMinMax","saveButton","CustomiseElement","initialValue","setInitialValue","itemSubElement","setItemSubElement","itemAttributes","setItemAttributes","excludedList","setFixedListItems","occursMinMax","setOccursMinMax","leafAttribs","itemEle","leafEle","instruction","subElement","lixiSubElements","occurrenceMinMax","min","max","currentMin","currentMax","moreThan","test","exclusive","params","parent","CustomiseElementSchema","JSON","stringify","newCustomisation","removeCustomisation","customise","border","itemLabelDescription","references","typeAttribute","otherAttribute","integerTypeSchema","optionalToMandatory","minInteger","typeError","integer","maxInteger","positive","IntegerTypeAttributeCustomiser","integerMinMax","customisedAttr","getAttributeNames","IntegerTypeAttribute","attCustomiser","placeholder","defaultProps","SwitchAttributeType","switchType","regex","transform","definition","enumeratedList","overflowY","customiseAttributeSchema","stringTo","pattern","AppRadioButton","onSelect","Radio","StringToPattern","onExit","FormHelperText","stringToEnumeratedListSchema","required","matches","textField","StringToListHeader","nameAlert","setNameAlert","getFieldHelpers","enumList","val","enumerations","some","valuesCopy","formik","submitForm","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","row","StringToListBody","StringTypeAttributeCustomiser","customPattern","customEnumeration","enumeration","regexDefinition","StringTypeAttribute","table","ItemAttributes","baseRestriction","Transactions","sort","paddingInline","Chip","clickable","avatar","Avatar","LabelDescription","Badge","badgeContent","ListTypeAttributeCustomiser","ListTypeAttribute","list","darken","text","hover","dark","selectAllText","TokenTypeCustomiser","tokens","token","tokenEle","SimpleTokenType","enumItem","tokeCustomiser","List","el","copyOfTokens","splice","enumerationAddRemove","SwitchSimpleType","switchBase","LixiItem","openToCustomise","setOpenToCustomise","setAlert","setLixiItem","setExclude","ele","include","subheader","r","paddingLeft","borderLeft","link","borderBottom","leafLink","IconBreadcrumbs","Breadcrumbs","separator","pathSections","section","event","preventDefault","pathArr","index","currentTarget","innerHTML","handleClick","iconClickHandler","renderRow","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","ref","outerProps","useContext","ListboxComponent","other","itemData","Children","toArray","useTheme","smUp","useMediaQuery","up","noSsr","itemCount","itemSize","getChildSize","isValidElement","gridRef","useRef","current","resetAfterIndex","useResetCache","Provider","reduce","b","outerElementType","innerElementType","overscanCount","listbox","contrastText","SearchPath","setOptions","showSearchBox","setShowSearchBox","pathsCount","setPathsCount","_loading","newItem","getPathOfAllItemsInATransaction","Slide","direction","mountOnEnter","unmountOnExit","timeout","Autocomplete","option","searchText","disableListWrap","autoComplete","includeInputInList","renderInput","InputProps","endAdornment","CircularProgress","renderOption","CreateInstructionTab","itemInstruction","setItemInstruction","newCustomiser","hidden","TabPanel","menuButton","SubSchemaMenu","transactionList","setTransactionList","anchorEl","setAnchorEl","sortedTransactionList","s","innerText","getTransactions","aria-controls","aria-haspopup","Menu","keepMounted","Boolean","MenuItem","SelectTransactionDialog","preSubSchema","setPreSubSchema","a11yProps","NavTabs","AppBar","Toolbar","Tabs","centered","newValue","Tab","minHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","themeMap","lightTheme","createMuiTheme","darkTheme","ThemeContext","themeName","ThemeProvider","_setThemeName","getThemeByName","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a50f9364.chunk.js","sourcesContent":["export enum ItemActionType {\r\n  SEARCH_ITEM = \"search_item\",\r\n  SEARCH_ITEM_SUCCESS = \"search_item_success\",\r\n  SEARCH_ITEM_ERROR = \"search_item_error\",\r\n  REST_ITEM = \"resetItem\",\r\n  MARKED_FOR_DELETION = \"markedForDeletion\",\r\n}\r\n\r\nexport enum CustomizationActionType {\r\n  EXCLUDE = \"exclude\",\r\n  INCLUDE = \"include\",\r\n  CUSTOMISE_ELEMENT = \"customiseElement\",\r\n  UPLOAD_CUSTOMIZATION = \"uploadCustomization\",\r\n  UPLOAD_CUSTOMIZATION_SUCCESS = \"uploadCustomizationSuccess\",\r\n  UPLOAD_CUSTOMIZATION_ERROR = \"uploadCustomizationError\",\r\n  RESET_CUSTOMIZATION = \"resetCustomization\",\r\n  CUSTOMIZE_SUB_SCHEMA = \"customizeSubSchema\",\r\n  RESET_SUB_SCHEMA = \"resetSubSchema\",\r\n  OPTIONAL_TO_MANDATORY = \"optionalToMandatory\",\r\n  CUSTOM_HEADING = \"customHeading\",\r\n  CUSTOM_MAX_OCCURS = \"customMaxOccurs\",\r\n  CUSTOM_MIN_OCCURS = \"customMinOccurs\",\r\n  STRING_TO_LIST = \"stringToList\",\r\n  CUSTOM_DEFINITION = \"definition\",\r\n  STRING_TO_PATTERN = \"stringToPattern\",\r\n  EXCLUDE_SUB_ELEMENTS = \"excludeSubElements\",\r\n  REMOVE_DESCENDENT_CUSTOMISATION = \"removeDescendentCustomisation\",\r\n  UPDATE_CUSTOMISATION = \"updateCustomisation\",\r\n}\r\n\r\n\r\nexport enum SchemaActionType {\r\n  UPLOAD_SCHEMA = \"uploadSchema\",\r\n  UPLOAD_SCHEMA_SUCCESS = \"uploadSchemaSuccess\",\r\n  UPLOAD_SCHEMA_ERROR = \"uploadSchemaError\",\r\n  RESET_SCHEMA = \"reset\",\r\n}\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    tabPanelChildren: {\r\n      padding: theme.spacing(3),\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        padding: theme.spacing(0),\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      padding: 0,\r\n      margin: 0,\r\n      // margin: theme.spacing(1),\r\n    },\r\n    stepper:  {\r\n      padding:  \"0.5rem\",\r\n      margin:  \"0.5rem\",\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        padding:  \"0.2rem\",\r\n        margin:  \"0.2rem\"\r\n      }\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n      padding: theme.spacing(0, 2, 2),\r\n    },\r\n    customisationContainer: {\r\n      padding: theme.spacing(2, 2, 2),\r\n      margin: theme.spacing(1, 0, 1),\r\n    },\r\n  })\r\n);\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width:\"inherit\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    findPageIcon: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n\r\n    loadIcon:{\r\n      color: theme.palette.primary.main,\r\n\r\n    },\r\n\r\n    fileName: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      width:\"max-content\",\r\n      color: theme.palette.getContrastText(theme.palette.primary.light),\r\n      padding: theme.spacing(0.75),\r\n      borderRadius: \"0.2rem\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    label:{ \r\n      display: \"flex\", alignItems: \"center\" \r\n    },\r\n    uploadButton:{\r\n      marginLeft: theme.spacing(1), \r\n      minWidth: \"7rem\",\r\n     \r\n    },\r\n   \r\n  })\r\n);\r\n","import * as React from \"react\";\r\nimport { useStyles } from \"./uploadFileStyle\";\r\nimport { IconButton, Tooltip, Typography } from \"@material-ui/core\";\r\nimport PublishTwoToneIcon from '@material-ui/icons/PublishTwoTone';\r\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\r\nimport Grid from \"@material-ui/core/Grid\";\r\ninterface FormProps {\r\n  description: string;\r\n  saveFace: any; //(fileName:Blob) => Promise<void>, // callback taking a string and then dispatching a store actions\r\n}\r\n\r\nexport const UploadFile: React.FC<FormProps> = ({ saveFace, description }) => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = React.useState<File>();\r\n  const handleCapture = ({ target }: any) => {\r\n    setSelectedFile(target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    saveFace(selectedFile);\r\n  };\r\n\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n      <input\r\n        accept=\".xml,.xsd\"\r\n        className={classes.input}\r\n        id=\"document\"\r\n        type=\"file\"\r\n        onChange={handleCapture}\r\n      />\r\n      <Grid wrap=\"nowrap\" alignContent=\"flex-start\" container spacing={1} alignItems=\"center\">\r\n        <Grid item >\r\n          <Tooltip title=\"\">\r\n            <label\r\n              className={classes.label}\r\n              htmlFor=\"document\"\r\n            >\r\n              <IconButton\r\n                className={classes.findPageIcon}\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                title=\"Browse\"\r\n              >\r\n                <FindInPageTwoToneIcon fontSize=\"large\" />\r\n              </IconButton>\r\n              <Typography\r\n                variant=\"body2\"\r\n                className={classes.fileName}\r\n                noWrap\r\n              >\r\n                Choose the file\r\n              </Typography>\r\n            </label>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item  >\r\n        {selectedFile?.name?<IconButton\r\n          className={classes.loadIcon}\r\n          onClick={() => handleSubmit()}\r\n          color=\"primary\"\r\n          aria-label=\"upload file\"\r\n          component=\"span\"\r\n          title=\"Load\"\r\n          >\r\n            <PublishTwoToneIcon fontSize=\"large\" />\r\n          </IconButton>:undefined}\r\n        </Grid>\r\n      </Grid>\r\n       \r\n    </div>\r\n  );\r\n};\r\n","import { ItemActionType } from \"../action-types\";\r\nimport { ItemAction } from \"../actions/item-actions\";\r\n\r\ninterface ItemState {\r\n  error: string | null;\r\n  data: Element | null;\r\n  loading: boolean;\r\n  markedForDeletionList: string[] | undefined;\r\n}\r\n\r\nconst initialState: ItemState = {\r\n  data: null,\r\n  error: null,\r\n  loading: false,\r\n  markedForDeletionList: undefined,\r\n};\r\nconst reducer = (\r\n  state: ItemState = initialState,\r\n  action: ItemAction\r\n): ItemState => {\r\n  switch (action.type) {\r\n    case ItemActionType.SEARCH_ITEM:\r\n      return {\r\n        loading: true,\r\n        error: null,\r\n        data: null,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.SEARCH_ITEM_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        data: action.payload,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.SEARCH_ITEM_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        data: null,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.REST_ITEM:\r\n      return { loading: false, error: null, data: null,markedForDeletionList:undefined  };\r\n    case ItemActionType.MARKED_FOR_DELETION:\r\n      return { ...state,markedForDeletionList:action.payload  };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export enum LixiAttributeEnum {\r\n  type = \"type\",\r\n  name = \"name\",\r\n  use = \"use\",\r\n  minOccurs = \"minOccurs\",\r\n  maxOccurs = \"maxOccurs\",\r\n  value = \"value\",\r\n  base = \"base\",\r\n}\r\n\r\nexport enum LixiTagEnum {\r\n  element = \"xs:element\",\r\n  annotation = \"xs:annotation\",\r\n  complexType = \"xs:complexType\",\r\n  choice = \"xs:choice\",\r\n  sequence = \"xs:sequence\",\r\n  attribute = \"xs:attribute\",\r\n  simpleType = \"xs:simpleType\",\r\n  restriction = \"xs:restriction\",\r\n  documentation = \"xs:documentation\",\r\n  path = \"lx:path\",\r\n  label = \"lx:label\",\r\n  transactions = \"li:transactions\",\r\n  enumeration = \"xs:enumeration\",\r\n  target = \"lx:target\",\r\n  references = \"lx:references\",\r\n}\r\n\r\nexport enum LixiLocalNameEnum {\r\n  element = \"element\",\r\n  complexType = \"complexType\",\r\n  choice = \"choice\",\r\n  sequence = \"sequence\",\r\n  attribute = \"attribute\",\r\n  simpleType = \"simpleType\",\r\n  restriction = \"restriction\",\r\n  annotation = \"annotation\",\r\n  documentation = \"documentation\",\r\n  path = \"path\",\r\n  label = \"label\",\r\n  transactions = \"transactions\",\r\n  enumeration = \"enumeration\",\r\n}\r\n","import { CustomizationActionType } from \"../action-types\";\r\nimport { CustomizationAction, SubSchema } from \"../actions/customiser-actions\";\r\n\r\ninterface CustomizationState {\r\n  customization: Element | undefined;\r\n  // customisedItem: Element | undefined;\r\n  loading: boolean;\r\n  error: string | null;\r\n  subSchema: SubSchema | undefined;\r\n  // customHeading?: string | undefined;\r\n  metaData: File | undefined;\r\n}\r\n\r\nconst initialState: CustomizationState = {\r\n  customization: undefined,\r\n  // customisedItem: undefined,\r\n  subSchema: { transactionType: undefined, transactionVersion: undefined },\r\n  error: null,\r\n  loading: false,\r\n  metaData: undefined,\r\n};\r\n\r\nconst reducer = (\r\n  state: CustomizationState = initialState,\r\n  action: CustomizationAction\r\n): CustomizationState => {\r\n  switch (action.type) {\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION:\r\n      return {\r\n        ...state,\r\n        customization: undefined,\r\n        // customisedItem: undefined,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        customization: action.payload.doc,\r\n        // customisedItem: undefined,\r\n        metaData: action.payload.file,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION_ERROR:\r\n      return {\r\n        ...state,\r\n        customization: undefined,\r\n        metaData: undefined,\r\n        // customisedItem: undefined,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CustomizationActionType.CUSTOMIZE_SUB_SCHEMA:\r\n      return { ...state, subSchema: action.payload };\r\n    case CustomizationActionType.RESET_SUB_SCHEMA:\r\n      return {\r\n        ...state,\r\n        // customHeading: undefined,\r\n        subSchema: undefined,\r\n        customization: undefined,\r\n        // customisedItem: undefined,\r\n      };\r\n    case CustomizationActionType.UPDATE_CUSTOMISATION:\r\n      return {\r\n        ...state,\r\n        customization: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { SchemaActionType } from \"../action-types\";\r\nimport { SchemaActions } from \"../actions/schema-actions\";\r\n\r\ninterface SchemaState {\r\n  loading: boolean;\r\n  schema: Document | undefined;\r\n  error: string | null;\r\n  metaData: File | undefined;\r\n}\r\n\r\nconst initialState: SchemaState = {\r\n  error: null,\r\n  loading: false,\r\n  schema: undefined,\r\n  metaData: undefined,\r\n};\r\n\r\nconst reducer = (\r\n  state: SchemaState = initialState,\r\n  action: SchemaActions\r\n): SchemaState => {\r\n  switch (action.type) {\r\n    case SchemaActionType.UPLOAD_SCHEMA:\r\n      return {\r\n        loading: true,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: null,\r\n      };\r\n    case SchemaActionType.UPLOAD_SCHEMA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        metaData: action.payload.file,\r\n        schema: action.payload.doc,\r\n      };\r\n    case SchemaActionType.UPLOAD_SCHEMA_ERROR:\r\n      return {\r\n        loading: false,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: action.payload,\r\n      };\r\n    case SchemaActionType.RESET_SCHEMA:\r\n      return {\r\n        loading: false,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport itemReducer from \"./ItemReducer\";\r\nimport customiserReducer from \"./customiserReducer\";\r\nimport SchemaReducer from \"./schemaReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  item: itemReducer,\r\n  customizer: customiserReducer,\r\n  schema: SchemaReducer,\r\n});\r\n\r\nexport default reducers;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers\";\r\n\r\nexport const store = createStore(reducer, {}, applyMiddleware(thunk));\r\n","import { LixiTagEnum } from \"../enums/lixiEnums\";\r\ntype NameSpace = {\r\n  [ns: string]: string;\r\n};\r\n\r\nexport const nameSpaceResolver: XPathNSResolver = (\r\n  prefix: string | null\r\n): string | null => {\r\n  const ns: NameSpace = {\r\n    xs: \"http://www.w3.org/2001/XMLSchema\",\r\n    lx: \"lixi.org.au/schema/appinfo_elements\",\r\n    li: \"lixi.org.au/schema/appinfo_instructions\",\r\n  };\r\n  return prefix ? ns[prefix] : null;\r\n};\r\n\r\n// const parser = new DOMParser();\r\n// export const parsedXml = parser.parseFromString(master_schema, \"text/xml\");\r\n\r\n// export const path = parsedXml.evaluate(\r\n//   \"//lx:path[1]/text()\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.UNORDERED_NODE_ITERATOR_TYPE,\r\n//   null\r\n// );\r\n\r\n// export const result = parsedXml.evaluate(\r\n//   \"/xs:schema/xs:element\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.ANY_TYPE,\r\n//   null\r\n// );\r\n\r\n// export const packageElement = parsedXml.evaluate(\r\n//   \"/xs:schema/xs:element[@name='Package']\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.ANY_TYPE,\r\n//   null\r\n// );\r\n\r\nexport class XmlUtil {\r\n  private parsedDoc: Document;\r\n  constructor(parsedDoc: Document) {\r\n    this.parsedDoc = parsedDoc;\r\n  }\r\n\r\n  getPathOfAllElements() {\r\n    const elementsPath = [];\r\n    const elements = this.parsedDoc.getElementsByTagName(LixiTagEnum.element);\r\n    for (const e of Array.prototype.fill(elements)) {\r\n      elementsPath.push(\r\n        e.getElementsByTagName(LixiTagEnum.path)[0].textContent\r\n      );\r\n    }\r\n    return elementsPath;\r\n  }\r\n\r\n  getPathOfAllItems() {\r\n    const itemsPath: string[] = [];\r\n    const result = this.evaluateXpath(\r\n      \"//lx:path[text()]/text()\",\r\n      this.parsedDoc\r\n    );\r\n    let path = result?.iterateNext();\r\n    while (path) {\r\n      itemsPath.push(path.textContent as string);\r\n      path = result?.iterateNext();\r\n    }\r\n\r\n    return itemsPath;\r\n  }\r\n\r\n  getPathOfAllItemsInATransaction(subSchema: string) {\r\n    const itemsPath: string[] = [];\r\n    const result = this.evaluateXpath(\r\n      \"//lx:path/following-sibling::li:transactions\",\r\n      this.parsedDoc\r\n    );\r\n    let transaction = result?.iterateNext();\r\n    while (transaction) {\r\n      const transactions = transaction.textContent?.split(\",\");\r\n      if (transactions && transactions.includes(subSchema)) {\r\n        itemsPath.push(\r\n          transaction.parentElement?.children[0].textContent as string\r\n        );\r\n      }\r\n      transaction = result?.iterateNext();\r\n    }\r\n    return itemsPath;\r\n  }\r\n\r\n  evaluateXpath(xpath: string, contextNode: Node | Document): XPathResult {\r\n    contextNode = !contextNode ? this.parsedDoc : contextNode;\r\n    return this.parsedDoc.evaluate(\r\n      xpath,\r\n      contextNode,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_TYPE,\r\n      null\r\n    );\r\n  }\r\n\r\n  getItemByPath(path: string): Element | undefined | null {\r\n    const xpathResult = this.parsedDoc.evaluate(\r\n      `//lx:path[text()='${path}'][1]`,\r\n      this.parsedDoc,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n      null\r\n    );\r\n    return xpathResult.singleNodeValue?.parentElement?.parentElement\r\n      ?.parentElement;\r\n  }\r\n  getSchemaDetails(): Element | undefined {\r\n    const xpathResult = this.parsedDoc.evaluate(\r\n      \"//lx:schemadetail\",\r\n      this.parsedDoc,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n      null\r\n    );\r\n    return xpathResult.singleNodeValue?.parentElement?.children[0];\r\n  }\r\n\r\n  getTransactions() {\r\n    const xpathResult = this.parsedDoc.evaluate(\r\n      \"//lx:schemadetail\",\r\n      this.parsedDoc,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n      null\r\n    );\r\n    const appInfo = xpathResult.singleNodeValue?.parentElement?.children;\r\n    const transaction: {\r\n      transactionType: string;\r\n      transactionVersion: string;\r\n    }[] = [];\r\n    Array.prototype.map.call(appInfo, (i: Element) => {\r\n      if (i.localName === \"subschema\") {\r\n        transaction?.push({\r\n          transactionType: i.getAttribute(\"transactiontype\") as string,\r\n          transactionVersion: i.getAttribute(\"version\") as string,\r\n        });\r\n      }\r\n    });\r\n    return transaction;\r\n  }\r\n}\r\n","import { ItemActionType } from \"../action-types\";\r\n// import { master_schema } from \"../../assets/LIXI-Master-Schema\";\r\n// import * as JsSearch from \"js-search\";\r\nimport { Dispatch } from \"redux\";\r\nimport { \r\n  // parsedXml, \r\n  XmlUtil \r\n} from \"../../util/nameSpaces\";\r\nimport { ItemAction } from \"../actions/item-actions\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport const searchItem = (item: string) => {\r\n  const lixiItem = (schema: Document): Promise<Element | undefined | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const xmlUtile = new XmlUtil(schema);\r\n      if (item) {\r\n        resolves(xmlUtile.getItemByPath(item));\r\n      }\r\n    });\r\n  };\r\n  return async (dispatch: Dispatch<ItemAction>, getState: () => RootState) => {\r\n    \r\n    dispatch({\r\n      type: ItemActionType.SEARCH_ITEM,\r\n    });\r\n    try {\r\n      const sch = getState().schema.schema;;\r\n      if (!sch)  return;;\r\n      const element = (await lixiItem(sch)) as Element;\r\n      dispatch({\r\n        type: ItemActionType.SEARCH_ITEM_SUCCESS,\r\n        payload: element,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ItemActionType.SEARCH_ITEM_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetItem = () => {\r\n  return (dispatch: Dispatch<ItemAction>) => {\r\n    dispatch({\r\n      type: ItemActionType.REST_ITEM,\r\n    });\r\n  };\r\n};\r\n\r\nexport const markedForDeletion = (markedForDeletionList: string[]) => {\r\n  return (dispatch: Dispatch<ItemAction>) => {\r\n    dispatch({\r\n      type: ItemActionType.MARKED_FOR_DELETION,\r\n      payload: [...markedForDeletionList],\r\n    });\r\n  };\r\n};\r\n","import { CustomizationActionType } from \"../action-types\";\r\nimport { CustomizationAction, SubSchema } from \"../actions/customiser-actions\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"..\";\r\n\r\n\r\nexport const customizeSubSchema = (subSchema: SubSchema) => {\r\n  return (\r\n    dispatch: Dispatch<CustomizationAction>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: CustomizationActionType.CUSTOMIZE_SUB_SCHEMA,\r\n      payload: subSchema,\r\n    });\r\n  };\r\n};\r\n\r\nexport const resetCustomizeSubSchema = () => {\r\n  return (\r\n    dispatch: Dispatch<CustomizationAction>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: CustomizationActionType.RESET_SUB_SCHEMA,\r\n    });\r\n  };\r\n};\r\n\r\nexport const uploadExistingCustomization = (file: File) => {\r\n  const readExistingCustomization = (): Promise<ArrayBuffer | string | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        resolves(reader.result);\r\n      };\r\n      reader.onerror = rejects;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const parsExistingCustomization = (customization: string): Promise<Document> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const parser = new DOMParser();\r\n      const parsedCustomization = parser.parseFromString(\r\n        customization,\r\n        \"text/xml\"\r\n      );\r\n      resolves(parsedCustomization);\r\n    });\r\n  };\r\n\r\n  return async (dispatch: Dispatch<CustomizationAction>) => {\r\n    dispatch({\r\n      type: CustomizationActionType.UPLOAD_CUSTOMIZATION,\r\n    });\r\n    try {\r\n      const existingSchema = await readExistingCustomization();\r\n      if (existingSchema) {\r\n        const existingCustomization = await parsExistingCustomization(existingSchema?.toString());\r\n        dispatch({\r\n          type: CustomizationActionType.UPLOAD_CUSTOMIZATION_SUCCESS,\r\n          payload: {\r\n            doc: existingCustomization.getElementsByTagName(\r\n              \"Customisations\"\r\n            )[0],\r\n            file: file,\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CustomizationActionType.UPLOAD_CUSTOMIZATION_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCustomisation = (customisation: Element) => {\r\n  return (dispatch: Dispatch<CustomizationAction>) => {\r\n    dispatch({\r\n      type: CustomizationActionType.UPDATE_CUSTOMISATION,\r\n      payload: customisation,\r\n    });\r\n  };\r\n};","import { SchemaActionType } from \"../action-types\";\r\n// import { master_schema } from \"../../assets/LIXI-Master-Schema\";\r\n// import * as JsSearch from \"js-search\";\r\nimport { Dispatch } from \"redux\";\r\n// import { parsedXml, XmlUtil } from \"../../util/nameSpaces\";\r\nimport { SchemaActions } from \"../actions/schema-actions\";\r\nimport { RootState } from \"../reducers\";\r\n// import { render } from \"@testing-library/react\";\r\n\r\nexport const uploadBaseSchema = (file: File) => {\r\n  const readBaseSchema = (): Promise<ArrayBuffer | string | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        resolves(reader.result);\r\n      };\r\n      reader.onerror = rejects;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const parsBaseSchema = (baseSchema: string): Promise<Document> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const parser = new DOMParser();\r\n      const parsedBaseSchema = parser.parseFromString(baseSchema, \"text/xml\");\r\n      resolves(parsedBaseSchema);\r\n    });\r\n  };\r\n\r\n  return async (\r\n    dispatch: Dispatch<SchemaActions>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: SchemaActionType.UPLOAD_SCHEMA,\r\n    });\r\n    try {\r\n      const baseSchema = await readBaseSchema();\r\n      if (baseSchema) {\r\n        const schema = await parsBaseSchema(baseSchema?.toString());\r\n        dispatch({\r\n          type: SchemaActionType.UPLOAD_SCHEMA_SUCCESS,\r\n          payload: { doc: schema, file: file },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SchemaActionType.UPLOAD_SCHEMA_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetBaseSchema = () => {\r\n  return (dispatch: Dispatch<SchemaActions>) => {\r\n    try {\r\n      dispatch({\r\n        type: SchemaActionType.RESET_SCHEMA,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SchemaActionType.UPLOAD_SCHEMA_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreator } from \"../redux\";\r\n\r\nexport const useAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(actionCreator, dispatch);\r\n};\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from \"../redux\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    uploadContainer: {\r\n      maxWidth: \"75ch\",\r\n      minWidth: \"15rem\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      marginTop: \"1rem\",\r\n      padding: \"0.2rem 0.5rem\",\r\n      height: \"max-content\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    upload: {\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"80%\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    actionsContainer: {\r\n      margin: theme.spacing(1, 0, 1, 0),\r\n    },\r\n    nextButton: {\r\n      marginLeft: \"0.5rem\",\r\n    },\r\n    fileDetailHeaderRow:{\r\n      backgroundColor:theme.palette.primary.main,\r\n    },\r\n    fileDetailHeaderCell:{\r\n      \r\n      color:theme.palette.getContrastText(theme.palette.primary.main)\r\n    }\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// import { SubSchemaMenu } from \"../../sub-schema-menu/SubSchemaMenu\";\r\nimport { UploadFile } from \"../../upload-file/UploadFile\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\n\r\nimport { useStyles } from \"./uploadSchemaStepStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\ninterface IUploadSchemaStep {\r\n  handelNextClicked: () => void;\r\n}\r\n\r\nexport const UploadSchemaStep: React.FC<IUploadSchemaStep> = ({\r\n  handelNextClicked,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { uploadBaseSchema } = useAction();\r\n  const { schema,metaData } = useTypedSelector((state) => state.schema);\r\n\r\n  const fileSize = React.useMemo(()=>{\r\n    if (!metaData?.size) return\r\n    if (metaData?.size === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    \r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(metaData?.size) / Math.log(k));\r\n\r\n    return parseFloat((metaData?.size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },[metaData?.size])\r\n\r\n  return (\r\n    <>\r\n      <Box maxWidth=\"75ch\">\r\n        <Typography>\r\n          LIXI base schema must be uploaded.\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.uploadContainer}>\r\n       \r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={12} sm={12}>\r\n              <UploadFile\r\n                saveFace={(file: File) => uploadBaseSchema(file)}\r\n                description={\"Click to upload LIXI Base/Transaction Schema\"}\r\n              />\r\n            </Grid>\r\n            \r\n          <Collapse in={!!metaData}>\r\n            <Grid item xs={12}>\r\n              <TableContainer component={Paper}>\r\n              <Table  aria-label=\"file table\" size=\"small\">\r\n                <caption>File Details</caption>\r\n                  <TableHead className={classes.fileDetailHeaderRow}>\r\n                    <TableRow  >\r\n                      <TableCell className={classes.fileDetailHeaderCell} variant=\"head\" align=\"left\" >Name</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"left\">Last Modified</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Size</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Type</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell scope=\"row\" align=\"left\">{metaData?.name}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"left\">{metaData?.lastModified?new Date(metaData?.lastModified).toString():undefined}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"center\">{fileSize}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"center\">{metaData?.type}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n                <div className={classes.actionsContainer}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handelNextClicked}\r\n                    disabled={schema ? false : true}\r\n                    className={classes.nextButton}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n          </Collapse>\r\n            </Grid>\r\n        \r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    uploadContainer: {\r\n      maxWidth: \"75ch\",\r\n      minWidth: \"15rem\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      marginTop: \"1rem\",\r\n      padding: \"0.2rem 0.5rem\",\r\n      height: \"max-content\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    upload: {\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"80%\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    actionsContainer: {\r\n      display:\"flex\",\r\n      margin: theme.spacing(1, 0, 1, 0),\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        margin: theme.spacing(1, 1, 1, 1),\r\n        flexDirection:\"column\",\r\n      }\r\n      \r\n      // width: \"max-content\",\r\n    },\r\n    button: {\r\n      marginLeft: \"0.1rem\",\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        marginTop: \"0.1rem\",\r\n\r\n      }\r\n    },\r\n    fileDetailHeaderRow:{\r\n      backgroundColor:theme.palette.primary.main,\r\n    },\r\n    fileDetailHeaderCell:{\r\n      \r\n      color:theme.palette.getContrastText(theme.palette.primary.main)\r\n    }\r\n    \r\n  })\r\n);\r\n","import React from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n// import ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { UploadFile } from \"../../upload-file/UploadFile\";\r\nimport { useStyles } from \"./uploadCustomisationInstructionStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\n// import ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\ninterface IUploadCustomisationInstruction {\r\n  handelBack: () => void;\r\n  handelSkip: () => void;\r\n  handelNext: () => void;\r\n  activeStep: number;\r\n}\r\n\r\nexport const UploadCustomisationInstruction: React.FC<IUploadCustomisationInstruction> = ({\r\n  handelBack,\r\n  handelSkip,\r\n  handelNext,\r\n  activeStep,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { uploadExistingCustomization } = useAction();\r\n  const { metaData } = useTypedSelector((state) => state.customizer);\r\n\r\n  const fileSize = React.useMemo(()=>{\r\n    if (!metaData?.size) return\r\n    if (metaData?.size === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    \r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(metaData?.size) / Math.log(k));\r\n\r\n    return parseFloat((metaData?.size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },[metaData?.size])\r\n  return (\r\n    <>\r\n      <Box maxWidth=\"75ch\">\r\n        <Typography>\r\n          If you already have an existing customisation instruction file you can\r\n          upload it here, otherwise a new customisation instruction file will be\r\n          created.\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.uploadContainer}>\r\n        \r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={12} sm={12}>\r\n              <UploadFile\r\n                saveFace={(file: File) => uploadExistingCustomization(file)}\r\n                description={\"Click to upload an existing customisation file\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Collapse in={!!metaData}>\r\n            <TableContainer component={Paper}>\r\n            <Table  aria-label=\"file table\" size=\"small\">\r\n              <caption>File Details</caption>\r\n                <TableHead className={classes.fileDetailHeaderRow}>\r\n                  <TableRow  >\r\n                    <TableCell className={classes.fileDetailHeaderCell} variant=\"head\" align=\"left\" >Name</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"left\">Last Modified</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Size</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Type</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow >\r\n                    <TableCell scope=\"row\" align=\"left\">{metaData?.name}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"left\">{metaData?.lastModified?new Date(metaData?.lastModified).toString():undefined}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"center\">{fileSize}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"center\">{metaData?.type}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                </Collapse>\r\n          </Grid>\r\n            <Grid item>\r\n                  <div className={classes.actionsContainer}>\r\n                    <Button\r\n                      startIcon={<ArrowBackIosIcon />}\r\n                      size=\"small\"\r\n                      disabled={activeStep === 0}\r\n                      onClick={handelBack}\r\n                      className={classes.button}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n          </Grid>\r\n        \r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./verticalStepperStyle\";\r\n// import { useAction } from \"../../hooks/useActions\";\r\nimport { UploadSchemaStep } from \"./upload-schema-step/UploadSchemaStep\";\r\nimport { UploadCustomisationInstruction } from \"./upload-customisation-instruction/UploadCustomisationInstruction\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nexport const VerticalLinearStepper: React.FC = () => {\r\n  const labelProps: { optional?: React.ReactNode } = {\r\n    optional: <Typography variant=\"caption\">Optional</Typography>,\r\n  };\r\n \r\n\r\n  // const {\r\n  //   resetBaseSchema,\r\n  //   resetItem,\r\n  //   resetCustomizeSubSchema,\r\n  // } = useAction();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [stepProps, setStepProp] = React.useState<{ completed: boolean } | {}>(\r\n    {}\r\n  );\r\n  const classes = useStyles();\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  // const handleReset = () => {\r\n  //   setActiveStep(0);\r\n  //   setStepProp({});\r\n  //   resetBaseSchema();\r\n  //   resetItem();\r\n  //   resetCustomizeSubSchema();\r\n  // };\r\n\r\n  const handleSkip = () => {\r\n    setStepProp({ completed: false });\r\n    handleNext();\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline/>\r\n      <Stepper className={classes.stepper} activeStep={activeStep} orientation=\"vertical\">\r\n        <Step>\r\n        <StepLabel>{\"Upload LIXI Base Schema\"}</StepLabel>\r\n        <StepContent>\r\n            <UploadSchemaStep handelNextClicked={handleNext}  />\r\n        </StepContent>\r\n        </Step>\r\n        <Step {...stepProps}>\r\n          <StepLabel {...labelProps}>\r\n            <Typography variant=\"caption\">\r\n              Upload an existing customisation file\r\n            </Typography>\r\n          </StepLabel>\r\n          <StepContent>\r\n            <UploadCustomisationInstruction \r\n              handelBack={handleBack} \r\n              activeStep={activeStep} \r\n              handelSkip={handleSkip} \r\n              handelNext={handleNext}\r\n            />\r\n           \r\n          </StepContent>\r\n        </Step>\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n","export const options = { indent: 4, newline: \"\\n\" };\r\nexport const customTheme = {\r\n  tagColor: \"Orange\",\r\n  textColor: \"#FFFFFF\",\r\n  separatorColor: \"Orange\",\r\n};\r\nexport const customThemeVsCode = {\r\n  tagColor: \"#03a9f4\",\r\n  attributeKeyColor: \"#fdd835\",\r\n  textColor: \"#FFFFFF\",\r\n  attributeValueColor: \"#8bc34a\",\r\n  separatorColor: \"#03a9f4\",\r\n};\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      position: \"relative\",\r\n      overflow: \"scroll\",\r\n      backgroundColor: \"#444\",\r\n      maxHeight: \"100vh\",\r\n      marginTop: \"0.5rem\",\r\n      borderRadius: \"0.1rem\",\r\n    },\r\n    header: {\r\n      position: \"sticky\",\r\n      top: \"0\",\r\n      right: \"0\",\r\n      left: \"0\",\r\n      padding: \"0.5rem 1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#333\",\r\n      marginBottom: \"1rem\",\r\n      borderRadius: \"0.1rem\",\r\n      width: \"inherit\",\r\n      boxShadow: \"0.3rem 0.4rem #555\",\r\n      color: theme.palette.getContrastText(\"#333\"),\r\n    },\r\n    downloadLink: {\r\n      color: theme.palette.secondary.light,\r\n      textDecoration: \"none\",\r\n    },\r\n  })\r\n);\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport prettifyXml from \"prettify-xml\";\r\nimport React, { Fragment } from \"react\";\r\nimport XMLViewer from \"react-xml-viewer\";\r\nimport { customThemeVsCode, options } from \"./itemXMLViewerSettings\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { useStyles } from \"./itemXMLViewerStyle\";\r\n\r\ninterface IItemXMLViewer {\r\n  itemXML: Element | null | undefined;\r\n  role?: \"download\" | \"view\";\r\n}\r\n\r\nexport const ItemXMLViewer: React.FC<IItemXMLViewer> = ({ itemXML, role }) => {\r\n  const classes = useStyles();\r\n  const serializer = new XMLSerializer();\r\n  if (itemXML) {\r\n    const xmlString = serializer.serializeToString(itemXML);\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h5\">\r\n            {(!role || role ===   \"download\")?\"Customisation Instructions\":\"Item Instruction\"}\r\n          </Typography>\r\n          {(!role || role ===   \"download\") && (\r\n          (\r\n          (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  startIcon={<GetAppIcon />}\r\n                >\r\n                  <div>\r\n                    <DownloadLink\r\n                      label=\"Download\"\r\n                      filename=\"customisation.xml\"\r\n                      exportFile={() => Promise.resolve(xmlString)}\r\n                      style={{ color: \"pink\", textDecoration: \"none\" }}\r\n                    />\r\n                  </div>\r\n                </Button>\r\n          )\r\n          )\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <XMLViewer\r\n            xml={prettifyXml(xmlString, options)}\r\n            theme={customThemeVsCode}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Fragment></Fragment>;\r\n  }\r\n};\r\n","export class Customiser {\r\n  customisation: Element;\r\n  path: string | undefined = undefined;\r\n  customiseItem: Element;\r\n  excerpt: string = \"\";\r\n  documentation: string = \"\";\r\n  constructor(customisation: Element | undefined = undefined, path?: string) {\r\n    this.customiseItem = this._customiseItemStub();\r\n    if (path) {\r\n      this.path = path;\r\n    }\r\n    if (customisation) {\r\n      this.customisation = customisation.cloneNode(true) as Element;\r\n      \r\n    } else {\r\n      this.customisation = this._customisationStub();\r\n    }\r\n  }\r\n\r\n  itemPath() {\r\n    if (this.path) {\r\n      const doc = Customiser.docStub();\r\n      const path = doc.createElement(\"Path\");\r\n      path.textContent = this.path;\r\n      this.customiseItem.append(path);\r\n    }\r\n  }\r\n\r\n  exclude() {\r\n    if (this.ExcludedItem() || !this.path) return;\r\n    this.removeCustomisedItem();\r\n    const doc = Customiser.docStub();\r\n    this.customiseItem.setAttribute(\"Exclude\", \"Yes\");\r\n    const path = doc.createElement(\"Path\");\r\n    path.textContent = this.path;\r\n    this.customiseItem.append(path);\r\n    this.customisation.append(this.customiseItem);\r\n    return this.customiseItem;\r\n  }\r\n  include() {\r\n    const excludedPath: Element = this.ExcludedItem();\r\n    if (excludedPath && excludedPath.parentElement) {\r\n      this.customisation.removeChild(excludedPath.parentElement);\r\n    }\r\n  }\r\n\r\n  ExcludedItem(): Element {\r\n    const allPath = Array.from(this.customisation?.getElementsByTagName(\"Path\"));\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        if (p.parentElement?.getAttribute(\"Exclude\") === \"Yes\") {\r\n          return p.textContent === this.path;\r\n        }\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n\r\n  _customiseItemStub(): Element {\r\n    const doc = Customiser.docStub();\r\n    return doc.createElement(\"CustomiseItem\");\r\n  }\r\n\r\n  _customisationStub(): Element {\r\n    const parser = new DOMParser();\r\n    const customisationStub = `\r\n    <Customisations \r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n        xsi:noNamespaceSchemaLocation=\"LIXI-Customisation-By-Restriction.xsd\" \r\n        LIXICode=\"LIXI\" CustomisationCode=\"\" \r\n        LIXITransactionType=\"\" \r\n        customHeading=\"Custom Heading for All Customised Items\">\r\n    </Customisations>`;\r\n    const parsedXML = parser.parseFromString(customisationStub, \"text/xml\");\r\n    return parsedXML.getElementsByTagName(\"Customisations\")[0];\r\n  }\r\n\r\n  getCustomisedItem() {\r\n    const allPath = Array.from(this.customisation.getElementsByTagName(\"Path\"));\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        if (!p.parentElement?.getAttribute(\"Exclude\")) {\r\n          return p.textContent === this.path;\r\n        }\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n\r\n  getTouchedItem() {\r\n    const allPath = Array.from(this.customisation.getElementsByTagName(\"Path\"));\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        return p.textContent === this.path;\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n  removeCustomisedItem() {\r\n    const existingCustomisedItem = this.getCustomisedItem()?.parentElement;\r\n    if (existingCustomisedItem) {\r\n      this.customisation.removeChild(existingCustomisedItem);\r\n    }\r\n  }\r\n\r\n  static docStub(): Document {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(\"<root></root>\", \"text/xml\");\r\n  }\r\n\r\n  customExcerpt() {\r\n    if (!this.excerpt) return;\r\n    const doc = Customiser.docStub();\r\n    const customExcerpt = doc.createElement(\"CustomExcerpt\");\r\n    customExcerpt.textContent = this.excerpt.trim();\r\n    this.customiseItem.append(customExcerpt);\r\n  }\r\n  customDocumentation() {\r\n    if (!this.documentation) return;\r\n    const doc = Customiser.docStub();\r\n    const customDocumentation: Element = doc.createElement(\r\n      \"CustomDocumentation\"\r\n    );\r\n    customDocumentation.textContent = this.documentation.trim();\r\n    this.customiseItem.append(customDocumentation);\r\n  }\r\n\r\n  affectedDecedents() {\r\n    if (!this?.path) return;\r\n    const path = this.path;\r\n    const allPath = Array.from(this.customisation?.getElementsByTagName(\"Path\"));\r\n    const affectedItems: Element[] = Array.prototype.filter.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        return p.textContent?.startsWith(path || \"\");\r\n      }\r\n    );\r\n\r\n    return affectedItems;\r\n  }\r\n  removeCustomisation(paths: string[]){\r\n    console.log(\"paths:\", paths);\r\n    const allCustomisedPaths = Array.from(this.customisation.getElementsByTagName(\"Path\"));\r\n\r\n\r\n    Array.prototype.forEach.call(allCustomisedPaths, (p: Element) => {\r\n      console.log(\"path:\",  p.textContent);;\r\n      if (p) {\r\n        if (p?.textContent && paths.includes(p?.textContent)) {\r\n          if (p.parentElement) {\r\n            this.customisation.removeChild(p?.parentElement);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { LixiLocalNameEnum, LixiTagEnum } from \"../enums/lixiEnums\";\r\ninterface ILixiBase {\r\n  element: Element;\r\n  annotated: boolean;\r\n}\r\nexport class LixiBase implements ILixiBase {\r\n  readonly element: Element;\r\n  readonly annotated: boolean;\r\n  constructor(element: Element) {\r\n    this.element = element.cloneNode(true) as Element;\r\n    this.annotated =\r\n      this.element.children[0].localName === LixiLocalNameEnum.annotation;\r\n  }\r\n\r\n  get transactions() {\r\n    if (this.annotated) {\r\n      return this.element.children[0]\r\n        .getElementsByTagName(LixiTagEnum.transactions)[0]\r\n        .textContent?.split(\",\");\r\n    }\r\n    return [];\r\n  }\r\n\r\n  get path() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(LixiTagEnum.path)[0]\r\n        .textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get label() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(LixiTagEnum.label)[0]\r\n        .textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n  get documentation() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(\r\n        LixiTagEnum.documentation\r\n      )[0].textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  rootDocument() {\r\n    return this.element.ownerDocument;\r\n  }\r\n\r\n  get references() {\r\n    const referenceTargets: string[] = [];\r\n    if (\r\n      !this.annotated ||\r\n      this.element.localName !== \"attribute\" ||\r\n      this.element.getAttribute(\"type\") !== \"referenceType\"\r\n    ) {\r\n      return undefined;\r\n    }\r\n    const targets = this.element.children[0].getElementsByTagName(\r\n      LixiTagEnum.target\r\n    );\r\n    Array.prototype.map.call(targets, (t) => {\r\n      referenceTargets.push(t.textContent);\r\n    });\r\n    return referenceTargets;\r\n  }\r\n\r\n  get baseRestriction() {\r\n    if (this.element.localName === \"simpleType\") {\r\n      const restriction = this.element.children[1];\r\n      return restriction.getAttribute(\"base\");\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get attributes() {\r\n    const attributes: Array<Element> = [];\r\n    const complexType = this.getLixiComplexType();\r\n    if (complexType) {\r\n      Array.from(complexType.children).forEach((child) => {\r\n        if (child.localName === LixiLocalNameEnum.attribute) {\r\n          attributes.push(child);\r\n        }\r\n      });\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n\r\n  getLixiComplexType() {\r\n    const complex: Element[] = [];\r\n    Array.from(this.element.children).forEach((child) => {\r\n      if (child.localName === LixiLocalNameEnum.complexType) {\r\n        complex.push(child);\r\n      }\r\n    });\r\n    return complex[0];\r\n  }\r\n\r\n  get lixiSubElements() {\r\n    const complexType = this.getLixiComplexType();\r\n    const subElements: { [key: string]: Element[] } = {};\r\n    const firstChild = complexType?.firstElementChild;\r\n\r\n    if (firstChild?.localName === LixiLocalNameEnum.sequence) {\r\n      subElements[LixiLocalNameEnum.sequence] = [\r\n        ...Array.from(firstChild.children),\r\n      ];\r\n    } else if (firstChild?.localName === LixiLocalNameEnum.choice) {\r\n      subElements[LixiLocalNameEnum.choice] = [\r\n        ...Array.from(firstChild.children),\r\n      ];\r\n    }\r\n    if (Object.keys(subElements).length > 0) {\r\n      return subElements;\r\n    }\r\n    return subElements;\r\n  }\r\n\r\n  get enumeration() {\r\n    if (this.element.localName === \"simpleType\") {\r\n      const restriction = this.element.children[1];\r\n      if (restriction.getAttribute(\"base\") === \"xs:token\") {\r\n        return [...Array.from(restriction.children)];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { Customiser } from \"./Customiser\";\r\nimport { CustomisedElementType } from \"./customisationTypes\";\r\n\r\nexport class ElementCustomiser extends Customiser {\r\n  object = {} as CustomisedElementType;\r\n  fixedList:boolean\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: CustomisedElementType\r\n  ) {\r\n    super(customisation, path);\r\n    this.fixedList = !!(values?.elements.length || values?.attributes.length)\r\n    this.object = values || {\r\n      includeAllElements: true,\r\n      includeAllAttributes: true,\r\n      elements: [],\r\n      attributes: [],\r\n      heading: \"\",\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      newMin: \"\",\r\n      newMax: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      includeAllAttributes,\r\n      includeAllElements,\r\n      newMin,\r\n      newMax,\r\n      documentation,\r\n      excerpt,\r\n    } = this.object;\r\n    if (\r\n      includeAllAttributes &&\r\n      includeAllElements &&\r\n      !newMax &&\r\n      !newMin &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.customMaxOccurs();\r\n    this.customMinOccurs();\r\n    this.customAttributes();\r\n    this.customElements();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  customMinOccurs() {\r\n    if (this.object.newMin) {\r\n      this.customiseItem.setAttribute(\"CustomMinOccurs\", \"Yes\");\r\n      const doc = Customiser.docStub();\r\n      const customMinOccurs = doc.createElement(\"CustomMinOccurs\");\r\n      customMinOccurs.textContent = this.object.newMin.toString();\r\n      this.customiseItem.append(customMinOccurs);\r\n    }\r\n  }\r\n  customMaxOccurs() {\r\n    if (this.object.newMax) {\r\n      this.customiseItem.setAttribute(\"CustomMaxOccurs\", \"Yes\");\r\n      const doc = Customiser.docStub();\r\n      const customMaxOccurs = doc.createElement(\"CustomMaxOccurs\");\r\n      customMaxOccurs.textContent = this.object.newMax.toString();\r\n      this.customiseItem.append(customMaxOccurs);\r\n    }\r\n  }\r\n\r\n  customAttributes() {\r\n    if (!this.object.attributes.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.attributes.forEach((att, idx) => {\r\n      const attribute = doc.createElement(\"Attribute\");\r\n      attribute.textContent = att;\r\n      this.customiseItem.append(attribute);\r\n    });\r\n  }\r\n  customElements() {\r\n    if (!this.object.elements.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.elements.forEach((att, idx) => {\r\n      const element = doc.createElement(\"Element\");\r\n      element.textContent = att;\r\n      this.customiseItem.append(element);\r\n    });\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    if  (this.object.heading)  {\r\n      this.customiseItem.setAttribute(\"customHeading\",  this.object.heading);;\r\n    }\r\n    if (this.object.elements.length || this.object.attributes.length) {\r\n      this.customiseItem.setAttribute(\"Include\", \"Yes\");\r\n    }\r\n    if (this.object.elements.length) {\r\n      // this.customiseItem.setAttribute(\"ExcludeAllElements\", \"No\");\r\n    }\r\n    if (this.object.attributes.length) {\r\n      // this.customiseItem.setAttribute(\"ExcludeAllAttributes\", \"No\");\r\n    }\r\n    if (this.object.includeAllAttributes) {\r\n      // this.customiseItem.setAttribute(\"IncludeAllAttributes\", \"Yes\");\r\n    } else if (!this.object.attributes.length) {\r\n      this.customiseItem.setAttribute(\"ExcludeAllAttributes\", \"Yes\");\r\n    }\r\n    if (this.object.includeAllElements) {\r\n      // this.customiseItem.setAttribute(\"IncludeAllElements\", \"Yes\");\r\n    } else if (!this.object.elements.length) {\r\n      this.customiseItem.setAttribute(\"ExcludeAllElements\", \"Yes\");\r\n    }\r\n    if (\r\n      !this.object.elements.length &&\r\n      this.object.includeAllElements &&\r\n      !this.object.attributes.length &&\r\n      this.object.includeAllAttributes\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !this.object.elements.length &&\r\n      !this.object.includeAllElements &&\r\n      !this.object.attributes.length &&\r\n      !this.object.includeAllAttributes\r\n    ) {\r\n      return this.exclude();\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedEle = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedEle) return this.object;\r\n    this.fixedList = !!customisedEle.getAttribute(\"Include\")\r\n    const heading = customisedEle.getAttribute(\"customHeading\")\r\n    this.object.heading = heading?heading:undefined\r\n    this.object.includeAllAttributes = !(\r\n      customisedEle.getAttribute(\"ExcludeAllAttributes\") === \"Yes\"\r\n    );\r\n      \r\n    this.object.includeAllElements = !(\r\n      customisedEle.getAttribute(\"ExcludeAllElements\") === \"Yes\"\r\n    );\r\n    \r\n    \r\n    Array.prototype.forEach.call(customisedEle.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomMaxOccurs\":\r\n          const newMax = child.textContent;\r\n          this.object.newMax = newMax ? parseInt(newMax) : \"\";\r\n          break;\r\n        case \"CustomMinOccurs\":\r\n          const newMin = child.textContent;\r\n          this.object.newMin = newMin ? parseInt(newMin) : \"\";\r\n          break;\r\n        case \"Attribute\":\r\n            const attribute = child.textContent;\r\n            if (!attribute) break;\r\n            this.object.attributes?.push(attribute);\r\n            break;\r\n        case \"Element\":\r\n          const element = child.textContent;\r\n          if (!element) break;\r\n          this.object.elements?.push(element);\r\n          break;\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent;\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent;\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n  static parentCustomised = (\r\n    path: string,\r\n    customisation: Element,\r\n    type: string\r\n  ): { included: boolean; path: string } | undefined => {\r\n    const parentStatus = {} as { included: boolean; path: string };\r\n\r\n    const pathList = path.split(\".\");\r\n    const pathLeaf = pathList.pop();\r\n    const customiser = new ElementCustomiser(customisation, pathList.join(\".\"));\r\n    const customisedItem = customiser.getTouchedItem()?.parentElement;\r\n    customiser.customisedObject();\r\n    if (customisedItem) {\r\n      if (customisedItem.getAttribute(\"Exclude\")) {\r\n        parentStatus.included = false;\r\n        parentStatus.path = pathList.join(\".\");\r\n        return parentStatus;\r\n      }\r\n      if (!customisedItem.getAttribute(\"Include\")){\r\n        parentStatus.included = true;\r\n        parentStatus.path = pathList.join(\".\");\r\n        return parentStatus;\r\n      }\r\n      if (type === \"element\") {\r\n        if (customisedItem.getAttribute(\"ExcludeAllElements\")) {\r\n            parentStatus.included = false;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          } else {\r\n              if (pathLeaf && customiser.object.elements.includes(pathLeaf)) {\r\n                parentStatus.included = true;\r\n                parentStatus.path = pathList.join(\".\");\r\n                return parentStatus;\r\n              }else{\r\n                parentStatus.included = false;\r\n                parentStatus.path = pathList.join(\".\");\r\n                return parentStatus;\r\n              }\r\n            }\r\n      } else if (type === \"attribute\") {\r\n        if (customisedItem.getAttribute(\"ExcludeAllAttributes\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }else{\r\n          if (pathLeaf && customiser.object.attributes.includes(pathLeaf)) {\r\n            parentStatus.included = true;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          }else{\r\n            parentStatus.included = false;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          }\r\n        }\r\n      } \r\n        pathList.pop();\r\n    }\r\n    while (pathList.length) {\r\n      const pathLeaf = pathList.pop();\r\n      const customiser = new ElementCustomiser(\r\n        customisation,\r\n        pathList.join(\".\")\r\n      );\r\n      const customisedItem = customiser.getTouchedItem()?.parentElement;\r\n      customiser.customisedObject();\r\n      if (customisedItem) {\r\n        if (customisedItem.getAttribute(\"Exclude\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }\r\n\r\n        if (!customisedItem.getAttribute(\"Include\")){\r\n          parentStatus.included = true;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }\r\n        if (customisedItem.getAttribute(\"ExcludeAllElements\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        } else if (pathLeaf && customiser.object.elements.includes(pathLeaf)) {\r\n          parentStatus.included = true;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        } \r\n      }\r\n    }\r\n    return;\r\n  };\r\n    }\r\n\r\n","import Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\r\nimport React from \"react\";\r\nimport { useField, FieldAttributes } from \"formik\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\ntype AppTextFieldProps = { label?: string } & CheckboxProps &\r\n  FieldAttributes<{}>;\r\n\r\nexport const AppCheckBox: React.FC<AppTextFieldProps> = ({\r\n  checked,\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field,meta] = useField<{}>(props);\r\n  if (label)  {\r\n    return (\r\n      <FormControl error={meta.touched && meta.error?true:false }>\r\n        {/* <FormHelperText>{meta.touched && meta.error? meta.error:undefined}</FormHelperText> */}\r\n        <FormControlLabel\r\n          \r\n          style={{ padding: 0,color:meta.touched && meta.error?\"red\":\"inherit\" }}\r\n          control={<Checkbox checked={checked} {...field} {...props} />}\r\n          label={label}\r\n        />\r\n      \r\n      </FormControl>\r\n      \r\n    );\r\n  }  else  {\r\n    return <Checkbox checked={checked} {...field} {...props} />;;\r\n  }\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      // marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport React from \"react\";\r\nimport { AppCheckBox } from \"../formik-mterial-ui/AppCheckBox\";\r\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport { useStyles } from \"./lixiListItemHeaderStyle\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { FieldArrayRenderProps, useFormikContext } from \"formik\";\r\n\r\ninterface IHeaderLixiItem {\r\n  name: \"includeAllElements\" | \"includeAllAttributes\";\r\n  header: string;\r\n  items: (LixiBase | null | undefined)[];\r\n  selectedItemsLength: number;\r\n  toggle: (value:string) => void;\r\n  arrayHelper:FieldArrayRenderProps\r\n}\r\n\r\nexport const LixiListItemHeader: React.FC<IHeaderLixiItem> = ({\r\n  name,\r\n  toggle,\r\n  items,\r\n  selectedItemsLength,\r\n  header,\r\n  arrayHelper:FieldArrayRenderProps\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value,setValue]=React.useState<string>(\"\")\r\n  const {values} = useFormikContext<CustomisedElementType>()\r\n\r\n  React.useEffect(()=>{\r\n    if(selectedItemsLength === items.length ){\r\n      setValue(name)\r\n      values[name] = true\r\n      return\r\n    }\r\n    values[name] = false\r\n    setValue(\"\")\r\n    \r\n  },[items.length, name, selectedItemsLength, value, values])\r\n\r\n  return (\r\n    <ListSubheader\r\n      key={name}\r\n      style={{ marginTop: \"0\", alignItems: \"center\" }}\r\n      className={classes.subItemHeader}\r\n    >\r\n      <ListItemIcon>\r\n        <AppCheckBox\r\n          key={name}\r\n          name={name}\r\n          checked={!!value}\r\n          value={value}\r\n          disableRipple\r\n          onClick={()=>toggle(name)}\r\n          checkedIcon={<DoneOutlinedIcon style={{ color: \"green\" }} />}\r\n          icon={<CloseOutlinedIcon style={{ color: \"red\" }} />}\r\n          indeterminateIcon={\r\n            <IndeterminateCheckBoxTwoToneIcon color=\"primary\" />\r\n          }\r\n          indeterminate={\r\n            selectedItemsLength > 0 && selectedItemsLength < items.length\r\n          }\r\n        />\r\n      </ListItemIcon>\r\n      <ListItemText primary={`Include All ${header}`} />\r\n    </ListSubheader>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: \"rgba(0, 0, 0, 0.87)\",\r\n      // boxShadow: theme.shadows[1],\r\n      fontSize: 16,\r\n    },\r\n    tooltip2: {\r\n      backgroundColor: \"#fff\",\r\n      color: \"rgba(0, 0, 0, 0.87)\",\r\n      maxWidth: 220,\r\n      fontSize: theme.typography.pxToRem(16),\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoTwoToneIcon from \"@material-ui/icons/InfoTwoTone\";\r\nimport { useStyles } from \"./lixiItemToolTipStyle\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\n\r\ninterface IToolTip {\r\n  lixiItem: LixiBase;\r\n  placement:\r\n    | \"top-start\"\r\n    | \"top\"\r\n    | \"top-end\"\r\n    | \"left-start\"\r\n    | \"left\"\r\n    | \"left-end\"\r\n    | \"right-start\"\r\n    | \"right\"\r\n    | \"right-end\"\r\n    | \"bottom-start\"\r\n    | \"bottom\"\r\n    | \"bottom-end\";\r\n}\r\n\r\nexport const LixiItemToolTip: React.FC<IToolTip> = ({\r\n  lixiItem,\r\n  placement,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tooltip\r\n      placement={placement}\r\n      className={classes.tooltip2}\r\n      title={\r\n        <React.Fragment>\r\n          <Typography color=\"inherit\">{lixiItem.label}</Typography>\r\n          {lixiItem.documentation}\r\n        </React.Fragment>\r\n      }\r\n    >\r\n      <InfoTwoToneIcon className={classes.viewItem} fontSize=\"small\" />\r\n    </Tooltip>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItem: {\r\n      height: \"16rem\",\r\n      // maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n\r\n    paper: {\r\n      // backgroundColor: \"transparent\",\r\n      boxShadow: \"1px 1px 3px #BDBDBD\",\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0),\r\n    },\r\n    alert: {\r\n      color: \"#c43e00\",\r\n      \"&:hover\": {\r\n        color: \"#ff8f00\",\r\n      },\r\n    },\r\n    button: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { AppCheckBox } from \"../formik-mterial-ui/AppCheckBox\";\r\nimport CancelPresentationTwoToneIcon from \"@material-ui/icons/CancelPresentationTwoTone\";\r\n// import {CssBaseline} from \"@material-ui/core\"\r\nimport { Formik, Form } from \"formik\";\r\nimport { useStyles } from \"./confirmRemoveItemDialogStyle\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as Yup from \"yup\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\n\r\ninterface IConfirmRemoveItem {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  affected: { path: string; items: string[] } | undefined;\r\n}\r\n\r\nexport const ConfirmRemoveItemDialog: React.FC<IConfirmRemoveItem> = ({\r\n  open,\r\n  affected,\r\n  handleClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { markedForDeletion } = useAction();\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  \r\n  return (\r\n    <Formik\r\n      initialValues={{ agree: false, ...affected }}\r\n      validationSchema={Yup.object().shape({\r\n        agree: Yup.boolean().oneOf([true]),\r\n      })}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(true);\r\n          const deletionList = markedForDeletionList\r\n            ? [...markedForDeletionList]\r\n            : [];\r\n          values.items.forEach((item) => {\r\n            if (!markedForDeletionList?.includes(item)) {\r\n              deletionList.push(item);\r\n            }\r\n          });\r\n          markedForDeletion([...deletionList]);\r\n          setSubmitting(false);\r\n          resetForm();\r\n          handleClose();\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <div>\r\n          <Dialog\r\n            draggable\r\n            BackdropProps={{ classes: { root: classes.root } }}\r\n            PaperProps={{ classes: { root: classes.paper, elevation2: \"5\" } }}\r\n            style={{ boxShadow: \"none\" }}\r\n            open={open}\r\n            onClose={resetForm}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <CssBaseline />\r\n            <DialogTitle\r\n              style={{\r\n                backgroundColor: \"cornsilk\",\r\n                padding: 0,\r\n                boxShadow: \"1px 1px 1px orange\",\r\n              }}\r\n              id=\"form-dialog-title\"\r\n            >\r\n              <Alert\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                severity=\"warning\"\r\n                action={\r\n                  <Tooltip title=\"Cancel\" placement=\"top\">\r\n                    <IconButton\r\n                      onClick={handleClose}\r\n                      aria-label=\"delete\"\r\n                      className={classes.alert}\r\n                      size=\"small\"\r\n                      disableRipple\r\n                    >\r\n                      <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              >\r\n                Excluding{\" \"}\r\n                <em>\r\n                  <strong>{affected?.path.split(\".\").pop()}</strong>\r\n                </em>{\" \"}\r\n                will delete all of its customised descendants\r\n              </Alert>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"subtitle1\">\r\n                Following customisation will be lost.\r\n              </Typography>\r\n              {affected?.items.map((i, idx) => {\r\n                return <li key={i}>{`${i}`}</li>;\r\n              })}\r\n              <DialogContentText></DialogContentText>\r\n            </DialogContent>\r\n            <Divider />\r\n            <Form>\r\n              <DialogActions\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  padding: \"0.2rem 1rem\",\r\n                }}\r\n              >\r\n                <AppCheckBox\r\n                  checked={values.agree}\r\n                  name=\"agree\"\r\n                  label=\"I know what I'm doing\"\r\n                  onClick={() => (values.agree = !values.agree)}\r\n                  value={`${values?.agree}`}\r\n                />\r\n                {/* <Checkbox value={values.agree} name=\"agree\" /> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  disabled={isSubmitting}\r\n                  size=\"small\"\r\n                  // onClick={handleClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Exclude\r\n                </Button>\r\n              </DialogActions>\r\n            </Form>\r\n          </Dialog>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Fragment } from \"react\";\r\nimport { AppCheckBox } from \"../formik-mterial-ui/AppCheckBox\";\r\nimport { LixiItemToolTip } from \"../tool-tip/LixiItemToolTip\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { FieldArrayRenderProps, useFormikContext } from \"formik\";\r\n\r\nimport { useStyles } from \"./lixiListItemStyle\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { ConfirmRemoveItemDialog } from \"../confirm-remove-dialog/ConfirmRemoveItemDialog\";\r\n\r\ninterface IListLixiItem {\r\n  name: \"elements\" | \"attributes\";\r\n  element: LixiBase;\r\n  included:   string[];\r\n  excluded:   string[];\r\n  selectAll:   boolean |   \"disable\";\r\n  fixedListItem:   string[];\r\n  touched:   boolean;\r\n  arrayHelper:   FieldArrayRenderProps;\r\n  toggleSelectAll:   (value:   string)   =>   void;\r\n}\r\nexport const LixiListItem: React.FC<IListLixiItem> = ({\r\n  name,\r\n  element,\r\n  included,\r\n  excluded,\r\n  touched,\r\n  fixedListItem,\r\n  selectAll,\r\n  arrayHelper,\r\n  toggleSelectAll,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState<string>(\"\");\r\n  const [neutral, setNeutral] = React.useState<string[]>([]);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { searchItem } = useAction();\r\n  const { values } = useFormikContext<CustomisedElementType>();\r\n  const [affectedPath, setAffectedPath] = React.useState<{\r\n    path: string;\r\n    items: string[];\r\n  }>();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const leafItem = React.useMemo(() => {\r\n    return element.path?.split(\".\").pop();\r\n  }, [element.path]);\r\n\r\n  const furtherCustomisation = React.useMemo(() => {\r\n    const path = element?.path;\r\n    if (!path) return;\r\n    return markedForDeletionList?.find((d) => {\r\n      return d.startsWith(path);\r\n    });\r\n  }, [element?.path, markedForDeletionList]);\r\n\r\n  React.useEffect(() => {\r\n    if (!leafItem) return;\r\n    if (\r\n      (included.includes(leafItem) || excluded.includes(leafItem)) &&\r\n      neutral.includes(leafItem)\r\n    ) {\r\n      setNeutral([]);\r\n    }\r\n    if (\r\n      !(included.includes(leafItem) || excluded.includes(leafItem)) &&\r\n      !neutral.includes(leafItem)\r\n    ) {\r\n      setNeutral([leafItem]);\r\n    }\r\n  }, [excluded, included, leafItem, neutral]);\r\n\r\n  React.useEffect(() => {\r\n    if (!leafItem) return;\r\n    if (furtherCustomisation && values[name].includes(leafItem)) {\r\n      setValue(leafItem);\r\n      return;\r\n    }\r\n    if (furtherCustomisation && !values[name].includes(leafItem)) {\r\n      setValue(\"\");\r\n      return;\r\n    }\r\n    if (included.includes(leafItem) || values[name].includes(leafItem)) {\r\n      setValue(leafItem);\r\n      return;\r\n    }\r\n    if (excluded.includes(leafItem) || !values[name].includes(leafItem)) {\r\n      setValue(\"\");\r\n      return;\r\n    }\r\n  }, [excluded, furtherCustomisation, included, leafItem, name, values]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!leafItem) return;\r\n    if (values[name].includes(leafItem)) return;\r\n    if (fixedListItem.length && !fixedListItem.includes(leafItem) && !touched)\r\n      return;\r\n    if (selectAll === \"disable\") return;\r\n\r\n    if (selectAll && !excluded.includes(leafItem)) {\r\n      arrayHelper.push(leafItem);\r\n\r\n      return;\r\n    }\r\n  }, [\r\n    arrayHelper,\r\n    excluded,\r\n    fixedListItem,\r\n    leafItem,\r\n    name,\r\n    selectAll,\r\n    touched,\r\n    values,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    if (!leafItem) return;\r\n    if (selectAll === \"disable\") return;\r\n    if (\r\n      !selectAll &&\r\n      (furtherCustomisation ||\r\n        (!excluded.includes(leafItem) && !included.includes(leafItem))) &&\r\n      values[name].includes(leafItem)\r\n    ) {\r\n      arrayHelper.remove(values[name].indexOf(leafItem));\r\n      return;\r\n    }\r\n  }, [\r\n    arrayHelper,\r\n    excluded,\r\n    furtherCustomisation,\r\n    included,\r\n    leafItem,\r\n    name,\r\n    selectAll,\r\n    values,\r\n  ]);\r\n\r\n  const affected = React.useMemo(():\r\n    | { path: string; items: string[] }\r\n    | undefined => {\r\n    const affectedItem = {} as { path: string; items: string[] };\r\n    if (element && element.path) {\r\n      const customiser = new Customiser(customization, element.path);\r\n      const affectedList = customiser.affectedDecedents();\r\n      if (affectedList?.length) {\r\n        affectedItem.path = element.path;\r\n        affectedItem.items = [];\r\n        affectedList.forEach((i) => {\r\n          if (i.textContent) {\r\n            affectedItem.items.push(i.textContent);\r\n          }\r\n        });\r\n        if (affectedItem.items.length) {\r\n          return affectedItem;\r\n        }\r\n      }\r\n    }\r\n  }, [customization, element]);\r\n\r\n  const handelAddItem = (subEle: string | undefined) => {\r\n    if (!subEle) return;\r\n    if (affected && !furtherCustomisation) {\r\n      setAffectedPath(affected);\r\n      if (leafItem && !excluded.includes(leafItem)) {\r\n        setOpen(true);\r\n        return;\r\n      }\r\n    }\r\n    if (selectAll !== \"disable\") {\r\n      toggleSelectAll(\"disable\");\r\n    }\r\n    if (!values[name].includes(subEle)) {\r\n      setValue(subEle);\r\n      arrayHelper.push(subEle);\r\n    } else {\r\n      setValue(\"\");\r\n      arrayHelper.remove(values[name].indexOf(subEle));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ConfirmRemoveItemDialog\r\n        affected={affectedPath}\r\n        open={open}\r\n        handleClose={handleClose}\r\n      />\r\n      <ListItem divider dense button onClick={() => handelAddItem(leafItem)}>\r\n        <ListItemIcon>\r\n          <AppCheckBox\r\n            onClick={() => handelAddItem(leafItem)}\r\n            disableRipple\r\n            name={name}\r\n            checked={!!value}\r\n            value={value}\r\n            checkedIcon={\r\n              <DoneOutlinedIcon style={{ color: \"green\" }} fontSize=\"small\" />\r\n            }\r\n            icon={\r\n              <CloseOutlinedIcon fontSize=\"small\" style={{ color: \"red\" }} />\r\n            }\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          style={{ cursor: \"pointer\" }}\r\n          id={`${element?.path?.split(\".\").pop()}`}\r\n          primary={\r\n            <div>\r\n              <Typography\r\n                style={{ alignItems: \"center\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n              >\r\n                {leafItem}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                &nbsp;\r\n                <em>\r\n                  {excluded.includes(leafItem || \"\")\r\n                    ? \"- excluded.\"\r\n                    : included.includes(leafItem || \"\")\r\n                    ? \"- customised.\"\r\n                    : \"\"}\r\n                </em>\r\n                <LixiItemToolTip lixiItem={element} placement=\"top-start\" />\r\n              </Typography>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <ListItemSecondaryAction>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"comments\"\r\n            className={classes.viewItem}\r\n            value={element?.path?.split(\".\").pop()}\r\n            onClick={(e) => searchItem(element?.path || \"\")}\r\n          >\r\n            <LaunchIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      // marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"35rem\",\r\n      // maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n      paddingTop:  \"0\"\r\n    },\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import List from \"@material-ui/core/List/List\";\r\nimport { FieldArray, useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { LixiListItemHeader } from \"../lixi-list-item-header/LixiListItemHeader\";\r\nimport { LixiListItem } from \"../lixi-list-item/LixiListItem\";\r\nimport { useStyles } from \"./elementSubItemsStyle\";\r\n\r\ninterface SubItems {\r\n  subItems: (LixiBase | null | undefined)[];\r\n  header: string;\r\n  name: \"elements\"|\"attributes\";\r\n  value:string[];\r\n  fixedListItem:string[]\r\n  setExcludedList:React.Dispatch<React.SetStateAction<{\r\n    elements: string[];\r\n    attributes: string[];\r\n} >>\r\n}\r\n\r\nexport const ElementSubItems: React.FC<SubItems> = ({\r\n  subItems,\r\n  header,\r\n  name,\r\n  fixedListItem,\r\n  setExcludedList,\r\n  value\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectAll, setSelectAll] = React.useState<{elements:boolean|\"disable\",attributes:boolean|\"disable\",touched:boolean}>({\r\n    elements:true,attributes:true,touched:false\r\n  })\r\n  const [touched, setTouched] = React.useState<{elements:boolean,attributes:boolean}>({\r\n    elements:false,attributes:false\r\n  })\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  // const { markedForDeletion } = useAction();\r\n  const {values} = useFormikContext<CustomisedElementType>()\r\n  \r\n  const includeAllItem = React.useMemo(()=>{\r\n    const titleCaseName = name.replace(new RegExp(\"^[a-z]\"),(matched) => {\r\n    return matched.toUpperCase();\r\n    }) \r\n    return `includeAll${titleCaseName}`\r\n  },[name]) as  \"includeAllElements\"|\"includeAllAttributes\"\r\n\r\n  const affected2 = React.useMemo(()=>{\r\n    if (!customization)return\r\n    const excluded:string[] = []\r\n    const excludedFullPath:string[]=[]\r\n    const included:string[] = []\r\n    subItems?.forEach((item:LixiBase|null|undefined)=>{\r\n      const path = item?.path as string\r\n      const leaf = path.split(\".\").pop() as string\r\n      const customiser = new Customiser(customization, path);\r\n      const affectedList = customiser.affectedDecedents();\r\n      affectedList?.forEach((affected)=>{\r\n        if (affected.textContent?.split(\".\").pop() === leaf){\r\n          if(!!affected?.parentElement?.getAttribute(\"Exclude\") && !excluded.includes(leaf)){\r\n              excluded.push(leaf)\r\n              excludedFullPath.push(affected.textContent)\r\n          }else if(!included.includes(leaf)){\r\n              included.push(leaf)\r\n          }\r\n        } else if(!included.includes(leaf)){\r\n            included.push(leaf)\r\n        }\r\n      })\r\n    })\r\n    return {included:[...included],excluded:[...excluded],excludedFullPath:[...excludedFullPath]}\r\n  },[customization, subItems])\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!affected2?.excludedFullPath.length)return\r\n    const {excludedFullPath} = affected2\r\n    const deletionList:string[] = []\r\n    excludedFullPath.forEach((exc)=>{\r\n      if(!markedForDeletionList?.includes(exc)){\r\n        deletionList.push(exc)\r\n      }\r\n    })\r\n    setExcludedList((pre)=>({...pre,[name]:[...deletionList]}))\r\n  },[affected2, markedForDeletionList, name, setExcludedList])\r\n  \r\n  const toggleExclude = (value:string) => {\r\n    if(!touched[name]){\r\n      setTouched({...touched,[name]:true})\r\n    }\r\n    if (value === \"disable\"){\r\n        setSelectAll({...selectAll,elements:\"disable\",attributes:\"disable\"})\r\n        return \r\n      }\r\n    if(value===\"enable\"){\r\n      return\r\n    }\r\n    setSelectAll({...selectAll,[name]:!selectAll[name]})\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <List className={classes.subItem}>\r\n        <FieldArray\r\n          name={name}\r\n          render={(arrayHelper) => (\r\n            <div>\r\n              <LixiListItemHeader \r\n              name={includeAllItem}\r\n              header={header} \r\n              items={subItems}\r\n              arrayHelper={arrayHelper}\r\n              selectedItemsLength={values[name].length}\r\n              toggle={toggleExclude}\r\n              />\r\n              {\r\n                subItems?.map((subEle, idx) => {\r\n                  if (!subEle?.path) {\r\n                    return <p></p>;\r\n                  }\r\n                  return (\r\n                    <LixiListItem \r\n                    key={`${idx}-${subEle.path}`} \r\n                    fixedListItem={fixedListItem}\r\n                    name={name} \r\n                    element={subEle} \r\n                    selectAll={selectAll[name]}\r\n                    touched={touched[name]}\r\n                    toggleSelectAll={toggleExclude}\r\n                    excluded={affected2?.excluded||[]}\r\n                    included={affected2?.included||[]}\r\n                    arrayHelper={arrayHelper}\r\n                    />\r\n                  );\r\n                })}\r\n                \r\n            </div>\r\n          )}\r\n        />\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n\r\n    helperText: {\r\n      width: \"100%\",\r\n      padding: \"0.5rem 0.2rem\",\r\n      position: \"absolute\",\r\n      background: \"#fff8e1\",\r\n      borderColor: theme.palette.error.main,\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"0.1rem\",\r\n      borderRadius: \"0.2rem\",\r\n      zIndex: 20,\r\n      boxSizing: \"border-box\",\r\n      marginTop: \"2.7rem\",\r\n    },\r\n  })\r\n);\r\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport { useField, FieldAttributes } from \"formik\";\r\nimport { useStyles } from \"./appTextFieldStyle\";\r\n\r\ntype AppTextFieldProps = TextFieldProps & FieldAttributes<{}>;\r\n\r\nexport const AppTextField: React.FC<AppTextFieldProps> = ({ ...props }) => {\r\n  const [field, meta] = useField<{}>(props);\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      FormHelperTextProps={{\r\n        className: classes.helperText,\r\n      }}\r\n      {...field}\r\n      {...props}\r\n      error={!!(meta.touched && meta.error)}\r\n      helperText={meta.error && meta.touched ? meta.error : undefined}\r\n    />\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nexport const ExcerptDocumentation: React.FC = () => {\r\n  const excerptTooltip = `\r\n  A short description - explaining the item usage.\r\n  `;\r\n  const documentationTooltip = `\r\n  An alternative description - explaining the item usage.\r\n  `;\r\n  const customHeadingTooltip = `A custom heading for the documentation`;\r\n  const { values } = useFormikContext<{\r\n    excerpt: string;\r\n    documentation: string;\r\n    heading: string;\r\n  }>();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <AppTextField\r\n          title={customHeadingTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={1}\r\n          name=\"heading\"\r\n          value={values.heading}\r\n          label=\"Custom Heading\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <AppTextField\r\n          title={excerptTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={4}\r\n          name=\"excerpt\"\r\n          value={values.excerpt}\r\n          label=\"Custom Excerpt\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <AppTextField\r\n          title={documentationTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={4}\r\n          name=\"documentation\"\r\n          value={values.documentation}\r\n          label=\"Custom Documentation\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"12rem\",\r\n      maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n    saveMinMax: {\r\n      padding: \"0.5rem\",\r\n      display: \"flex\",\r\n      gap: \"0.5rem\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    minMaxContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    textFieldMinMax: {\r\n      width: \"10rem\",\r\n    },\r\n    saveButton: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  })\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { ElementCustomiser } from \"../../models/ElementCustomiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { ElementSubItems } from \"../element-sub-items/ElementSubItems\";\r\nimport { ExcerptDocumentation } from \"../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\nimport { CustomiseElementSchema } from \"./customiseElementSchema\";\r\nimport { useStyles } from \"./customiseElementStyle\";\r\n\r\ninterface ICustomiseElement {\r\n  lixiItem: LixiBase | undefined;\r\n}\r\ntype SubElement = { [key: string]: Element[] };\r\n\r\nexport const CustomiseElement: React.FC<ICustomiseElement> = ({ lixiItem }) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation, } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  const [initialValue, setInitialValue] = React.useState<CustomisedElementType>(\r\n    {\r\n      newMin: \"\",\r\n      newMax: \"\",\r\n      includeAllElements: true,\r\n      includeAllAttributes: true,\r\n      elements: [],\r\n      attributes: [],\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      heading:\"\"\r\n    }\r\n  );\r\n  const [itemSubElement, setItemSubElement] = React.useState<SubElement>({});\r\n  const [itemAttributes, setItemAttributes] = React.useState<Element[]>([]);\r\n  const [excludedList,setExcludedList] = React.useState<{elements:string[],attributes:string[]}>({elements:[],attributes:[]})\r\n  const [fixedListItem, setFixedListItems] = React.useState<{\r\n    elements: string[];\r\n    attributes: string[];\r\n  }>({ elements: [], attributes: [] });\r\n\r\n  const [occursMinMax, setOccursMinMax] = React.useState<\r\n    | {\r\n        min: string | null | undefined;\r\n        max: string | null | undefined;\r\n      }\r\n    | undefined\r\n  >();\r\n\r\n  const leafAttribs = React.useMemo(() => {\r\n    return itemAttributes?.map((item, idx) => {\r\n      const itemEle = new LixiBase(item);\r\n      if (itemEle) {\r\n        return itemEle;\r\n      }\r\n      return undefined;\r\n    });\r\n  }, [itemAttributes]);\r\n  const leafEle = React.useMemo(() => {\r\n    return (itemSubElement[\"choice\"] || itemSubElement[\"sequence\"])?.map(\r\n      (item, idx) => {\r\n        const itemEle = new LixiBase(item);\r\n        return itemEle;\r\n      }\r\n    );\r\n  }, [itemSubElement]);\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new ElementCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n    if (!instruction.elements.length && !instruction.attributes.length) return;\r\n    setFixedListItems({\r\n      elements: [...instruction.elements],\r\n      attributes: [...instruction.attributes],\r\n    });\r\n\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  React.useEffect(() => {\r\n    const subElement = lixiItem?.lixiSubElements;\r\n    const attributes = lixiItem?.attributes;\r\n    if (subElement) {\r\n      setItemSubElement(subElement);\r\n    }\r\n    if (attributes?.length) {\r\n      setItemAttributes(attributes);\r\n    }\r\n  }, [lixiItem]);\r\n\r\n  React.useEffect(() => {\r\n    const occurrenceMinMax = {\r\n      min: lixiItem?.element.getAttribute(\"minOccurs\"),\r\n      max: lixiItem?.element.getAttribute(\"maxOccurs\"),\r\n    };\r\n    setOccursMinMax(occurrenceMinMax);\r\n  }, [lixiItem?.element]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={initialValue}\r\n      validationSchema={() =>\r\n        CustomiseElementSchema(occursMinMax?.min, occursMinMax?.max)\r\n      }\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        if (!lixiItem?.path) return;\r\n        \r\n          alert(JSON.stringify(values, null, 2))\r\n        const newCustomisation = new ElementCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        const {elements, attributes} = excludedList\r\n        if (markedForDeletionList){\r\n          newCustomisation.removeCustomisation([...markedForDeletionList])\r\n        }\r\n        if (elements.length){\r\n          newCustomisation.removeCustomisation([...elements])\r\n        }\r\n        if (attributes.length ){\r\n          newCustomisation.removeCustomisation([...attributes])\r\n        }\r\n        newCustomisation.customise();\r\n        updateCustomisation(newCustomisation.customisation);\r\n        setTimeout(() => {\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.saveMinMax}>\r\n                  <div className={classes.minMaxContainer}>\r\n                    <AppTextField\r\n                      className={classes.textFieldMinMax}\r\n                      name=\"newMin\"\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      label=\"New Min Occurs\"\r\n                      disabled={\r\n                        occursMinMax?.min === \"1\" && occursMinMax?.max === \"1\"\r\n                      }\r\n                      value={values?.newMin}\r\n                    />\r\n\r\n                    <AppTextField\r\n                      className={classes.textFieldMinMax}\r\n                      name=\"newMax\"\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      label=\"New Max Occurs\"\r\n                      disabled={occursMinMax?.max === \"1\"}\r\n                      value={values?.newMax}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.saveButton}>\r\n                    <Button\r\n                      size=\"small\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      startIcon={<SaveIcon fontSize=\"large\" />}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <Divider />\r\n              </Grid>\r\n              {leafEle?.length ? (\r\n                <Grid item xs={12} sm={itemAttributes?.length ? 6 : 12}>\r\n                  <ElementSubItems\r\n                    setExcludedList={setExcludedList}\r\n                    fixedListItem={fixedListItem[\"elements\"]}\r\n                    key={\"element\"}\r\n                    value={values.elements}\r\n                    header={`Sub-Elements ${\r\n                      itemSubElement[\"choice\"] ? \"CHOICE\" : \"(SEQUENCE)\"\r\n                    }`}\r\n                    subItems={leafEle}\r\n                    name=\"elements\"\r\n                  />\r\n                </Grid>\r\n              ) : undefined}\r\n              {leafAttribs?.length ? (\r\n                <Grid item xs={12} sm={leafEle?.length ? 6 : 12}>\r\n                  <ElementSubItems\r\n                    setExcludedList={setExcludedList}\r\n                    fixedListItem={fixedListItem[\"attributes\"]}\r\n                    key=\"attribute\"\r\n                    value={values.attributes}\r\n                    header=\"Attributes\"\r\n                    subItems={leafAttribs}\r\n                    name=\"attributes\"\r\n                  />\r\n                </Grid>\r\n              ) : undefined}\r\n\r\n              <Grid item xs={12}>\r\n                <ExcerptDocumentation />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n          <pre>{JSON.stringify(markedForDeletionList, null, 2)}</pre>\r\n          <pre>{JSON.stringify(excludedList[\"attributes\"], null, 2)}</pre>\r\n          <pre>{JSON.stringify(excludedList[\"elements\"], null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const CustomiseElementSchema = (\r\n  currentMin: string | null | undefined,\r\n  currentMax: string | null | undefined\r\n) => {\r\n  const min = currentMin ? parseInt(currentMin) : 0;\r\n  const max = currentMax && parseInt(currentMax) ? parseInt(currentMax) : 99999;\r\n\r\n  return Yup.object().shape(\r\n    {\r\n      newMin: Yup.number().moreThan(min).max(max),\r\n      newMax: Yup.number()\r\n        .max(max - 1)\r\n        .test({\r\n          name: \"min\",\r\n          exclusive: false,\r\n          message: \"Must be greater than new min occurs\",\r\n          params: {},\r\n          test: function (value) {\r\n            if (value && this.parent.newMin) {\r\n              return value > this.parent.newMin;\r\n            }\r\n            return true;\r\n          },\r\n        }),\r\n\r\n      excerpt: Yup.string().max(100),\r\n      documentation: Yup.string().max(100),\r\n    },\r\n    [[\"newMin\", \"newMax\"]]\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      marginTop: \"1rem\",\r\n      backgroundColor: \"##fafafa\",\r\n      border: \"solid #333 0.1rem\",\r\n      borderRadius: \"0.3rem\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      padding: \"0.5rem\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.1rem\",\r\n      alignItems: \"center\",\r\n    },\r\n    subItemHeader: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"12rem\",\r\n      maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n\r\n    itemLabelDescription: {\r\n      padding: \"0.1rem\",\r\n      margin: \"0.5rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    attributes: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    references: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    alert: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n    typeAttribute: {\r\n      cursor: \"pointer\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    otherAttribute: {\r\n      cursor: \"not-allowed\",\r\n    },\r\n  })\r\n);\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      marginBottom: \"0.5rem\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    paper: {\r\n      padding: \"0.5rem\",\r\n      margin: \"0.5rem 0.2rem\",\r\n    },\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import * as Yup from \"yup\";\r\n\r\nexport const integerTypeSchema = Yup.object().shape({\r\n  optionalToMandatory: Yup.boolean(),\r\n  minInteger: Yup.number()\r\n    .min(0, \"Value must be grater than or equal to zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\"),\r\n  maxInteger: Yup.number()\r\n    .positive(\"Value must be grater than zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\")\r\n    .test({\r\n      name: \"minInteger\",\r\n      exclusive: false,\r\n      message: \"Value must be grater than the minimum value\",\r\n      params: {},\r\n      test: function (value) {\r\n        if (value && this.parent.minInteger) {\r\n          return value > this.parent.minInteger;\r\n        }\r\n        return true;\r\n      },\r\n    }),\r\n});\r\n","import { Customiser } from \"./Customiser\";\r\nimport { IntegerTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class IntegerTypeAttributeCustomiser extends Customiser {\r\n  object = {} as IntegerTypeAttributeType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: IntegerTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n      minInteger: \"\",\r\n      maxInteger: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      optionalToMandatory,\r\n      documentation,\r\n      excerpt,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (\r\n      !optionalToMandatory &&\r\n      !minInteger &&\r\n      !maxInteger &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.integerMinMax();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  integerMinMax() {\r\n    if (!this.object.minInteger && !this.object.maxInteger) return;\r\n    if (this.object.minInteger) {\r\n      const doc = Customiser.docStub();\r\n      const minInteger = doc.createElement(\"MinInteger\");\r\n      minInteger.textContent = this.object.minInteger.toString().trim();\r\n      this.customiseItem.append(minInteger);\r\n    }\r\n    if (this.object.maxInteger) {\r\n      const doc = Customiser.docStub();\r\n      const maxInteger = doc.createElement(\"MaxInteger\");\r\n      maxInteger.textContent = this.object.maxInteger.toString().trim();\r\n      this.customiseItem.append(maxInteger);\r\n    }\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const {\r\n      optionalToMandatory,\r\n      heading,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n    if (minInteger || maxInteger) {\r\n      this.customiseItem.setAttribute(\"CustomIntegerRange\", \"Yes\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"MinInteger\":\r\n          const minInteger = child.textContent?.trim();\r\n          if (!minInteger) return;\r\n          try {\r\n            // this.object.minInteger = parseInt(minInteger) ? parseInt(minInteger) : undefined;\r\n            this.object.minInteger = minInteger ? minInteger : undefined;\r\n          } catch (error) {}\r\n          break;\r\n        case \"MaxInteger\":\r\n          const maxInteger = child.textContent?.trim();\r\n          if (!maxInteger) return;\r\n          try {\r\n            // this.object.maxInteger = parseInt(maxInteger) ? parseInt(maxInteger) : undefined;\r\n            this.object.maxInteger = maxInteger ? maxInteger : undefined;\r\n          } catch (error) {}\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useStyles } from \"./integerTypeAttributeStyle\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppTextField } from \"../../formik-mterial-ui/AppTextField\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport { integerTypeSchema } from \"./integerTypeAttributeSchema\";\r\nimport { IntegerTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { IntegerTypeAttributeCustomiser } from \"../../../models/IntegerTypeAttributeCustomiser\";\r\nimport { Form, Formik } from \"formik\";\r\n\r\ninterface ICustomiseIntegerTypeAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"integerType\";\r\n}\r\n\r\nexport const IntegerTypeAttribute: React.FC<ICustomiseIntegerTypeAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [\r\n    initialValue,\r\n    setInitialValue,\r\n  ] = React.useState<IntegerTypeAttributeType>({\r\n    optionalToMandatory: false,\r\n    excerpt: \"\",\r\n    documentation: \"\",\r\n    heading: \"\",\r\n    minInteger: \"\",\r\n    maxInteger: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new IntegerTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      validationSchema={integerTypeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new IntegerTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        // console.log(\"ci\", attCustomiser.customisation);\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <Paper className={classes.paper}>\r\n                  <div className={classes.container}>\r\n                    <AppTextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Minimum\"\r\n                      name=\"minInteger\"\r\n                      placeholder=\"Minimum\"\r\n                      // value={values.minInteger}\r\n                    />\r\n                    <AppTextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Maximum\"\r\n                      name=\"maxInteger\"\r\n                      placeholder=\"Maximum\"\r\n                      // value={values.maxInteger}\r\n                    />\r\n                  </div>\r\n                </Paper>\r\n              </FormControl>\r\n            </div>\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nIntegerTypeAttribute.defaultProps = {\r\n  type: \"integerType\",\r\n};\r\n","import React from \"react\";\r\n\r\ninterface ISwitchAttributeType {\r\n  switchType: string;\r\n  children: React.ReactElement<{\r\n    type:\r\n      | \"stringType\"\r\n      | \"integerType\"\r\n      | \"decimalType\"\r\n      | \"currencyType\"\r\n      | \"listType\";\r\n  }>[];\r\n}\r\nexport const SwitchAttributeType: React.FC<ISwitchAttributeType> = ({\r\n  children,\r\n  switchType,\r\n}) => {\r\n  const regex = /^[a-zA-Z]+List$/;\r\n  const child = children.find(({ props }) => {\r\n    const { type } = props;\r\n\r\n    if (regex.test(switchType)) {\r\n      return type === \"listType\";\r\n    }\r\n    return switchType === type;\r\n  });\r\n  return child || <></>;\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    name: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    definition: {\r\n      marginBottom: 12,\r\n      marginLeft: \"2.7rem\",\r\n      width: \"75ch\",\r\n    },\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n    enumeratedList: {\r\n      maxHeight: \"15rem\",\r\n      width: \"100%\",\r\n      overflowY: \"scroll\",\r\n    },\r\n  })\r\n);\r\n","import * as Yup from \"yup\";\r\n\r\nexport const customiseAttributeSchema = Yup.object().shape({\r\n  optionalToMandatory: Yup.boolean(),\r\n  stringTo: Yup.string().oneOf([\"list\", \"pattern\"]),\r\n  minInteger: Yup.number()\r\n    .min(0, \"Value must be grater than or equal to zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\"),\r\n  maxInteger: Yup.number()\r\n    .positive(\"Value must be grater than zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\")\r\n    .test({\r\n      name: \"minInteger\",\r\n      exclusive: false,\r\n      message: \"Value must be grater than the minimum value\",\r\n      params: {},\r\n      test: function (value) {\r\n        if (value && this.parent.minInteger) {\r\n          return value > this.parent.minInteger;\r\n        }\r\n        return true;\r\n      },\r\n    }),\r\n  // pattern: Yup.string().test({\r\n  //   name: \"stringTo\",\r\n  //   exclusive: false,\r\n  //   message: \"Must provide a regular expression for the pattern\",\r\n  //   params: {},\r\n  //   test: function (value) {\r\n  //     if (this.parent.stringTo === \"pattern\") {\r\n  //       return !!value;\r\n  //     }\r\n  //     return true;\r\n  //   },\r\n  // }),\r\n\r\n  // \"pattern.regex\": Yup.string().test({\r\n  //   name: \"stringTo\",\r\n  //   exclusive: false,\r\n  //   message: \"Must provide a regular expression for the pattern\",\r\n  //   params: {},\r\n  //   test: function (value) {\r\n  //     if (this.parent.stringTo === \"pattern\") {\r\n  //       console.log(\"value@\", value);\r\n  //       return !!value;\r\n  //     }\r\n  //     return true;\r\n  //   },\r\n  // }),\r\n\r\n  pattern: Yup.object({\r\n    regex: Yup.string(),\r\n    definition: Yup.string(),\r\n  }).test({\r\n    name: \"stringTo\",\r\n    exclusive: false,\r\n    message: \"Must provide a valid regular expression for the pattern\",\r\n    params: {},\r\n    test: function (value) {\r\n      if (this.parent.stringTo === \"pattern\") {\r\n        console.log(\"value\", value);\r\n        if (!value.regex) return false;\r\n        try {\r\n          return !!new RegExp(value.regex);\r\n        } catch (error) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  }),\r\n});\r\n","import React from \"react\";\r\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { FieldAttributes, useField } from \"formik\";\r\n\r\ntype AppRadioButtonType = { label: string } & RadioProps & FieldAttributes<{}>;\r\n\r\nexport const AppRadioButton: React.FC<AppRadioButtonType> = ({\r\n  label,\r\n  onSelect,\r\n  ...props\r\n}) => {\r\n  const [field] = useField<{}>(props);\r\n  return (\r\n    <FormControlLabel\r\n      {...field}\r\n      control={<Radio onSelect={onSelect} color=\"primary\" />}\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      marginBottom: \"0.5rem\",\r\n      width: \"100%\",\r\n    },\r\n    helperText: {\r\n      width: \"20rem\",\r\n      padding: \"0.5rem 0.2rem\",\r\n      position: \"absolute\",\r\n      background: \"#fff8e1\",\r\n      borderColor: theme.palette.error.main,\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"0.1rem\",\r\n      borderRadius: \"0.2rem\",\r\n      zIndex: 20,\r\n      boxSizing: \"border-box\",\r\n      // marginTop: \"2.7rem\",\r\n    },\r\n  })\r\n);\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FormikState, useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport { StringTypeAttributeType } from \"../../../../models/customisationTypes\";\r\nimport { AppRadioButton } from \"../../../formik-mterial-ui/AppRadioButton\";\r\nimport { AppTextField } from \"../../../formik-mterial-ui/AppTextField\";\r\n\r\nimport { useStyles } from \"./stringToPatternStyle\";\r\n\r\ninterface IStringToPattern {\r\n  resetForm: (\r\n    nextState?: Partial<FormikState<StringTypeAttributeType>> | undefined\r\n  ) => void;\r\n}\r\n\r\nexport const StringToPattern: React.FC<IStringToPattern> = ({ resetForm }) => {\r\n  const classes = useStyles();\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n  } = useFormikContext<StringTypeAttributeType>();\r\n  return (\r\n    <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n      <div className={classes.container}>\r\n        <AppRadioButton\r\n          name=\"stringTo\"\r\n          type=\"radio\"\r\n          value=\"pattern\"\r\n          label=\"String To Pattern\"\r\n        />\r\n        <Collapse\r\n          style={{ width: \"100%\", marginTop: \"0.5rem\" }}\r\n          onExit={() =>\r\n            resetForm({\r\n              values: {\r\n                ...values,\r\n                pattern: { ...values.pattern, regex: \"\", definition: \"\" },\r\n              },\r\n            })\r\n          }\r\n          in={values.stringTo === \"pattern\"}\r\n        >\r\n          {/* <FormHelperText error={!!errors.pattern}>\r\n            {errors.pattern}\r\n          </FormHelperText> */}\r\n          <div>\r\n            <AppTextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Regex Expression\"\r\n              name=\"pattern.regex\"\r\n              placeholder=\"Regex Expression\"\r\n              // value={values.pattern?.regex}\r\n            />\r\n\r\n            {touched.pattern && errors.pattern ? (\r\n              <FormHelperText\r\n                className={classes.helperText}\r\n                error={!!errors.pattern}\r\n              >\r\n                {errors.pattern}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </div>\r\n          <div style={{ marginTop: \"0.5rem\" }}>\r\n            <AppTextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              label=\"Regex Definition\"\r\n              name=\"pattern.definition\"\r\n              placeholder=\"Regex Definition\"\r\n              // value={values.pattern?.definition}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const stringToEnumeratedListSchema = Yup.object().shape({\r\n  definition: Yup.string()\r\n    .required()\r\n    .matches(/^[a-zA-Z0-9 '\"%]*$/, {\r\n      message: \"Only alphanumerical values, % and quotes are allowed\",\r\n    })\r\n    .min(3),\r\n  name: Yup.string()\r\n    .required()\r\n    .matches(/^[a-zA-Z0-9 '\"%]*$/, {\r\n      message: \"Only alphanumerical values, % and quotes are allowed\",\r\n    })\r\n    .min(3),\r\n});\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      error: {\r\n        position: \"fixed\",\r\n      },\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(0.5, 1, 1.5),\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.1rem\",\r\n      alignItems: \"center\",\r\n    },\r\n    textField: {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { Formik, useFormikContext } from \"formik\";\r\nimport { stringToEnumeratedListSchema } from \"./stringToListHeaderSchema\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { AppTextField } from \"../../../formik-mterial-ui/AppTextField\";\r\nimport ControlPointRoundedIcon from \"@material-ui/icons/ControlPointRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport { useStyles } from \"./stringToListHeaderStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ninterface ITypeFormikValue {\r\n  optionalToMandatory: boolean;\r\n  stringTo: string;\r\n  enumerations: { definition: string; name: string }[];\r\n}\r\n\r\nexport const StringToListHeader: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [nameAlert, setNameAlert] = React.useState(false);\r\n  const { getFieldHelpers, values } = useFormikContext<ITypeFormikValue>();\r\n  return (\r\n    <Formik\r\n      initialValues={{ definition: \"\", name: \"\", enumList: [] }}\r\n      onSubmit={(val, { resetForm }) => {\r\n        if (values.enumerations.some((e) => e.name === val.name)) {\r\n          setNameAlert(true);\r\n          return;\r\n        }\r\n\r\n        const valuesCopy = [...values.enumerations];\r\n        valuesCopy.push(val);\r\n        getFieldHelpers(\"enumerations\").setValue(valuesCopy);\r\n        resetForm();\r\n      }}\r\n      validationSchema={stringToEnumeratedListSchema}\r\n    >\r\n      {(formik) => (\r\n        <Paper className={classes.header}>\r\n          <Grid container alignItems=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={5}>\r\n              <AppTextField\r\n                className={classes.textField}\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                label=\"Name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={5}>\r\n              <AppTextField\r\n                className={classes.textField}\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"definition\"\r\n                placeholder=\"Definition\"\r\n                label=\"Definition\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <IconButton\r\n                onClick={formik.submitForm}\r\n                color=\"primary\"\r\n                aria-label=\"delete\"\r\n              >\r\n                <ControlPointRoundedIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Snackbar\r\n              anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n              open={nameAlert}\r\n              autoHideDuration={2000}\r\n              onClose={() => setNameAlert(false)}\r\n            >\r\n              <Alert onClose={() => setNameAlert(false)} severity=\"error\">\r\n                <strong>Duplicated Name</strong>\r\n                <em>{`\"${formik.values.name}\"`}</em>\r\n                already exist!\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    name: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    definition: {\r\n      marginBottom: 12,\r\n      marginLeft: \"2.7rem\",\r\n      width: \"75ch\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    row: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\n","import Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./stringToListBodyStyle\";\r\n\r\ninterface IStringToListBody {\r\n  idx: number;\r\n  remove: (idx: number) => void;\r\n  name: string;\r\n  definition: string;\r\n}\r\n\r\nexport const StringToListBody: React.FC<IStringToListBody> = ({\r\n  idx,\r\n  remove,\r\n  name,\r\n  definition,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.row}>\r\n        <IconButton\r\n          onClick={() => remove(idx)}\r\n          color=\"secondary\"\r\n          aria-label=\"delete\"\r\n        >\r\n          <RemoveCircleOutlineRoundedIcon fontSize=\"default\" />\r\n        </IconButton>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {name}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div>\r\n        <Typography className={classes.definition} color=\"textSecondary\">\r\n          {definition}\r\n        </Typography>\r\n      </div>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n","import { Customiser } from \"./Customiser\";\r\nimport { StringTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class StringTypeAttributeCustomiser extends Customiser {\r\n  object = {} as StringTypeAttributeType;\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: StringTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      pattern: { regex: \"\", definition: \"\" },\r\n      stringTo: \"\",\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n      enumerations: [],\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      enumerations,\r\n      optionalToMandatory,\r\n      pattern,\r\n      stringTo,\r\n      documentation,\r\n      excerpt,\r\n    } = this.object;\r\n\r\n    if (\r\n      !enumerations.length &&\r\n      !pattern &&\r\n      !optionalToMandatory &&\r\n      !stringTo &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.customPattern();\r\n    this.setInLineAttributes();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n    this.customEnumeration();\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  customEnumeration() {\r\n    if (!this.object.enumerations.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.enumerations.forEach(({ definition, name }, idx) => {\r\n      const enumeration = doc.createElement(\"Enumeration\");\r\n      enumeration.textContent = name.trim();\r\n      enumeration.setAttribute(\"Definition\", definition);\r\n      this.customiseItem.append(enumeration);\r\n    });\r\n  }\r\n  customPattern() {\r\n    if (this.object.stringTo !== \"pattern\") return;\r\n    const doc = Customiser.docStub();\r\n    const pattern = doc.createElement(\"Pattern\");\r\n    if (this.object.pattern) {\r\n      const { regex, definition } = this.object.pattern;\r\n      if (regex) {\r\n        pattern.textContent = regex?.toString();\r\n      }\r\n      if (definition) {\r\n        pattern.setAttribute(\"Definition\", definition);\r\n      }\r\n    }\r\n    this.customiseItem.append(pattern);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const {\r\n      optionalToMandatory,\r\n      stringTo,\r\n      enumerations,\r\n      heading,\r\n    } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n    if (stringTo === \"pattern\") {\r\n      this.customiseItem.setAttribute(\"StringToPattern\", \"Yes\");\r\n      return;\r\n    }\r\n    if (stringTo === \"list\" && enumerations.length) {\r\n      this.customiseItem.setAttribute(\"StringToList\", \"Yes\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        case \"StringToPattern\": {\r\n          this.object.stringTo = \"pattern\";\r\n          break;\r\n        }\r\n        case \"StringToList\": {\r\n          this.object.stringTo = \"list\";\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"Enumeration\":\r\n          const name = child.textContent?.trim();\r\n          const definition = child.getAttribute(\"Definition\");\r\n          if (!name || !definition) return;\r\n          this.object.enumerations.push({ name, definition });\r\n          break;\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"Pattern\":\r\n          const pattern = child.textContent?.trim();\r\n          const regexDefinition = child.getAttribute(\"Definition\") || \"\";\r\n          this.object.pattern = {\r\n            regex: pattern ? pattern : \"\",\r\n            definition: regexDefinition,\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useStyles } from \"./stringTypeAttributeStyle\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { customiseAttributeSchema } from \"./stringTypeAttributeSchema\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { StringTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport { StringToPattern } from \"./string-to-pattern/StringToPattern\";\r\nimport { AppRadioButton } from \"../../formik-mterial-ui/AppRadioButton\";\r\nimport { StringToListHeader } from \"./string-to-list-header/StringToListHeader\";\r\nimport { StringToListBody } from \"./string-to-list-body/StringToListBody\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { StringTypeAttributeCustomiser } from \"../../../models/StringTypeAttributeCustomiser\";\r\n\r\n// import { CustomIntegerRange } from \"./custom-integer-range/CustomIntegerRange\";\r\n\r\ninterface ICustomiseAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"stringType\";\r\n}\r\n\r\nexport const StringTypeAttribute: React.FC<ICustomiseAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [\r\n    initialValue,\r\n    setInitialValue,\r\n  ] = React.useState<StringTypeAttributeType>({\r\n    optionalToMandatory: false,\r\n    pattern: { regex: \"\", definition: \"\" },\r\n    stringTo: \"\",\r\n    excerpt: \"\",\r\n    documentation: \"\",\r\n    heading: \"\",\r\n    enumerations: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new StringTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      validationSchema={customiseAttributeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        console.log(\"values\", values);\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new StringTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                    // value={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <StringToPattern resetForm={resetForm} />\r\n                <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                  <AppRadioButton\r\n                    name=\"stringTo\"\r\n                    type=\"radio\"\r\n                    value=\"list\"\r\n                    label=\"String To Enumerated List\"\r\n                  />\r\n\r\n                  <Collapse\r\n                    onExit={() =>\r\n                      resetForm({ values: { ...values, enumerations: [] } })\r\n                    }\r\n                    in={values.stringTo === \"list\"}\r\n                  >\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <StringToListHeader />\r\n                      <FieldArray name=\"enumerations\">\r\n                        {(arrayHelper) => {\r\n                          return (\r\n                            <div className={classes.enumeratedList}>\r\n                              {values.enumerations.map((e, idx) => {\r\n                                return (\r\n                                  <StringToListBody\r\n                                    key={`${e[\"name\"]}-`}\r\n                                    idx={idx}\r\n                                    remove={arrayHelper.remove}\r\n                                    name={e[\"name\"]}\r\n                                    definition={e[\"definition\"]}\r\n                                  />\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        }}\r\n                      </FieldArray>\r\n                    </div>\r\n                  </Collapse>\r\n                </Paper>\r\n              </FormControl>\r\n            </div>\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n          <pre>{JSON.stringify(lixiItem?.path, null, 2)}</pre>\r\n          <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nStringTypeAttribute.defaultProps = {\r\n  type: \"stringType\",\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      // backgroundColor: \"#333\",\r\n      width: \"max-content\",\r\n      alignItems: \"right\",\r\n      margin: theme.spacing(0.5, 0, 0, 0),\r\n    },\r\n    attributes: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      // width: \"100%\",\r\n      justifyContent: \"flex-end\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    typeAttribute: {\r\n      cursor: \"pointer\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.primary.light,\r\n      },\r\n    },\r\n    otherAttribute: {\r\n      cursor: \"not-allowed\",\r\n    },\r\n    table: {\r\n      width: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useStyles } from \"./attributesTransactionsStyle\";\r\n\r\ninterface IAttributeTransaction {\r\n  lixiItem: LixiBase | undefined;\r\n  type: string | undefined;\r\n}\r\n\r\nexport const ItemAttributes: React.FC<IAttributeTransaction> = ({\r\n  lixiItem,\r\n  type,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.attributes}>\r\n        <TableContainer component={Paper}>\r\n          <Table\r\n            className={classes.table}\r\n            size=\"small\"\r\n            aria-label=\"a dense table\"\r\n          >\r\n            <TableBody>\r\n              {lixiItem?.element.getAttributeNames().map((att, idx) => {\r\n                return (\r\n                  <TableRow key={att}>\r\n                    <TableCell size=\"small\" align=\"right\">\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        align=\"right\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {`${att}:`}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell size=\"small\" align=\"center\">\r\n                      <Typography\r\n                        className={\r\n                          att === \"type\"\r\n                            ? classes.typeAttribute\r\n                            : classes.otherAttribute\r\n                        }\r\n                        color=\"textPrimary\"\r\n                        align=\"left\"\r\n                        variant=\"body2\"\r\n                        onClick={() =>\r\n                          att === \"type\" && type ? searchItem(type) : undefined\r\n                        }\r\n                      >\r\n                        <strong>{lixiItem?.element.getAttribute(att)}</strong>\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"secondary\">\r\n                        <em>\r\n                          {att === \"type\" && /^[a-zA-Z]+List$/.test(type || \"\")\r\n                            ? \"Customisable\"\r\n                            : null}\r\n                        </em>\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {lixiItem?.baseRestriction ? (\r\n                <TableRow key={lixiItem?.baseRestriction}>\r\n                  <TableCell size=\"small\" align=\"right\">\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      align=\"right\"\r\n                      variant=\"body1\"\r\n                    >\r\n                      base:\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    <Typography\r\n                      className={classes.otherAttribute}\r\n                      color=\"textPrimary\"\r\n                      align=\"left\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      <strong>{lixiItem?.baseRestriction}</strong>\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      // backgroundColor: \"#333\",\r\n      width: \"max-content\",\r\n      alignItems: \"right\",\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n    },\r\n    transactions: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      // width: \"100%\",\r\n      justifyContent: \"flex-start\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport React from \"react\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { SubSchema } from \"../../../redux/actions/customiser-actions\";\r\nimport { useStyles } from \"./transactionsStyle\";\r\n\r\ninterface ITransactions {\r\n  lixiItem: LixiBase | undefined;\r\n  subSchema: SubSchema | undefined;\r\n}\r\n\r\nexport const Transactions: React.FC<ITransactions> = ({\r\n  lixiItem,\r\n  subSchema,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.transactions}>\r\n      {subSchema &&\r\n        lixiItem?.transactions?.sort().map((t, idx) => {\r\n          if (subSchema?.transactionType && subSchema.transactionType !== t) {\r\n            return (\r\n              <span style={{ paddingInline: \"0.1rem\" }} key={t}>\r\n                <Chip\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  clickable\r\n                  label={t}\r\n                />\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span style={{ paddingInline: \"0.1rem\" }} key={t}>\r\n                <Chip\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"default\"\r\n                  clickable\r\n                  label={t}\r\n                  avatar={<Avatar>{t[0]}</Avatar>}\r\n                />\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    itemLabelDescription: {\r\n      padding: \"0.1rem\",\r\n      margin: \"0.5rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import Badge from \"@material-ui/core/Badge\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { SubSchema } from \"../../../redux/actions/customiser-actions\";\r\nimport { Transactions } from \"../lixi-item-transactions/Transactions\";\r\nimport { useStyles } from \"./labelDescriptionStyle\";\r\n\r\ninterface ILabelDescription {\r\n  lixiItem: LixiBase | undefined;\r\n  localName: string | undefined;\r\n  subSchema: SubSchema | undefined;\r\n}\r\n\r\nexport const LabelDescription: React.FC<ILabelDescription> = ({\r\n  lixiItem,\r\n  localName,\r\n  subSchema,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.itemLabelDescription}>\r\n        <Badge\r\n          color=\"primary\"\r\n          badgeContent={localName}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n        >\r\n          <Typography color=\"primary\" variant=\"h4\">\r\n            {lixiItem?.label}\r\n          </Typography>\r\n        </Badge>\r\n      </div>\r\n\r\n      <div style={{ maxWidth: \"75ch\", marginBottom: \"1rem\" }}>\r\n        <Typography\r\n          style={{ padding: \"0.1rem 1rem\" }}\r\n          color=\"textPrimary\"\r\n          variant=\"body1\"\r\n        >\r\n          {lixiItem?.documentation}\r\n        </Typography>\r\n        <Divider />\r\n        <Transactions lixiItem={lixiItem} subSchema={subSchema} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {},\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import { Customiser } from \"./Customiser\";\r\nimport { IntegerTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class ListTypeAttributeCustomiser extends Customiser {\r\n  object = {} as IntegerTypeAttributeType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: IntegerTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      optionalToMandatory,\r\n      documentation,\r\n      excerpt,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (\r\n      !optionalToMandatory &&\r\n      !minInteger &&\r\n      !maxInteger &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const { optionalToMandatory, heading } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useStyles } from \"./listTypeAttributeStyle\";\r\nimport { ListTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { ListTypeAttributeCustomiser } from \"../../../models/ListTypeAttributeCustomiser\";\r\n\r\ninterface ICustomiseListTypeAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"listType\";\r\n}\r\n\r\nexport const ListTypeAttribute: React.FC<ICustomiseListTypeAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [initialValue, setInitialValue] = React.useState<ListTypeAttributeType>(\r\n    {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      heading: \"\",\r\n    }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new ListTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      // validationSchema={integerTypeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new ListTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        // console.log(\"ci\", attCustomiser.customisation);\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nListTypeAttribute.defaultProps = {\r\n  type: \"listType\",\r\n};\r\n","import { Theme, createStyles, makeStyles, darken } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {},\r\n    list: {\r\n      height: \"40vh\",\r\n      overflowY: \"scroll\",\r\n      width: \"100%\",\r\n      margin: theme.spacing(\"0.5rem\", 0),\r\n      // border: \"solid red 0.1rem\",\r\n      paddingTop: \"0\",\r\n    },\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: darken(\"#fff8e1\", 0.1),\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    item: {\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.primary.dark,\r\n      },\r\n    },\r\n\r\n    selectAllText: {},\r\n  })\r\n);\r\n","import { Customiser } from \"./Customiser\";\r\nimport { tokenType } from \"./customisationTypes\";\r\n\r\nexport class TokenTypeCustomiser extends Customiser {\r\n  object = {} as tokenType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: tokenType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      tokens: [],\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const { tokens, documentation, excerpt, heading } = this.object;\r\n    if (!tokens.length && !documentation && !excerpt && !heading) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.tokens();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const { tokens, heading } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (tokens.length) {\r\n      this.customiseItem.setAttribute(\"Include\", \"Yes\");\r\n    }\r\n  }\r\n\r\n  tokens() {\r\n    if (!this.object.tokens.length) return;\r\n    this.object.tokens.forEach((token: string, idx) => {\r\n      const doc = Customiser.docStub();\r\n      const tokenEle = doc.createElement(\"Enumeration\");\r\n      tokenEle.textContent = token;\r\n      this.customiseItem.append(tokenEle);\r\n    });\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"Enumeration\":\r\n          const token = child.textContent?.trim();\r\n          if (token) {\r\n            this.object.tokens.push(token);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { tokenType } from \"../../../models/customisationTypes\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport { useStyles } from \"./simpleTokenTypeStyle\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { TokenTypeCustomiser } from \"../../../models/TokenTypeCustomiser\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\ninterface ISimpleTokenType {\r\n  lixiItem: LixiBase | undefined;\r\n  baseRestriction?: \"xs:token\";\r\n}\r\n\r\nexport const SimpleTokenType: React.FC<ISimpleTokenType> = ({ lixiItem }) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n\r\n  const [initialValue, setInitialValue] = React.useState<tokenType>({\r\n    tokens: [],\r\n  });\r\n\r\n  const enumerations = React.useMemo(() => {\r\n    if (!lixiItem?.enumeration?.length) return;\r\n    const result: string[] = [];\r\n    lixiItem.enumeration.forEach((e: Element | undefined) => {\r\n      if (e) {\r\n        const enumItem = new LixiBase(e).path?.split(\".\").pop();\r\n        if (!enumItem) return;\r\n        result.push(enumItem);\r\n      }\r\n    });\r\n    return result;\r\n  }, [lixiItem?.enumeration]);\r\n\r\n  const enumerationAddRemove = (el: string | undefined) => {\r\n    console.log(initialValue);\r\n    if (!el) return;\r\n    const copyOfTokens = [...initialValue.tokens];\r\n    if (copyOfTokens.includes(el)) {\r\n      copyOfTokens.splice(copyOfTokens.indexOf(el), 1);\r\n    } else {\r\n      copyOfTokens.push(el);\r\n    }\r\n    setInitialValue((pre) => ({ ...pre, tokens: copyOfTokens.sort() }));\r\n  };\r\n\r\n  const toggle = () => {\r\n    const copyToken = [...initialValue.tokens];\r\n    if (copyToken.length) {\r\n      setInitialValue((pre) => ({ ...pre, tokens: [] }));\r\n      return;\r\n    }\r\n    if (enumerations?.length) {\r\n      setInitialValue((pre) => ({ ...pre, tokens: [...enumerations] }));\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new TokenTypeCustomiser(\r\n      customization,\r\n      lixiItem.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const tokeCustomiser = new TokenTypeCustomiser(\r\n          customization,\r\n          lixiItem.path,\r\n          values\r\n        );\r\n        tokeCustomiser.customise();\r\n        updateCustomisation(tokeCustomiser.customisation);\r\n        // setTimeout(() => {\r\n        //   alert(JSON.stringify(values, null, 2));\r\n        //   setSubmitting(false);\r\n        // }, 400);\r\n      }}\r\n    >\r\n      {({ values }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <List dense className={classes.list}>\r\n                    <ListSubheader\r\n                      title=\"Click To Select All Items\"\r\n                      className={classes.subItemHeader}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <AppCheckBox\r\n                          name=\"allSelected\"\r\n                          checked={\r\n                            values.tokens.length === enumerations?.length\r\n                          }\r\n                          value={\r\n                            values.tokens.length === enumerations?.length\r\n                              ? \"all\"\r\n                              : \"\"\r\n                          }\r\n                          disableRipple\r\n                          onClick={() => toggle()}\r\n                          checkedIcon={\r\n                            <DoneOutlinedIcon style={{ color: \"green\" }} />\r\n                          }\r\n                          icon={<CloseOutlinedIcon style={{ color: \"red\" }} />}\r\n                          indeterminateIcon={\r\n                            <IndeterminateCheckBoxTwoToneIcon color=\"primary\" />\r\n                          }\r\n                          indeterminate={\r\n                            initialValue.tokens.length > 0 &&\r\n                            initialValue.tokens.length <\r\n                              (enumerations?.length || 0)\r\n                          }\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        onClick={() => toggle()}\r\n                        primary=\"Select All Enumerations\"\r\n                      />\r\n                      <Button\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                      >\r\n                        save\r\n                      </Button>\r\n                    </ListSubheader>\r\n                    <FieldArray\r\n                      name=\"tokens\"\r\n                      render={(arrayHelper) => {\r\n                        if (!enumerations?.length) return <></>;\r\n                        return enumerations?.map((el: string | undefined) => {\r\n                          if (!el) return <></>;\r\n                          return (\r\n                            <ListItem\r\n                              className={classes.item}\r\n                              divider\r\n                              onClick={() => enumerationAddRemove(el)}\r\n                              key={el}\r\n                            >\r\n                              <ListItemIcon>\r\n                                <AppCheckBox\r\n                                  name=\"tokens\"\r\n                                  checked={values?.tokens.includes(el)}\r\n                                  disableRipple\r\n                                  value={values?.tokens.includes(el) ? el : \"\"}\r\n                                  checkedIcon={\r\n                                    <DoneOutlinedIcon\r\n                                      style={{ color: \"green\" }}\r\n                                      fontSize=\"small\"\r\n                                    />\r\n                                  }\r\n                                  icon={\r\n                                    <CloseOutlinedIcon\r\n                                      fontSize=\"small\"\r\n                                      style={{ color: \"red\" }}\r\n                                    />\r\n                                  }\r\n                                />\r\n                              </ListItemIcon>\r\n                              <ListItemText>{el}</ListItemText>\r\n                            </ListItem>\r\n                          );\r\n                        });\r\n                      }}\r\n                    />\r\n                  </List>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <ExcerptDocumentation />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"0.5rem\",\r\n                  }}\r\n                ></Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nSimpleTokenType.defaultProps = {\r\n  baseRestriction: \"xs:token\",\r\n};\r\n","import React from \"react\";\r\ninterface ISwitchSimpleType {\r\n  switchBase: string;\r\n  children: React.ReactElement<{\r\n    baseRestriction: \"xs:token\";\r\n  }>[];\r\n}\r\nexport const SwitchSimpleType: React.FC<ISwitchSimpleType> = ({\r\n  children,\r\n  switchBase,\r\n}) => {\r\n  const child = children.find(({ props }) => {\r\n    const { baseRestriction } = props;\r\n    return switchBase === baseRestriction;\r\n  });\r\n  return child || <></>;\r\n};\r\n","import {\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n\r\n  Divider,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { ElementCustomiser } from \"../../models/ElementCustomiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\n// import { CustomiseAttribute } from \"../customise-attribute/CustomiseAttribute\";\r\nimport { CustomiseElement } from \"../customise-element/CustomiseElement\";\r\nimport { useStyles } from \"./lixiItemStyle\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { IntegerTypeAttribute } from \"../customise-attribute/integer-type-attribute/IntegerTypeAttribute\";\r\nimport { SwitchAttributeType } from \"./AttributeSwitchType\";\r\nimport { StringTypeAttribute } from \"../customise-attribute/string-type-attribute/StringTypeAttribute\";\r\nimport { ItemAttributes } from \"./lixi-item-attributes/ItemAttributes\";\r\nimport { LabelDescription } from \"./lixi-item-label-description/LabelDescription\";\r\nimport { ListTypeAttribute } from \"../customise-attribute/list-type-attribute/ListTypeAttribute\";\r\nimport { SimpleTokenType } from \"../customise-simple-type/simple-token-type/SimpleTokenType\";\r\nimport { SwitchSimpleType } from \"./SimpleTypeSwitchType\";\r\n\r\n\r\ninterface ItemType {\r\n  item: Element | null | undefined;\r\n}\r\nexport const LixiItem: React.FC<ItemType | undefined> = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const [openToCustomise, setOpenToCustomise] = useState<boolean>(false);\r\n  const [alert, setAlert] = useState<{ included: boolean; path: string }>();\r\n  const [lixiItem, setLixiItem] = useState<LixiBase>();\r\n  const [exclude, setExclude] = useState(false);\r\n  const { customization, subSchema } = useTypedSelector(\r\n    (state) => state.customizer\r\n  );\r\n  const { searchItem, updateCustomisation } = useAction();\r\n\r\n  const localName = React.useMemo(() => {\r\n    return lixiItem?.element?.localName;\r\n  }, [lixiItem]);\r\n\r\n  const type = React.useMemo(() => {\r\n    return lixiItem?.element?.getAttribute(\"type\")||\"\";\r\n  }, [lixiItem]);\r\n  const baseRestriction = React.useMemo(() => {\r\n    return lixiItem?.baseRestriction || \"\";\r\n  }, [lixiItem]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      const ele: LixiBase = new LixiBase(item);\r\n      setLixiItem(ele);\r\n      return\r\n    }\r\n    \r\n  }, [item, customization]);\r\n\r\n  const onExclude = () => {\r\n    if (!lixiItem?.path) return;\r\n    const excluded = !exclude;\r\n    setExclude(excluded);\r\n    const newCustomisation = new Customiser(customization, lixiItem?.path);\r\n    if (excluded) {\r\n      newCustomisation.exclude();\r\n    } else {\r\n      newCustomisation.include();\r\n    }\r\n    updateCustomisation(newCustomisation.customisation);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (lixiItem?.path === \"Package\"){\r\n      setOpenToCustomise(true)\r\n    }\r\n  },[lixiItem?.path])\r\n\r\n  useEffect(() => {\r\n    if (exclude) return;\r\n    if (lixiItem?.path) {\r\n      const customiser = new Customiser(customization, lixiItem?.path);\r\n      setExclude(!!customiser.ExcludedItem());\r\n    }\r\n  }, [customization, lixiItem?.path, exclude]);\r\n\r\n  useEffect(() => {\r\n    if (!lixiItem?.element.localName || !lixiItem?.path || !customization)\r\n      return;\r\n    const parentCustomised = ElementCustomiser.parentCustomised(\r\n      lixiItem?.path,\r\n      customization,\r\n      lixiItem.element.localName\r\n    );\r\n    if (parentCustomised) {\r\n      setAlert(parentCustomised);\r\n    }\r\n  }, [customization, lixiItem?.path, lixiItem?.element.localName]);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Paper style={{ marginTop: \"0.5rem\", padding: \"0.5rem 0.5rem\" }}>\r\n          <Grid item xs={12}>\r\n            <Paper>\r\n              {!alert || alert?.included ? (\r\n                <div className={classes.header}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        icon={\r\n                          <DoneOutlinedIcon\r\n                            style={{ color: \"green\" }}\r\n                            fontSize=\"small\"\r\n                          />\r\n                        }\r\n                        checkedIcon={<CloseOutlinedIcon fontSize=\"small\" />}\r\n                        onChange={onExclude}\r\n                        checked={exclude}\r\n                        disabled={alert?.included}\r\n                        name=\"checkedI\"\r\n                      />\r\n                    }\r\n                    label={exclude ? \"Excluded\" : \"Include\"}\r\n                  />\r\n\r\n                  <Button\r\n                    disabled={exclude}\r\n                    style={{ height: \"max-content\", width: \"min-content\" }}\r\n                    onClick={() => setOpenToCustomise((pre) => !pre)}\r\n                    startIcon={<SettingsOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  >\r\n                    Customise\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <Alert\r\n                  variant=\"standard\"\r\n                  severity=\"warning\"\r\n                  action={\r\n                    <Button\r\n                      className={classes.alert}\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      onClick={() => searchItem(alert?.path || \"\")}\r\n                    >\r\n                      see parent\r\n                    </Button>\r\n                  }\r\n                >\r\n                  This item excluded via its parent:{\" \"}\r\n                  {\r\n                    <em>\r\n                      <strong>{alert?.path.split(\".\").pop()}</strong>\r\n                    </em>\r\n                  }\r\n                </Alert>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <LabelDescription\r\n              lixiItem={lixiItem}\r\n              localName={item?.localName}\r\n              subSchema={subSchema}\r\n            />\r\n            <ItemAttributes lixiItem={lixiItem} type={type} />\r\n          </div>\r\n\r\n          {lixiItem?.references ? (\r\n            <div>\r\n              <Divider />\r\n              <List dense subheader={<ListSubheader>References</ListSubheader>}>\r\n                <Divider />\r\n                {lixiItem.references.map((r, idx) => {\r\n                  return (\r\n                    <Fragment key={`${idx}_${r}`}>\r\n                      <ListItem component=\"li\">\r\n                        <Typography variant=\"body1\">{r}</Typography>\r\n                      </ListItem>\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </List>\r\n            </div>\r\n          ) : undefined}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Collapse in={!exclude && openToCustomise}>\r\n          {localName === \"element\" ? (\r\n            <CustomiseElement lixiItem={lixiItem} />\r\n          ) : undefined}\r\n\r\n          {localName === \"attribute\" ? (\r\n            <SwitchAttributeType switchType={type}>\r\n              <IntegerTypeAttribute lixiItem={lixiItem} />\r\n              <StringTypeAttribute lixiItem={lixiItem} />\r\n              <ListTypeAttribute lixiItem={lixiItem} />\r\n            </SwitchAttributeType>\r\n          ) : null}\r\n\r\n          {localName === \"simpleType\" ? (\r\n            <SwitchSimpleType switchBase={baseRestriction}>\r\n              <div></div>\r\n              <SimpleTokenType lixiItem={lixiItem} />\r\n            </SwitchSimpleType>\r\n          ) : null}\r\n        </Collapse>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      // display: \"flex\",\r\n      // justifyContent: \"center\",\r\n      paddingLeft: \"0.5rem\",\r\n      borderLeft: \"solid 0.5rem #3f51b5\",\r\n      borderRadius: \"0.2rem\",\r\n    },\r\n    link: {\r\n      display: \"flex\",\r\n      cursor: \"pointer\",\r\n      color: theme.palette.primary.dark,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff8e1\",\r\n        borderBottom: \"solid 0.1rem #3f51b5\",\r\n      },\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.25),\r\n      color: theme.palette.primary.dark,\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    leafLink: {\r\n      color: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff8e1\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\nimport { useStyles } from \"./breadCrumbsStyle\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\ninterface BreadCrumbsType {\r\n  pathSections: string[] | undefined;\r\n  iconClickHandler: () => void;\r\n}\r\n\r\nexport const IconBreadcrumbs: React.FC<BreadCrumbsType> = (\r\n  props: BreadCrumbsType\r\n) => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  const handleClick = (\r\n    event: React.MouseEvent<HTMLParagraphElement, MouseEvent>\r\n  ) => {\r\n    event.preventDefault();\r\n    if (!props.pathSections?.length) return;\r\n    const pathArr = [...props.pathSections];\r\n    const index = props.pathSections.indexOf(event.currentTarget.innerHTML);\r\n    if (index === 0) {\r\n      searchItem(\"Package\");\r\n      return;\r\n    }\r\n    if (!index) return;\r\n    for (let i = pathArr.length; i > index + 1; i--) {\r\n      pathArr?.pop();\r\n    }\r\n    searchItem(pathArr?.join(\".\"));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Breadcrumbs\r\n          separator={<ArrowForwardIosIcon className={classes.icon} />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          {props.pathSections?.map((section, idx) => {\r\n            return (\r\n              <Typography\r\n                onClick={(\r\n                  e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\r\n                ) => handleClick(e)}\r\n                color=\"textSecondary\"\r\n                key={idx}\r\n                className={classes.link}\r\n              >\r\n                {section}\r\n              </Typography>\r\n            );\r\n          })}\r\n          <IconButton\r\n            onClick={props.iconClickHandler}\r\n            aria-label=\"delete\"\r\n            className={classes.leafLink}\r\n            size=\"medium\"\r\n          >\r\n            <FindInPageIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </Breadcrumbs>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import { useTheme, useMediaQuery, ListSubheader } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ListChildComponentProps, VariableSizeList } from \"react-window\";\r\n\r\nconst LISTBOX_PADDING = 8; // px\r\n\r\nfunction renderRow(props: ListChildComponentProps) {\r\n  const { data, index, style } = props;\r\n  return React.cloneElement(data[index], {\r\n    style: {\r\n      ...style,\r\n      top: (style.top as number) + LISTBOX_PADDING,\r\n    },\r\n  });\r\n}\r\n\r\nconst OuterElementContext = React.createContext({});\r\n\r\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  const outerProps = React.useContext(OuterElementContext);\r\n  return <div ref={ref} {...props} {...outerProps} />;\r\n});\r\n\r\nfunction useResetCache(data: any) {\r\n  const ref = React.useRef<VariableSizeList>(null);\r\n  React.useEffect(() => {\r\n    if (ref.current != null) {\r\n      ref.current.resetAfterIndex(0, true);\r\n    }\r\n  }, [data]);\r\n  return ref;\r\n}\r\n\r\n// Adapter for react-window\r\nexport const ListboxComponent = React.forwardRef<HTMLDivElement>(\r\n  function ListboxComponent(props, ref) {\r\n    const { children, ...other } = props;\r\n    const itemData = React.Children.toArray(children);\r\n    const theme = useTheme();\r\n    const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), { noSsr: true });\r\n    const itemCount = itemData.length;\r\n    const itemSize = smUp ? 36 : 48;\r\n\r\n    const getChildSize = (child: React.ReactNode) => {\r\n      if (React.isValidElement(child) && child.type === ListSubheader) {\r\n        return 48;\r\n      }\r\n\r\n      return itemSize;\r\n    };\r\n\r\n    const getHeight = () => {\r\n      if (itemCount > 8) {\r\n        return 8 * itemSize;\r\n      }\r\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    const gridRef = useResetCache(itemCount);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <OuterElementContext.Provider value={other}>\r\n          <VariableSizeList\r\n            itemData={itemData}\r\n            height={getHeight() + 2 * LISTBOX_PADDING}\r\n            width=\"100%\"\r\n            ref={gridRef}\r\n            outerElementType={OuterElementType}\r\n            innerElementType=\"ul\"\r\n            itemSize={(index) => getChildSize(itemData[index])}\r\n            overscanCount={5}\r\n            itemCount={itemCount}\r\n          >\r\n            {renderRow}\r\n          </VariableSizeList>\r\n        </OuterElementContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    listbox: {\r\n      boxSizing: \"border-box\",\r\n\r\n      \"& ul\": {\r\n        padding: 0,\r\n        margin: 0,\r\n        \"& li:hover\": {\r\n          borderBottom: \"solid #444 0.05rem\",\r\n          backgroundColor: theme.palette.primary.light,\r\n          color: theme.palette.primary.contrastText,\r\n        },\r\n       \r\n      },\r\n    },\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n      marginTop: \"0rem\",\r\n    },\r\n   \r\n  })\r\n);\r\n","import { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { XmlUtil } from \"../../util/nameSpaces\";\r\nimport { IconBreadcrumbs } from \"../breadCrumbs/breadCrumbsComponent\";\r\nimport { ListboxComponent } from \"./listBoxComponent\";\r\nimport { useStyles } from \"./searchPathStyle\";\r\n\r\nexport const SearchPath: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  // const [path, setPath] = useState<string>();\r\n  const [options, setOptions] = useState<string[] | null>([]);\r\n  const [showSearchBox, setShowSearchBox] = useState<boolean>(true);\r\n  const {  schema } = useTypedSelector((state) => state.schema);\r\n  const { data,loading } = useTypedSelector((state) => state.item);\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const [pathsCount, setPathsCount] = useState(0);\r\n\r\n  const _loading = loading || options?.length === 0;\r\n\r\n  const path = React.useMemo(() => {\r\n    if (!data) return;\r\n    const newItem = new LixiBase(data);\r\n    return newItem?.path;\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    if (!data && !loading && schema) {\r\n      searchItem(\"Package\");\r\n      return;\r\n    }\r\n  }, [data, loading, schema, searchItem]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setShowSearchBox(false);\r\n    }\r\n  },  [data]);\r\n\r\n  useEffect(() => {\r\n    const lixiItems = (): Promise<string[]> => {\r\n      return new Promise((resolves, rejects) => {\r\n        if (!schema) return;\r\n        const xmlUtile = new XmlUtil(schema);\r\n        if (subSchema?.transactionType) {\r\n          const allPath = xmlUtile.getPathOfAllItemsInATransaction(\r\n            subSchema.transactionType\r\n          );\r\n          resolves(allPath);\r\n        }\r\n      });\r\n    };\r\n\r\n    (async () => {\r\n      setOptions([]);\r\n      const paths = await lixiItems();\r\n      setPathsCount(paths.length);\r\n      setOptions(paths);\r\n    })();\r\n  }, [subSchema?.transactionType, schema]);\r\n\r\n  const onSubmit = (\r\n    event: React.ChangeEvent<{}> | React.FormEvent<HTMLFormElement>,\r\n    searchText: string | null\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    if (searchText) {\r\n      searchItem(searchText);\r\n      setShowSearchBox(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!data || showSearchBox ? (\r\n          <Slide\r\n            direction=\"down\"\r\n            in={showSearchBox}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            {...(showSearchBox ? { timeout: 500 } : {})}\r\n          >\r\n            <Paper className={classes.root}>\r\n              <Autocomplete\r\n                id=\"virtualize-demo\"\r\n                onChange={(event, option) => onSubmit(event, option)}\r\n                disableListWrap\r\n                classes={classes}\r\n                autoComplete={true}\r\n                includeInputInList\r\n                loading={_loading}\r\n                ListboxComponent={\r\n                  ListboxComponent as React.ComponentType<\r\n                    React.HTMLAttributes<HTMLElement>\r\n                  >\r\n                }\r\n                options={options || []}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    style={{ alignItems: \"center\" }}\r\n                    variant=\"outlined\"\r\n                    label=\"LIXI Item Path\"\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      fullWidth: true,\r\n                      endAdornment: (\r\n                        <React.Fragment>\r\n                          <Typography color=\"textSecondary\">\r\n                            <em>{`${pathsCount} Paths`}</em>\r\n                          </Typography>\r\n                          {loading ? (\r\n                            <CircularProgress color=\"inherit\" size={20} />\r\n                          ) : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </React.Fragment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                )}\r\n                renderOption={(option) => (\r\n                  <Typography noWrap>{option}</Typography>\r\n                )}\r\n              />\r\n            </Paper>\r\n          </Slide>\r\n        ) : (\r\n          <IconBreadcrumbs\r\n            iconClickHandler={() => setShowSearchBox(true)}\r\n            pathSections={path?.split(\".\")}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { Customiser } from \"../../../models/Customiser\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { ItemXMLViewer } from \"../../itemXMLViewer/ItemXMLViewer\";\r\nimport { LixiItem } from \"../../lixi-item/LixiItem\";\r\nimport { SearchPath } from \"../../search/SearchPath\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport const CreateInstructionTab: React.FC<TabPanelProps> = (\r\n  props: TabPanelProps\r\n) => {\r\n  const { children, value, index, ...other } = props;\r\n  const { data } = useTypedSelector((state) => state.item);\r\n\r\n  const [itemInstruction, setItemInstruction] = React.useState<Element>();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n\r\n  React.useEffect(() => {\r\n    if (!data) return;\r\n    const path = new LixiBase(data)?.path;\r\n    if (path) {\r\n      const newCustomiser = new Customiser(customization, path);\r\n      const customisedItem = newCustomiser?.getCustomisedItem()?.parentElement;\r\n      if (!customisedItem) {\r\n        setItemInstruction(undefined);\r\n        return;\r\n      }\r\n      setItemInstruction(customisedItem);\r\n    }\r\n  }, [customization, data]);\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"div\">\r\n            <SearchPath />\r\n            <Collapse key=\"lixiItem\" in={!!data}>\r\n              {data ? <LixiItem item={data} /> : undefined}\r\n            </Collapse>\r\n            <Collapse key=\"lixiItemXML\" in={!!itemInstruction}>\r\n              {<ItemXMLViewer role=\"view\" itemXML={itemInstruction} />}\r\n            </Collapse>\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./navTabsStyle\";\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport const TabPanel: React.FC<TabPanelProps> = (props: TabPanelProps) => {\r\n  const classes = useStyles();\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box className={classes.tabPanelChildren}>\r\n          <Typography component=\"div\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    menuButton: {\r\n      // width: \"max-content\",\r\n      // color: theme.palette.getContrastText(theme.palette.primary.main),\r\n      minWidth: \"10rem\",\r\n      height: \"inherit\",\r\n      marginLeft: \"0.05rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  })\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { SubSchema } from \"../../redux/actions/customiser-actions\";\r\nimport { XmlUtil } from \"../../util/nameSpaces\";\r\nimport { useStyles } from \"./subSchemaMenuStyle\";\r\n\r\n\r\n\r\n\r\nexport const SubSchemaMenu: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { customizeSubSchema } = useAction();\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const { schema } = useTypedSelector((state) => state.schema);\r\n  const [transactionList, setTransactionList] = useState<SubSchema[]>([]);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const sortedTransactionList = useMemo(\r\n    () =>\r\n      transactionList?.sort((a, b) => {\r\n        if (a && b && a.transactionType && b.transactionType) {\r\n          return a?.transactionType > b?.transactionType ? 1 : -1;\r\n        }\r\n        return 0;\r\n      }),\r\n    [transactionList]\r\n  );\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n    const s = e.currentTarget.innerText.split(\" \");\r\n    const subSchema: SubSchema = {\r\n      transactionType: s[0],\r\n      transactionVersion: s[1],\r\n    };\r\n    customizeSubSchema(subSchema);\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    const transaction = (): Promise<\r\n      {\r\n        transactionType: string;\r\n        transactionVersion: string;\r\n      }[]\r\n    > => {\r\n      return new Promise((resolves, rejects) => {\r\n        if (!schema) {\r\n          setTransactionList([]);\r\n          return;\r\n        }\r\n        const xmlUtile = new XmlUtil(schema);\r\n        const transactions = xmlUtile.getTransactions();\r\n        resolves(transactions);\r\n      });\r\n    };\r\n\r\n    (async () => {\r\n      setTransactionList(await transaction());\r\n    })();\r\n  }, [schema]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className={classes.menuButton}\r\n        color=\"primary\"\r\n        // disableRipple\r\n        aria-controls=\"simple-menu\"\r\n        fullWidth\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        variant=\"contained\"\r\n        disabled={transactionList.length ? false : true}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        {subSchema?.transactionType && subSchema?.transactionVersion\r\n          ? `${subSchema.transactionType} ${subSchema.transactionVersion}`\r\n          : \"Transaction\"}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {sortedTransactionList.map(\r\n          ({ transactionType, transactionVersion }) => {\r\n            return (\r\n              <MenuItem\r\n                id={`${transactionType}_${transactionVersion}`}\r\n                key={`${transactionType}_${transactionVersion}`}\r\n                onClick={handleClose}\r\n              >{`${transactionType} ${transactionVersion}`}</MenuItem>\r\n            );\r\n          }\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n\r\n    paper: {\r\n      // backgroundColor: \"transparent\",\r\n      boxShadow: \"1px 1px 3px #BDBDBD\",\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0),\r\n    },\r\n    alert: {\r\n      color: \"#c43e00\",\r\n      \"&:hover\": {\r\n        color: \"#ff8f00\",\r\n      },\r\n    },\r\n    button: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CancelPresentationTwoToneIcon from \"@material-ui/icons/CancelPresentationTwoTone\";\r\n// import {CssBaseline} from \"@material-ui/core\"\r\nimport { Formik, Form } from \"formik\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as Yup from \"yup\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { SubSchemaMenu } from \"../sub-schema-menu/SubSchemaMenu\";\r\nimport { useStyles } from \"./selectTransactionDialogStyle\";\r\n\r\ninterface IConfirmRemoveItem {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const SelectTransactionDialog: React.FC<IConfirmRemoveItem> = ({\r\n  open,\r\n\r\n  handleClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const [preSubSchema, setPreSubSchema] = React.useState(subSchema);\r\n\r\n  React.useEffect(() => {\r\n    if (subSchema?.transactionType !== preSubSchema?.transactionType) {\r\n      setPreSubSchema(subSchema);\r\n      handleClose();\r\n    }\r\n  }, [\r\n    handleClose,\r\n    preSubSchema?.transactionType,\r\n    subSchema,\r\n    subSchema?.transactionType,\r\n  ]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ agree: false }}\r\n      validationSchema={Yup.object().shape({\r\n        agree: Yup.boolean().oneOf([true]),\r\n      })}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(true);\r\n\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n          handleClose();\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <div>\r\n          <Dialog\r\n            draggable\r\n            BackdropProps={{ classes: { root: classes.root } }}\r\n            PaperProps={{ classes: { root: classes.paper, elevation2: \"5\" } }}\r\n            style={{ boxShadow: \"none\" }}\r\n            open={open}\r\n            onClose={resetForm}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <CssBaseline />\r\n            <DialogTitle\r\n              style={{\r\n                backgroundColor: \"cornsilk\",\r\n                padding: 0,\r\n                boxShadow: \"0.1rem 0.1rem 0.1rem orange\",\r\n              }}\r\n              id=\"form-dialog-title\"\r\n            >\r\n              {subSchema?.transactionType ? (\r\n                <Alert\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  severity=\"warning\"\r\n                  action={\r\n                    <Tooltip title=\"Cancel\" placement=\"top\">\r\n                      <IconButton\r\n                        onClick={handleClose}\r\n                        aria-label=\"delete\"\r\n                        className={classes.alert}\r\n                        size=\"small\"\r\n                        disableRipple\r\n                      >\r\n                        <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  Changing the transaction will reset the customisation file\r\n                </Alert>\r\n              ) : (\r\n                <Alert\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  severity=\"info\"\r\n                  action={\r\n                    <Tooltip title=\"Cancel\" placement=\"top\">\r\n                      <IconButton\r\n                        onClick={handleClose}\r\n                        aria-label=\"delete\"\r\n                        className={classes.alert}\r\n                        size=\"small\"\r\n                        disableRipple\r\n                      >\r\n                        <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  Target transaction schema must be selected.\r\n                </Alert>\r\n              )}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"subtitle1\">\r\n                Select the transaction from the dropdown list\r\n              </Typography>\r\n\r\n              <DialogContentText></DialogContentText>\r\n            </DialogContent>\r\n            <Divider />\r\n            <Form>\r\n              <DialogActions>\r\n                <SubSchemaMenu />\r\n              </DialogActions>\r\n            </Form>\r\n          </Dialog>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useStyles } from \"./navTabsStyle\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { VerticalLinearStepper } from \"../vertical-stepper/VerticalStepper\";\r\nimport { ItemXMLViewer } from \"../itemXMLViewer/ItemXMLViewer\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\n// import { SearchPath } from \"../search/SearchPath\";\r\n// import { LixiItem } from \"../lixi-item/LixiItem\";\r\n// import { Customiser } from \"../../models/Customiser\";\r\n// import { LixiBase } from \"../../models/LixiBase\";\r\nimport { CreateInstructionTab } from \"./create-instruction/CreateInstruction\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { TabPanel } from \"./NavTabPanel\";\r\n// import { SubSchemaMenu } from \"../sub-schema-menu/SubSchemaMenu\";\r\nimport { SelectTransactionDialog } from \"../select-transaction-dialog/SelectTransactionDialog\";\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const NavTabs: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(0);\r\n  // const [itemInstruction, setItemInstruction] = React.useState<Element>();\r\n  const { customization, subSchema } = useTypedSelector(\r\n    (state) => state.customizer\r\n  );\r\n  const { schema } = useTypedSelector((state) => state.schema);\r\n  // const { data } = useTypedSelector((state) => state.item);\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  React.useEffect(() => {\r\n    if (!subSchema?.transactionType && schema && !open) {\r\n      setOpen(true);\r\n    }\r\n  }, [schema, subSchema?.transactionType, open]);\r\n\r\n  // React.useEffect(() => {\r\n  //   console.log(\"data:\", data);\r\n  //   if (!data) return;\r\n  //   const path = new LixiBase(data)?.path;\r\n  //   if (path) {\r\n  //     const newCustomiser = new Customiser(customization, path);\r\n  //     const customisedItem = newCustomiser?.getCustomisedItem()?.parentElement;\r\n  //     console.log(\"customisedItem\", customisedItem);\r\n  //     if (!customisedItem) return;\r\n  //     setItemInstruction(customisedItem);\r\n  //   }\r\n  // }, [customization, data]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SelectTransactionDialog open={open} handleClose={handleClose} />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {subSchema?.transactionType ? (\r\n            <Typography\r\n              onClick={() => setOpen(true)}\r\n              noWrap\r\n              variant=\"h6\"\r\n              style={{ flexGrow: 1, cursor: \"pointer\" }}\r\n            >\r\n              <em>{`${subSchema?.transactionType} - ${subSchema?.transactionVersion}`}</em>\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              onClick={() => setOpen(true)}\r\n              noWrap\r\n              color=\"secondary\"\r\n              variant=\"h6\"\r\n              style={{ flexGrow: 1, cursor: \"pointer\" }}\r\n            >\r\n              Transaction?\r\n            </Typography>\r\n          )}\r\n\r\n          <Tabs\r\n            centered\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Instruction set up\" {...a11yProps(0)} />\r\n            <Tab label=\"Create Instruction\" {...a11yProps(1)} />\r\n            <Tab label=\"View Instruction\" {...a11yProps(2)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Box>\r\n          <VerticalLinearStepper />\r\n        </Box>\r\n      </TabPanel>\r\n\r\n      <CreateInstructionTab value={value} index={1} />\r\n\r\n      <TabPanel value={value} index={2}>\r\n        {<ItemXMLViewer itemXML={customization} />}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      minHeight: \"100vh\",\r\n      backgroundColor: \"#333\",\r\n      padding: \"1rem\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        padding: \"0.5\",\r\n      },\r\n    },\r\n    main: {\r\n      backgroundColor: \"#fff\",\r\n      width: \"50%\",\r\n      margin: \"auto\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        width: \"100%\",\r\n        margin:   \"0\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"70%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from 'react';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { NavTabs } from \"./components/nav-taps/NavTabs\";\r\nimport {useStyles}from \"./appStyle\"\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    <div\r\n      className={classes.main}\r\n    >\r\n      <CssBaseline />\r\n      <NavTabs  />\r\n     \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Theme } from \"@material-ui/core\";\r\nimport { lightTheme } from \"./light\";\r\nimport { darkTheme } from \"./dark\";\r\n\r\nexport function getThemeByName(theme: string): Theme {\r\n  return themeMap[theme];\r\n}\r\n\r\nconst themeMap: { [key: string]: Theme } = {\r\n  lightTheme,\r\n  darkTheme,\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { getThemeByName } from \"./themes/getThem\";\r\n\r\nexport const ThemeContext = React.createContext(\r\n  (themeName: string): void => {}\r\n);\r\n// export const ThemeContext = React.createContext((themeName: string): void => { });\r\n\r\nconst ThemeProvider: React.FC = (props) => {\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = useState(\"lightTheme\");\r\n  // const [theme, setTheme] = useState(getThemeByName(\"darkTheme\"))\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = getThemeByName(themeName);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={_setThemeName}>\r\n      <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ThemProvider from \"./themeProvider\";\r\nimport { store } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <ThemProvider>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n      <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </ThemProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}