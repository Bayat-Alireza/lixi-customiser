{"version":3,"sources":["redux/action-types/index.ts","components/nav-taps/navTabsStyle.ts","components/vertical-stepper/verticalStepperStyle.ts","components/upload-file/uploadFileStyle.ts","components/upload-file/UploadFile.tsx","redux/reducers/ItemReducer.ts","enums/lixiEnums.ts","redux/reducers/customiserReducer.ts","redux/reducers/schemaReducer.ts","redux/reducers/index.ts","redux/store.ts","util/nameSpaces.ts","redux/action-creators/itemActionCreator.ts","redux/action-creators/customiserActionCreator.ts","redux/action-creators/schemaActionCreator.ts","hooks/useActions.ts","hooks/useTypeSelector.ts","components/vertical-stepper/upload-schema-step/uploadSchemaStepStyle.ts","components/vertical-stepper/upload-schema-step/UploadSchemaStep.tsx","components/vertical-stepper/upload-customisation-instruction/uploadCustomisationInstructionStyle.ts","components/vertical-stepper/upload-customisation-instruction/UploadCustomisationInstruction.tsx","components/vertical-stepper/VerticalStepper.tsx","components/itemXMLViewer/itemXMLViewerSettings.ts","components/itemXMLViewer/itemXMLViewerStyle.ts","components/itemXMLViewer/ItemXMLViewer.tsx","models/Customiser.ts","models/LixiBase.ts","models/ElementCustomiser.ts","components/lixi-list-item-header/lixiListItemHeaderStyle.ts","components/lixi-list-item-header/LixiListItemHeader.tsx","components/tool-tip/lixiItemToolTipStyle.ts","components/tool-tip/LixiItemToolTip.tsx","components/lixi-list-item/lixiListItemStyle.ts","components/formik-mterial-ui/AppCheckBox.tsx","components/confirm-remove-dialog/confirmRemoveItemDialogStyle.ts","components/confirm-remove-dialog/ConfirmRemoveItemDialog.tsx","components/lixi-list-item/LixiListItem.tsx","components/element-sub-items/elementSubItemsStyle.ts","components/element-sub-items/ElementSubItems.tsx","components/formik-mterial-ui/appTextFieldStyle.ts","components/formik-mterial-ui/AppTextField.tsx","components/excerpt-documentation/ExcerptDocumentation.tsx","components/customise-element/customiseElementStyle.ts","components/customise-element/CustomiseElement.tsx","components/customise-element/customiseElementSchema.ts","components/lixi-item/lixiItemStyle.ts","components/customise-attribute/integer-type-attribute/integerTypeAttributeStyle.ts","components/customise-attribute/integer-type-attribute/integerTypeAttributeSchema.ts","models/IntegerTypeAttributeCustomiser.ts","components/customise-attribute/integer-type-attribute/IntegerTypeAttribute.tsx","components/lixi-item/AttributeSwitchType.tsx","components/customise-attribute/string-type-attribute/stringTypeAttributeStyle.ts","components/customise-attribute/string-type-attribute/stringTypeAttributeSchema.ts","components/formik-mterial-ui/AppRadioButton.tsx","components/customise-attribute/string-type-attribute/string-to-pattern/stringToPatternStyle.ts","components/customise-attribute/string-type-attribute/string-to-pattern/StringToPattern.tsx","components/customise-attribute/string-type-attribute/string-to-list-header/stringToListHeaderSchema.ts","components/customise-attribute/string-type-attribute/string-to-list-header/stringToListHeaderStyle.ts","components/customise-attribute/string-type-attribute/string-to-list-header/StringToListHeader.tsx","components/customise-attribute/string-type-attribute/string-to-list-body/stringToListBodyStyle.ts","components/customise-attribute/string-type-attribute/string-to-list-body/StringToListBody.tsx","models/StringTypeAttributeCustomiser.ts","components/customise-attribute/string-type-attribute/StringTypeAttribute.tsx","components/lixi-item/lixi-item-attributes/attributesTransactionsStyle.ts","components/lixi-item/lixi-item-attributes/ItemAttributes.tsx","components/lixi-item/lixi-item-transactions/transactionsStyle.ts","components/lixi-item/lixi-item-transactions/Transactions.tsx","components/lixi-item/lixi-item-label-description/labelDescriptionStyle.ts","components/lixi-item/lixi-item-label-description/LabelDescription.tsx","components/customise-attribute/list-type-attribute/listTypeAttributeStyle.ts","models/ListTypeAttributeCustomiser.ts","components/customise-attribute/list-type-attribute/ListTypeAttribute.tsx","components/customise-simple-type/simple-token-type/simpleTokenTypeStyle.ts","models/TokenTypeCustomiser.ts","components/customise-simple-type/simple-token-type/SimpleTokenType.tsx","components/lixi-item/SimpleTypeSwitchType.tsx","components/lixi-item/LixiItem.tsx","components/breadCrumbs/breadCrumbsStyle.ts","components/breadCrumbs/breadCrumbsComponent.tsx","components/search/listBoxComponent.tsx","components/search/searchPathStyle.ts","components/search/SearchPath.tsx","components/nav-taps/create-instruction/CreateInstruction.tsx","components/nav-taps/NavTabPanel.tsx","components/sub-schema-menu/subSchemaMenuStyle.ts","components/sub-schema-menu/SubSchemaMenu.tsx","components/select-transaction-dialog/selectTransactionDialogStyle.ts","components/select-transaction-dialog/SelectTransactionDialog.tsx","components/nav-taps/NavTabs.tsx","appStyle.ts","App.tsx","reportWebVitals.ts","themes/getThem.ts","themes/light.ts","themes/dark.ts","themeProvider.tsx","index.tsx"],"names":["ItemActionType","CustomizationActionType","SchemaActionType","useStyles","makeStyles","theme","createStyles","root","flexGrow","tabPanelChildren","padding","spacing","breakpoints","down","appBar","backgroundColor","palette","primary","dark","width","margin","stepper","button","marginTop","marginRight","actionsContainer","marginBottom","resetContainer","customisationContainer","input","display","findPageIcon","color","light","loadIcon","main","fileName","getContrastText","borderRadius","cursor","label","alignItems","uploadButton","marginLeft","minWidth","UploadFile","saveFace","classes","description","React","setSelectedFile","style","accept","className","id","type","onChange","target","console","log","files","Grid","wrap","alignContent","container","item","Tooltip","title","htmlFor","IconButton","aria-label","component","fontSize","Typography","variant","noWrap","LixiAttributeEnum","LixiTagEnum","LixiLocalNameEnum","initialState","data","error","loading","markedForDeletionList","undefined","reducer","state","action","SEARCH_ITEM","SEARCH_ITEM_SUCCESS","payload","SEARCH_ITEM_ERROR","REST_ITEM","MARKED_FOR_DELETION","customization","subSchema","transactionType","transactionVersion","metaData","UPLOAD_CUSTOMIZATION","UPLOAD_CUSTOMIZATION_SUCCESS","doc","file","UPLOAD_CUSTOMIZATION_ERROR","CUSTOMIZE_SUB_SCHEMA","RESET_SUB_SCHEMA","UPDATE_CUSTOMISATION","schema","UPLOAD_SCHEMA","UPLOAD_SCHEMA_SUCCESS","UPLOAD_SCHEMA_ERROR","RESET_SCHEMA","reducers","combineReducers","itemReducer","customizer","customiserReducer","SchemaReducer","store","createStore","applyMiddleware","thunk","nameSpaceResolver","prefix","xs","lx","li","XmlUtil","parsedDoc","this","elementsPath","elements","getElementsByTagName","element","Array","prototype","fill","e","push","path","textContent","itemsPath","result","evaluateXpath","iterateNext","transaction","transactions","split","includes","parentElement","children","xpath","contextNode","evaluate","XPathResult","ANY_TYPE","ANY_UNORDERED_NODE_TYPE","singleNodeValue","xpathResult","standard","getSchemaDetails","getAttribute","version","appInfo","map","call","i","localName","searchItem","lixiItem","Promise","resolves","rejects","xmlUtile","getItemByPath","dispatch","getState","a","sch","message","resetItem","markedForDeletion","customizeSubSchema","resetCustomizeSubSchema","uploadExistingCustomization","parsExistingCustomization","DOMParser","parseFromString","reader","FileReader","onload","onerror","readAsText","existingSchema","toString","existingCustomization","updateCustomisation","customisation","uploadBaseSchema","parsBaseSchema","baseSchema","resetBaseSchema","err","useAction","useDispatch","bindActionCreators","actionCreator","useTypedSelector","useSelector","uploadContainer","maxWidth","justifyContent","height","upload","nextButton","fileDetailHeaderRow","fileDetailHeaderCell","UploadSchemaStep","handelNextClicked","fileSize","useMemo","size","Math","floor","parseFloat","pow","toFixed","Paper","sm","Collapse","in","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","name","lastModified","Date","Button","endIcon","onClick","disabled","flexDirection","UploadCustomisationInstruction","handelBack","activeStep","handelSkip","handelNext","startIcon","VerticalLinearStepper","labelProps","optional","useState","setActiveStep","stepProps","setStepProp","handleNext","prevActiveStep","CssBaseline","Stepper","orientation","Step","StepLabel","StepContent","completed","options","indent","newline","customThemeVsCode","tagColor","attributeKeyColor","textColor","attributeValueColor","separatorColor","position","overflow","maxHeight","header","top","right","left","boxShadow","downloadLink","secondary","textDecoration","ItemXMLViewer","itemXML","role","serializer","XMLSerializer","xmlString","serializeToString","filename","exportFile","resolve","xml","prettifyXml","Customiser","customiseItem","excerpt","documentation","_customiseItemStub","cloneNode","_customisationStub","docStub","createElement","append","ExcludedItem","removeCustomisedItem","setAttribute","excludedPath","removeChild","allPath","from","find","p","existingCustomisedItem","getCustomisedItem","customExcerpt","trim","customDocumentation","filter","startsWith","paths","allCustomisedPaths","forEach","exclude","include","LixiBase","annotated","annotation","length","ownerDocument","referenceTargets","targets","t","attributes","complexType","getLixiComplexType","child","attribute","complex","subElements","firstChild","firstElementChild","sequence","choice","Object","keys","restriction","ElementCustomiser","values","object","fixedList","includeAllElements","excludeAllElements","includeAllAttributes","excludeAllAttributes","heading","newMin","newMax","itemPath","setInLineAttributes","customMaxOccurs","customMinOccurs","customAttributes","customElements","att","idx","customisedEle","customHeading","parseInt","parentCustomised","parentStatus","pathList","pathLeaf","pop","customiser","join","customisedItem","getTouchedItem","customisedObject","included","subItemHeader","zIndex","viewItem","LixiListItemHeader","items","toggle","listName","selectedItemsLength","excluded","exclusion","arrayHelper","value","setValue","includeAll","setIncludeAll","excludeAll","setExcludeAll","useFormikContext","getFieldHelpers","submitForm","useEffect","toggleAll","newCustomisation","leafItem","notExcludeByPath","excludeByPath","copyList","splice","indexOf","StatusText","ListSubheader","ListItemIcon","ListItemSecondaryAction","Switch","checked","inputProps","ListItemText","tooltip","common","white","tooltip2","typography","pxToRem","LixiItemToolTip","placement","Fragment","subItem","AppCheckBox","props","useField","field","meta","FormControl","touched","FormControlLabel","control","Checkbox","paper","alert","ConfirmRemoveItemDialog","open","affected","handleClose","initialValues","agree","validationSchema","Yup","shape","oneOf","enableReinitialize","onSubmit","setSubmitting","resetForm","setTimeout","deletionList","isSubmitting","errors","Dialog","draggable","BackdropProps","PaperProps","elevation2","onClose","aria-labelledby","DialogTitle","Alert","severity","disableRipple","DialogContent","DialogContentText","Divider","DialogActions","LixiListItem","selectAll","fixedListItem","toggleSelectAll","affectedPath","setAffectedPath","setOpen","Status","status","furtherCustomisation","d","remove","affectedItem","affectedList","affectedDecedents","toggleExclude","ListItem","divider","dense","subEle","edge","paddingTop","ElementSubItems","subItems","setExcludedList","setSelectAll","setTouched","includeAllItem","titleCaseName","replace","RegExp","matched","toUpperCase","excludeAllItem","affected2","excludedFullPath","leaf","exc","pre","useCallback","render","helperText","background","borderColor","borderStyle","borderWidth","boxSizing","AppTextField","TextField","FormHelperTextProps","ExcerptDocumentation","multiline","fullWidth","rows","saveMinMax","gap","minMaxContainer","textFieldMinMax","saveButton","customisationTitleContainer","customisationTitle","customisationTitleExclusion","customisationTitleInclusion","customisationTooltip","CustomiseElement","previousValues","useRef","initialValue","setInitialValue","setChecked","itemSubElement","setItemSubElement","itemAttributes","setItemAttributes","excludedList","setFixedListItems","occursMinMax","setOccursMinMax","current","leafAttribs","itemEle","attributesPaths","results","leafEle","elementsPaths","excludeNotIncludedItems","copyAttributes","copyElements","leafItems","removeElementsAndAttributes","instruction","subElement","lixiSubElements","occurrenceMinMax","min","max","deleteInstruction","currentMin","currentMax","moreThan","test","exclusive","params","parent","CustomiseElementSchema","removeCustomisation","customise","event","copyInitialValues","copyListAttributes","copyListElements","toggleIncludeExclude","marginInline","border","itemLabelDescription","references","typeAttribute","otherAttribute","integerTypeSchema","optionalToMandatory","minInteger","typeError","integer","maxInteger","positive","IntegerTypeAttributeCustomiser","integerMinMax","customisedAttr","getAttributeNames","IntegerTypeAttribute","attCustomiser","JSON","stringify","placeholder","defaultProps","SwitchAttributeType","switchType","regex","transform","definition","enumeratedList","overflowY","customiseAttributeSchema","stringTo","pattern","AppRadioButton","onSelect","Radio","StringToPattern","onExit","FormHelperText","stringToEnumeratedListSchema","required","matches","textField","StringToListHeader","nameAlert","setNameAlert","enumList","val","enumerations","some","valuesCopy","formik","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","row","StringToListBody","StringTypeAttributeCustomiser","customPattern","customEnumeration","enumeration","regexDefinition","StringTypeAttribute","table","ItemAttributes","baseRestriction","Transactions","sort","paddingInline","Chip","avatar","Avatar","itemLabel","itemDescription","LabelDescription","Badge","badgeContent","ListTypeAttributeCustomiser","ListTypeAttribute","list","darken","text","hover","selectAllText","TokenTypeCustomiser","tokens","token","tokenEle","SimpleTokenType","enumItem","tokeCustomiser","List","checkedIcon","icon","indeterminateIcon","indeterminate","el","copyOfTokens","enumerationAddRemove","SwitchSimpleType","switchBase","LixiItem","openToCustomise","setOpenToCustomise","setAlert","setLixiItem","setExclude","ele","subheader","r","paddingLeft","borderLeft","link","borderBottom","leafLink","IconBreadcrumbs","Breadcrumbs","separator","pathSections","section","preventDefault","pathArr","index","currentTarget","innerHTML","handleClick","iconClickHandler","renderRow","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","ref","outerProps","useContext","ListboxComponent","other","itemData","Children","toArray","useTheme","smUp","useMediaQuery","up","noSsr","itemCount","itemSize","getChildSize","isValidElement","gridRef","resetAfterIndex","useResetCache","Provider","reduce","b","outerElementType","innerElementType","overscanCount","listbox","contrastText","SearchPath","setOptions","showSearchBox","setShowSearchBox","pathsCount","setPathsCount","_loading","newItem","getPathOfAllItemsInATransaction","Slide","direction","mountOnEnter","unmountOnExit","timeout","Autocomplete","option","searchText","disableListWrap","autoComplete","includeInputInList","renderInput","InputProps","endAdornment","CircularProgress","renderOption","CreateInstructionTab","itemInstruction","setItemInstruction","newCustomiser","hidden","TabPanel","menuButton","SubSchemaMenu","transactionList","setTransactionList","anchorEl","setAnchorEl","sortedTransactionList","s","innerText","getTransactions","aria-controls","aria-haspopup","Menu","keepMounted","Boolean","MenuItem","SelectTransactionDialog","preSubSchema","setPreSubSchema","a11yProps","NavTabs","AppBar","Toolbar","Tabs","centered","newValue","Tab","minHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","themeMap","lightTheme","createMuiTheme","darkTheme","ThemeContext","themeName","ThemeProvider","_setThemeName","getThemeByName","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b685c2d.chunk.js","sourcesContent":["export enum ItemActionType {\r\n  SEARCH_ITEM = \"search_item\",\r\n  SEARCH_ITEM_SUCCESS = \"search_item_success\",\r\n  SEARCH_ITEM_ERROR = \"search_item_error\",\r\n  REST_ITEM = \"resetItem\",\r\n  MARKED_FOR_DELETION = \"markedForDeletion\",\r\n}\r\n\r\nexport enum CustomizationActionType {\r\n  EXCLUDE = \"exclude\",\r\n  INCLUDE = \"include\",\r\n  CUSTOMISE_ELEMENT = \"customiseElement\",\r\n  UPLOAD_CUSTOMIZATION = \"uploadCustomization\",\r\n  UPLOAD_CUSTOMIZATION_SUCCESS = \"uploadCustomizationSuccess\",\r\n  UPLOAD_CUSTOMIZATION_ERROR = \"uploadCustomizationError\",\r\n  RESET_CUSTOMIZATION = \"resetCustomization\",\r\n  CUSTOMIZE_SUB_SCHEMA = \"customizeSubSchema\",\r\n  RESET_SUB_SCHEMA = \"resetSubSchema\",\r\n  OPTIONAL_TO_MANDATORY = \"optionalToMandatory\",\r\n  CUSTOM_HEADING = \"customHeading\",\r\n  CUSTOM_MAX_OCCURS = \"customMaxOccurs\",\r\n  CUSTOM_MIN_OCCURS = \"customMinOccurs\",\r\n  STRING_TO_LIST = \"stringToList\",\r\n  CUSTOM_DEFINITION = \"definition\",\r\n  STRING_TO_PATTERN = \"stringToPattern\",\r\n  EXCLUDE_SUB_ELEMENTS = \"excludeSubElements\",\r\n  REMOVE_DESCENDENT_CUSTOMISATION = \"removeDescendentCustomisation\",\r\n  UPDATE_CUSTOMISATION = \"updateCustomisation\",\r\n}\r\n\r\n\r\nexport enum SchemaActionType {\r\n  UPLOAD_SCHEMA = \"uploadSchema\",\r\n  UPLOAD_SCHEMA_SUCCESS = \"uploadSchemaSuccess\",\r\n  UPLOAD_SCHEMA_ERROR = \"uploadSchemaError\",\r\n  RESET_SCHEMA = \"reset\",\r\n}\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    tabPanelChildren: {\r\n      padding: theme.spacing(3),\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        padding: theme.spacing(0),\r\n      },\r\n    },\r\n    appBar: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n  })\r\n);\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      padding: 0,\r\n      margin: 0,\r\n      // margin: theme.spacing(1),\r\n    },\r\n    stepper:  {\r\n      padding:  \"0.5rem\",\r\n      margin:  \"0.5rem\",\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        padding:  \"0.2rem\",\r\n        margin:  \"0.2rem\"\r\n      }\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n      padding: theme.spacing(0, 2, 2),\r\n    },\r\n    customisationContainer: {\r\n      padding: theme.spacing(2, 2, 2),\r\n      margin: theme.spacing(1, 0, 1),\r\n    },\r\n  })\r\n);\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width:\"inherit\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    findPageIcon: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n\r\n    loadIcon:{\r\n      color: theme.palette.primary.main,\r\n\r\n    },\r\n\r\n    fileName: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      width:\"max-content\",\r\n      color: theme.palette.getContrastText(theme.palette.primary.light),\r\n      padding: theme.spacing(0.75),\r\n      borderRadius: \"0.2rem\",\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    label:{ \r\n      display: \"flex\", alignItems: \"center\" \r\n    },\r\n    uploadButton:{\r\n      marginLeft: theme.spacing(1), \r\n      minWidth: \"7rem\",\r\n     \r\n    },\r\n   \r\n  })\r\n);\r\n","import * as React from \"react\";\r\nimport { useStyles } from \"./uploadFileStyle\";\r\nimport { IconButton, Tooltip, Typography } from \"@material-ui/core\";\r\nimport PublishTwoToneIcon from '@material-ui/icons/PublishTwoTone';\r\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\r\nimport Grid from \"@material-ui/core/Grid\";\r\ninterface FormProps {\r\n  description: string;\r\n  saveFace: any; //(fileName:Blob) => Promise<void>, // callback taking a string and then dispatching a store actions\r\n}\r\n\r\nexport const UploadFile: React.FC<FormProps> = ({ saveFace, description }) => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = React.useState<File>();\r\n  const handleCapture = ({ target }: any) => {\r\n    console.log(\"file changed\");;\r\n    setSelectedFile(target.files[0]);\r\n    saveFace(target.files[0])\r\n  };\r\n\r\n  // const handleSubmit = React.useCallback(() => {\r\n  //   saveFace(selectedFile);\r\n  // },  [saveFace, selectedFile]);;\r\n\r\n  // React.useEffect(() => {\r\n  //   if (selectedFile?.name) {\r\n  //     console.log(\"loading...\");\r\n  //     saveFace(selectedFile);\r\n  //   }\r\n  // }, [saveFace, selectedFile,selectedFile?.name]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <input\r\n        accept=\".xml,.xsd\"\r\n        className={classes.input}\r\n        id=\"document\"\r\n        type=\"file\"\r\n        onChange={handleCapture}\r\n      />\r\n      <Grid\r\n        wrap=\"nowrap\"\r\n        alignContent=\"flex-start\"\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Tooltip title=\"\">\r\n            <label className={classes.label} htmlFor=\"document\">\r\n              <IconButton\r\n                className={classes.findPageIcon}\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                title=\"Browse\"\r\n              >\r\n                <FindInPageTwoToneIcon fontSize=\"large\" />\r\n              </IconButton>\r\n              <Typography variant=\"body2\" className={classes.fileName} noWrap>\r\n                Choose the file\r\n              </Typography>\r\n            </label>\r\n          </Tooltip>\r\n        </Grid>\r\n        {/* <Grid item>\r\n          {selectedFile?.name ? (\r\n            <IconButton\r\n              className={classes.loadIcon}\r\n              // onClick={() => handleSubmit()}\r\n              color=\"primary\"\r\n              aria-label=\"upload file\"\r\n              component=\"span\"\r\n              title=\"Load\"\r\n            >\r\n              <PublishTwoToneIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          ) : undefined}\r\n        </Grid> */}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import { ItemActionType } from \"../action-types\";\r\nimport { ItemAction } from \"../actions/item-actions\";\r\n\r\ninterface ItemState {\r\n  error: string | null;\r\n  data: Element | null;\r\n  loading: boolean;\r\n  markedForDeletionList: string[] | undefined;\r\n}\r\n\r\nconst initialState: ItemState = {\r\n  data: null,\r\n  error: null,\r\n  loading: false,\r\n  markedForDeletionList: undefined,\r\n};\r\nconst reducer = (\r\n  state: ItemState = initialState,\r\n  action: ItemAction\r\n): ItemState => {\r\n  switch (action.type) {\r\n    case ItemActionType.SEARCH_ITEM:\r\n      return {\r\n        loading: true,\r\n        error: null,\r\n        data: null,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.SEARCH_ITEM_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        data: action.payload,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.SEARCH_ITEM_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n        data: null,\r\n        markedForDeletionList: undefined,\r\n      };\r\n    case ItemActionType.REST_ITEM:\r\n      return { loading: false, error: null, data: null,markedForDeletionList:undefined  };\r\n    case ItemActionType.MARKED_FOR_DELETION:\r\n      return { ...state,markedForDeletionList:action.payload  };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export enum LixiAttributeEnum {\r\n  type = \"type\",\r\n  name = \"name\",\r\n  use = \"use\",\r\n  minOccurs = \"minOccurs\",\r\n  maxOccurs = \"maxOccurs\",\r\n  value = \"value\",\r\n  base = \"base\",\r\n}\r\n\r\nexport enum LixiTagEnum {\r\n  element = \"xs:element\",\r\n  annotation = \"xs:annotation\",\r\n  complexType = \"xs:complexType\",\r\n  choice = \"xs:choice\",\r\n  sequence = \"xs:sequence\",\r\n  attribute = \"xs:attribute\",\r\n  simpleType = \"xs:simpleType\",\r\n  restriction = \"xs:restriction\",\r\n  documentation = \"xs:documentation\",\r\n  path = \"lx:path\",\r\n  label = \"lx:label\",\r\n  transactions = \"li:transactions\",\r\n  enumeration = \"xs:enumeration\",\r\n  target = \"lx:target\",\r\n  references = \"lx:references\",\r\n}\r\n\r\nexport enum LixiLocalNameEnum {\r\n  element = \"element\",\r\n  complexType = \"complexType\",\r\n  choice = \"choice\",\r\n  sequence = \"sequence\",\r\n  attribute = \"attribute\",\r\n  simpleType = \"simpleType\",\r\n  restriction = \"restriction\",\r\n  annotation = \"annotation\",\r\n  documentation = \"documentation\",\r\n  path = \"path\",\r\n  label = \"label\",\r\n  transactions = \"transactions\",\r\n  enumeration = \"enumeration\",\r\n}\r\n","import { CustomizationActionType } from \"../action-types\";\r\nimport { CustomizationAction, SubSchema } from \"../actions/customiser-actions\";\r\n\r\ninterface CustomizationState {\r\n  customization: Element | undefined;\r\n  // customisedItem: Element | undefined;\r\n  loading: boolean;\r\n  error: string | null;\r\n  subSchema: SubSchema | undefined;\r\n  // customHeading?: string | undefined;\r\n  metaData: File | undefined;\r\n}\r\n\r\nconst initialState: CustomizationState = {\r\n  customization: undefined,\r\n  // customisedItem: undefined,\r\n  subSchema: { transactionType: undefined, transactionVersion: undefined },\r\n  error: null,\r\n  loading: false,\r\n  metaData: undefined,\r\n};\r\n\r\nconst reducer = (\r\n  state: CustomizationState = initialState,\r\n  action: CustomizationAction\r\n): CustomizationState => {\r\n  switch (action.type) {\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION:\r\n      return {\r\n        ...state,\r\n        customization: undefined,\r\n        // customisedItem: undefined,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        customization: action.payload.doc,\r\n        // customisedItem: undefined,\r\n        metaData: action.payload.file,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case CustomizationActionType.UPLOAD_CUSTOMIZATION_ERROR:\r\n      return {\r\n        ...state,\r\n        customization: undefined,\r\n        metaData: undefined,\r\n        // customisedItem: undefined,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CustomizationActionType.CUSTOMIZE_SUB_SCHEMA:\r\n      return { ...state, subSchema: action.payload };\r\n    case CustomizationActionType.RESET_SUB_SCHEMA:\r\n      return {\r\n        ...state,\r\n        // customHeading: undefined,\r\n        subSchema: undefined,\r\n        customization: undefined,\r\n        // customisedItem: undefined,\r\n      };\r\n    case CustomizationActionType.UPDATE_CUSTOMISATION:\r\n      return {\r\n        ...state,\r\n        customization: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { SchemaActionType } from \"../action-types\";\r\nimport { SchemaActions } from \"../actions/schema-actions\";\r\n\r\ninterface SchemaState {\r\n  loading: boolean;\r\n  schema: Document | undefined;\r\n  error: string | null;\r\n  metaData: File | undefined;\r\n}\r\n\r\nconst initialState: SchemaState = {\r\n  error: null,\r\n  loading: false,\r\n  schema: undefined,\r\n  metaData: undefined,\r\n};\r\n\r\nconst reducer = (\r\n  state: SchemaState = initialState,\r\n  action: SchemaActions\r\n): SchemaState => {\r\n  switch (action.type) {\r\n    case SchemaActionType.UPLOAD_SCHEMA:\r\n      return {\r\n        loading: true,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: null,\r\n      };\r\n    case SchemaActionType.UPLOAD_SCHEMA_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        error: null,\r\n        metaData: action.payload.file,\r\n        schema: action.payload.doc,\r\n      };\r\n    case SchemaActionType.UPLOAD_SCHEMA_ERROR:\r\n      return {\r\n        loading: false,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: action.payload,\r\n      };\r\n    case SchemaActionType.RESET_SCHEMA:\r\n      return {\r\n        loading: false,\r\n        schema: undefined,\r\n        metaData: undefined,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport itemReducer from \"./ItemReducer\";\r\nimport customiserReducer from \"./customiserReducer\";\r\nimport SchemaReducer from \"./schemaReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  item: itemReducer,\r\n  customizer: customiserReducer,\r\n  schema: SchemaReducer,\r\n});\r\n\r\nexport default reducers;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers\";\r\n\r\nexport const store = createStore(reducer, {}, applyMiddleware(thunk));\r\n","import { LixiTagEnum } from \"../enums/lixiEnums\";\r\ntype NameSpace = {\r\n  [ns: string]: string;\r\n};\r\n\r\nexport const nameSpaceResolver: XPathNSResolver = (\r\n  prefix: string | null\r\n): string | null => {\r\n  const ns: NameSpace = {\r\n    xs: \"http://www.w3.org/2001/XMLSchema\",\r\n    lx: \"lixi.org.au/schema/appinfo_elements\",\r\n    li: \"lixi.org.au/schema/appinfo_instructions\",\r\n  };\r\n  return prefix ? ns[prefix] : null;\r\n};\r\n\r\n// const parser = new DOMParser();\r\n// export const parsedXml = parser.parseFromString(master_schema, \"text/xml\");\r\n\r\n// export const path = parsedXml.evaluate(\r\n//   \"//lx:path[1]/text()\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.UNORDERED_NODE_ITERATOR_TYPE,\r\n//   null\r\n// );\r\n\r\n// export const result = parsedXml.evaluate(\r\n//   \"/xs:schema/xs:element\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.ANY_TYPE,\r\n//   null\r\n// );\r\n\r\n// export const packageElement = parsedXml.evaluate(\r\n//   \"/xs:schema/xs:element[@name='Package']\",\r\n//   parsedXml,\r\n//   nameSpaceResolver,\r\n//   XPathResult.ANY_TYPE,\r\n//   null\r\n// );\r\n\r\nexport class XmlUtil {\r\n  private parsedDoc: Document;\r\n  constructor(parsedDoc: Document) {\r\n    this.parsedDoc = parsedDoc;\r\n  }\r\n\r\n  getPathOfAllElements() {\r\n    const elementsPath = [];\r\n    const elements = this.parsedDoc.getElementsByTagName(LixiTagEnum.element);\r\n    for (const e of Array.prototype.fill(elements)) {\r\n      elementsPath.push(\r\n        e.getElementsByTagName(LixiTagEnum.path)[0].textContent\r\n      );\r\n    }\r\n    return elementsPath;\r\n  }\r\n\r\n  getPathOfAllItems() {\r\n    const itemsPath: string[] = [];\r\n    const result = this.evaluateXpath(\r\n      \"//lx:path[text()]/text()\",\r\n      this.parsedDoc\r\n    );\r\n    let path = result?.iterateNext();\r\n    while (path) {\r\n      itemsPath.push(path.textContent as string);\r\n      path = result?.iterateNext();\r\n    }\r\n\r\n    return itemsPath;\r\n  }\r\n\r\n  getPathOfAllItemsInATransaction(subSchema: string) {\r\n    const itemsPath: string[] = [];\r\n    const result = this.evaluateXpath(\r\n      \"//lx:path/following-sibling::li:transactions\",\r\n      this.parsedDoc\r\n    );\r\n    let transaction = result?.iterateNext();\r\n    while (transaction) {\r\n      const transactions = transaction.textContent?.split(\",\");\r\n      if (transactions && transactions.includes(subSchema)) {\r\n        itemsPath.push(\r\n          transaction.parentElement?.children[0].textContent as string\r\n        );\r\n      }\r\n      transaction = result?.iterateNext();\r\n    }\r\n    return itemsPath;\r\n  }\r\n\r\n  evaluateXpath(xpath: string, contextNode: Node | Document): XPathResult {\r\n    contextNode = !contextNode ? this.parsedDoc : contextNode;\r\n    return this.parsedDoc.evaluate(\r\n      xpath,\r\n      contextNode,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_TYPE,\r\n      null\r\n    );\r\n  }\r\n\r\n  getItemByPath(path: string): Element | undefined | null {\r\n    const xpathResult = this.parsedDoc.evaluate(\r\n      `//lx:path[text()='${path}'][1]`,\r\n      this.parsedDoc,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n      null\r\n    );\r\n    return xpathResult.singleNodeValue?.parentElement?.parentElement\r\n      ?.parentElement;\r\n  }\r\n  getSchemaDetails(): Element | undefined {\r\n    const xpathResult = this.parsedDoc.evaluate(\r\n      \"//lx:schemadetail\",\r\n      this.parsedDoc,\r\n      nameSpaceResolver,\r\n      XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n      null\r\n    );\r\n    if (xpathResult.singleNodeValue){\r\n      return xpathResult.singleNodeValue as Element;\r\n    }\r\n    // return xpathResult.singleNodeValue?.parentElement?.children[0];\r\n    \r\n  }\r\n\r\n  getTransactions() {\r\n    // const xpathResult = this.parsedDoc.evaluate(\r\n    //   \"//lx:schemadetail\",\r\n    //   this.parsedDoc,\r\n    //   nameSpaceResolver,\r\n    //   XPathResult.ANY_UNORDERED_NODE_TYPE,\r\n    //   null\r\n    // );\r\n    const transaction: {\r\n      transactionType: string;\r\n      transactionVersion: string;\r\n    }[] = [];\r\n    const standard = this.getSchemaDetails()?.getAttribute(\"transaction\");\r\n    const version = this.getSchemaDetails()?.getAttribute(\"version\");\r\n\r\n    if (standard && version) {\r\n      transaction.push({\r\n        transactionType: standard,\r\n        transactionVersion: version,\r\n      });\r\n      return transaction;\r\n    }\r\n    const appInfo = this.getSchemaDetails()?.parentElement?.children;\r\n    // const transaction: {\r\n    //   transactionType: string;\r\n    //   transactionVersion: string;\r\n    // }[] = [];\r\n    Array.prototype.map.call(appInfo, (i: Element) => {\r\n      if (i.localName === \"subschema\") {\r\n        transaction?.push({\r\n          transactionType: i.getAttribute(\"transactiontype\") as string,\r\n          transactionVersion: i.getAttribute(\"version\") as string,\r\n        });\r\n      }\r\n    });\r\n    return transaction;\r\n  }\r\n}\r\n","import { ItemActionType } from \"../action-types\";\r\n// import { master_schema } from \"../../assets/LIXI-Master-Schema\";\r\n// import * as JsSearch from \"js-search\";\r\nimport { Dispatch } from \"redux\";\r\nimport { \r\n  // parsedXml, \r\n  XmlUtil \r\n} from \"../../util/nameSpaces\";\r\nimport { ItemAction } from \"../actions/item-actions\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport const searchItem = (item: string) => {\r\n  const lixiItem = (schema: Document): Promise<Element | undefined | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const xmlUtile = new XmlUtil(schema);\r\n      if (item) {\r\n        resolves(xmlUtile.getItemByPath(item));\r\n      }\r\n    });\r\n  };\r\n  return async (dispatch: Dispatch<ItemAction>, getState: () => RootState) => {\r\n    \r\n    dispatch({\r\n      type: ItemActionType.SEARCH_ITEM,\r\n    });\r\n    try {\r\n      const sch = getState().schema.schema;;\r\n      if (!sch)  return;;\r\n      const element = (await lixiItem(sch)) as Element;\r\n      dispatch({\r\n        type: ItemActionType.SEARCH_ITEM_SUCCESS,\r\n        payload: element,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ItemActionType.SEARCH_ITEM_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetItem = () => {\r\n  return (dispatch: Dispatch<ItemAction>) => {\r\n    dispatch({\r\n      type: ItemActionType.REST_ITEM,\r\n    });\r\n  };\r\n};\r\n\r\nexport const markedForDeletion = (markedForDeletionList: string[]) => {\r\n  return (dispatch: Dispatch<ItemAction>) => {\r\n    dispatch({\r\n      type: ItemActionType.MARKED_FOR_DELETION,\r\n      payload: [...markedForDeletionList],\r\n    });\r\n  };\r\n};\r\n","import { CustomizationActionType } from \"../action-types\";\r\nimport { CustomizationAction, SubSchema } from \"../actions/customiser-actions\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"..\";\r\n\r\n\r\nexport const customizeSubSchema = (subSchema: SubSchema) => {\r\n  return (\r\n    dispatch: Dispatch<CustomizationAction>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: CustomizationActionType.CUSTOMIZE_SUB_SCHEMA,\r\n      payload: subSchema,\r\n    });\r\n  };\r\n};\r\n\r\nexport const resetCustomizeSubSchema = () => {\r\n  return (\r\n    dispatch: Dispatch<CustomizationAction>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: CustomizationActionType.RESET_SUB_SCHEMA,\r\n    });\r\n  };\r\n};\r\n\r\nexport const uploadExistingCustomization = (file: File) => {\r\n  const readExistingCustomization = (): Promise<ArrayBuffer | string | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        resolves(reader.result);\r\n      };\r\n      reader.onerror = rejects;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const parsExistingCustomization = (customization: string): Promise<Document> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const parser = new DOMParser();\r\n      const parsedCustomization = parser.parseFromString(\r\n        customization,\r\n        \"text/xml\"\r\n      );\r\n      resolves(parsedCustomization);\r\n    });\r\n  };\r\n\r\n  return async (dispatch: Dispatch<CustomizationAction>) => {\r\n    dispatch({\r\n      type: CustomizationActionType.UPLOAD_CUSTOMIZATION,\r\n    });\r\n    try {\r\n      const existingSchema = await readExistingCustomization();\r\n      if (existingSchema) {\r\n        const existingCustomization = await parsExistingCustomization(existingSchema?.toString());\r\n        dispatch({\r\n          type: CustomizationActionType.UPLOAD_CUSTOMIZATION_SUCCESS,\r\n          payload: {\r\n            doc: existingCustomization.getElementsByTagName(\r\n              \"Customisations\"\r\n            )[0],\r\n            file: file,\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CustomizationActionType.UPLOAD_CUSTOMIZATION_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCustomisation = (customisation: Element) => {\r\n  return (dispatch: Dispatch<CustomizationAction>) => {\r\n    dispatch({\r\n      type: CustomizationActionType.UPDATE_CUSTOMISATION,\r\n      payload: customisation,\r\n    });\r\n  };\r\n};","import { SchemaActionType } from \"../action-types\";\r\n// import { master_schema } from \"../../assets/LIXI-Master-Schema\";\r\n// import * as JsSearch from \"js-search\";\r\nimport { Dispatch } from \"redux\";\r\n// import { parsedXml, XmlUtil } from \"../../util/nameSpaces\";\r\nimport { SchemaActions } from \"../actions/schema-actions\";\r\nimport { RootState } from \"../reducers\";\r\n// import { render } from \"@testing-library/react\";\r\n\r\nexport const uploadBaseSchema = (file: File) => {\r\n  const readBaseSchema = (): Promise<ArrayBuffer | string | null> => {\r\n    return new Promise((resolves, rejects) => {\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        resolves(reader.result);\r\n      };\r\n      reader.onerror = rejects;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const parsBaseSchema = (baseSchema: string): Promise<Document> => {\r\n    return new Promise((resolves, rejects) => {\r\n      const parser = new DOMParser();\r\n      const parsedBaseSchema = parser.parseFromString(baseSchema, \"text/xml\");\r\n      resolves(parsedBaseSchema);\r\n    });\r\n  };\r\n\r\n  return async (\r\n    dispatch: Dispatch<SchemaActions>,\r\n    getState: () => RootState\r\n  ) => {\r\n    dispatch({\r\n      type: SchemaActionType.UPLOAD_SCHEMA,\r\n    });\r\n    try {\r\n      const baseSchema = await readBaseSchema();\r\n      if (baseSchema) {\r\n        const schema = await parsBaseSchema(baseSchema?.toString());\r\n        dispatch({\r\n          type: SchemaActionType.UPLOAD_SCHEMA_SUCCESS,\r\n          payload: { doc: schema, file: file },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SchemaActionType.UPLOAD_SCHEMA_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetBaseSchema = () => {\r\n  return (dispatch: Dispatch<SchemaActions>) => {\r\n    try {\r\n      dispatch({\r\n        type: SchemaActionType.RESET_SCHEMA,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SchemaActionType.UPLOAD_SCHEMA_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreator } from \"../redux\";\r\n\r\nexport const useAction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(actionCreator, dispatch);\r\n};\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from \"../redux\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    uploadContainer: {\r\n      maxWidth: \"75ch\",\r\n      minWidth: \"15rem\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      marginTop: \"1rem\",\r\n      padding: \"0.2rem 0.5rem\",\r\n      height: \"max-content\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    upload: {\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"80%\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    actionsContainer: {\r\n      margin: theme.spacing(1, 0, 1, 0),\r\n    },\r\n    nextButton: {\r\n      marginLeft: \"0.5rem\",\r\n    },\r\n    fileDetailHeaderRow:{\r\n      backgroundColor:theme.palette.primary.main,\r\n    },\r\n    fileDetailHeaderCell:{\r\n      \r\n      color:theme.palette.getContrastText(theme.palette.primary.main)\r\n    }\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// import { SubSchemaMenu } from \"../../sub-schema-menu/SubSchemaMenu\";\r\nimport { UploadFile } from \"../../upload-file/UploadFile\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\n\r\nimport { useStyles } from \"./uploadSchemaStepStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\ninterface IUploadSchemaStep {\r\n  handelNextClicked: () => void;\r\n}\r\n\r\nexport const UploadSchemaStep: React.FC<IUploadSchemaStep> = ({\r\n  handelNextClicked,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { uploadBaseSchema } = useAction();\r\n  const { schema,metaData } = useTypedSelector((state) => state.schema);\r\n\r\n  const fileSize = React.useMemo(()=>{\r\n    if (!metaData?.size) return\r\n    if (metaData?.size === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    \r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(metaData?.size) / Math.log(k));\r\n\r\n    return parseFloat((metaData?.size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },[metaData?.size])\r\n\r\n  return (\r\n    <>\r\n      <Box maxWidth=\"75ch\">\r\n        <Typography>\r\n          LIXI base schema must be uploaded.\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.uploadContainer}>\r\n       \r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={12} sm={12}>\r\n              <UploadFile\r\n                saveFace={(file: File) => uploadBaseSchema(file)}\r\n                description={\"Click to upload LIXI Base/Transaction Schema\"}\r\n              />\r\n            </Grid>\r\n            \r\n          <Collapse in={!!metaData}>\r\n            <Grid item xs={12}>\r\n              <TableContainer component={Paper}>\r\n              <Table  aria-label=\"file table\" size=\"small\">\r\n                <caption>File Details</caption>\r\n                  <TableHead className={classes.fileDetailHeaderRow}>\r\n                    <TableRow  >\r\n                      <TableCell className={classes.fileDetailHeaderCell} variant=\"head\" align=\"left\" >Name</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"left\">Last Modified</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Size</TableCell>\r\n                      <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Type</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow >\r\n                      <TableCell scope=\"row\" align=\"left\">{metaData?.name}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"left\">{metaData?.lastModified?new Date(metaData?.lastModified).toString():undefined}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"center\">{fileSize}</TableCell>\r\n                      <TableCell scope=\"row\" align=\"center\">{metaData?.type}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n                <div className={classes.actionsContainer}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handelNextClicked}\r\n                    disabled={schema ? false : true}\r\n                    className={classes.nextButton}\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n          </Collapse>\r\n            </Grid>\r\n        \r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    uploadContainer: {\r\n      maxWidth: \"75ch\",\r\n      minWidth: \"15rem\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      marginTop: \"1rem\",\r\n      padding: \"0.2rem 0.5rem\",\r\n      height: \"max-content\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    upload: {\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"80%\",\r\n      backgroundColor: \"#fffde7\",\r\n    },\r\n    actionsContainer: {\r\n      display:\"flex\",\r\n      margin: theme.spacing(1, 0, 1, 0),\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        margin: theme.spacing(1, 1, 1, 1),\r\n        flexDirection:\"column\",\r\n      }\r\n      \r\n      // width: \"max-content\",\r\n    },\r\n    button: {\r\n      marginLeft: \"0.1rem\",\r\n      [theme.breakpoints.down(\"xs\")]:{\r\n        marginTop: \"0.1rem\",\r\n\r\n      }\r\n    },\r\n    fileDetailHeaderRow:{\r\n      backgroundColor:theme.palette.primary.main,\r\n    },\r\n    fileDetailHeaderCell:{\r\n      \r\n      color:theme.palette.getContrastText(theme.palette.primary.main)\r\n    }\r\n    \r\n  })\r\n);\r\n","import React from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n// import ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { UploadFile } from \"../../upload-file/UploadFile\";\r\nimport { useStyles } from \"./uploadCustomisationInstructionStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\n// import ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\ninterface IUploadCustomisationInstruction {\r\n  handelBack: () => void;\r\n  handelSkip: () => void;\r\n  handelNext: () => void;\r\n  activeStep: number;\r\n}\r\n\r\nexport const UploadCustomisationInstruction: React.FC<IUploadCustomisationInstruction> = ({\r\n  handelBack,\r\n  handelSkip,\r\n  handelNext,\r\n  activeStep,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { uploadExistingCustomization } = useAction();\r\n  const { metaData } = useTypedSelector((state) => state.customizer);\r\n\r\n  const fileSize = React.useMemo(()=>{\r\n    if (!metaData?.size) return\r\n    if (metaData?.size === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    \r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(metaData?.size) / Math.log(k));\r\n\r\n    return parseFloat((metaData?.size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },[metaData?.size])\r\n  return (\r\n    <>\r\n      <Box maxWidth=\"75ch\">\r\n        <Typography>\r\n          If you already have an existing customisation instruction file you can\r\n          upload it here, otherwise a new customisation instruction file will be\r\n          created.\r\n        </Typography>\r\n      </Box>\r\n      <Paper className={classes.uploadContainer}>\r\n        \r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs={12} sm={12}>\r\n              <UploadFile\r\n                saveFace={(file: File) => uploadExistingCustomization(file)}\r\n                description={\"Click to upload an existing customisation file\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Collapse in={!!metaData}>\r\n            <TableContainer component={Paper}>\r\n            <Table  aria-label=\"file table\" size=\"small\">\r\n              <caption>File Details</caption>\r\n                <TableHead className={classes.fileDetailHeaderRow}>\r\n                  <TableRow  >\r\n                    <TableCell className={classes.fileDetailHeaderCell} variant=\"head\" align=\"left\" >Name</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"left\">Last Modified</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Size</TableCell>\r\n                    <TableCell className={classes.fileDetailHeaderCell} align=\"center\">Type</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow >\r\n                    <TableCell scope=\"row\" align=\"left\">{metaData?.name}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"left\">{metaData?.lastModified?new Date(metaData?.lastModified).toString():undefined}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"center\">{fileSize}</TableCell>\r\n                    <TableCell scope=\"row\" align=\"center\">{metaData?.type}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                </Collapse>\r\n          </Grid>\r\n            <Grid item>\r\n                  <div className={classes.actionsContainer}>\r\n                    <Button\r\n                      startIcon={<ArrowBackIosIcon />}\r\n                      size=\"small\"\r\n                      disabled={activeStep === 0}\r\n                      onClick={handelBack}\r\n                      className={classes.button}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n          </Grid>\r\n        \r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./verticalStepperStyle\";\r\n// import { useAction } from \"../../hooks/useActions\";\r\nimport { UploadSchemaStep } from \"./upload-schema-step/UploadSchemaStep\";\r\nimport { UploadCustomisationInstruction } from \"./upload-customisation-instruction/UploadCustomisationInstruction\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nexport const VerticalLinearStepper: React.FC = () => {\r\n  const labelProps: { optional?: React.ReactNode } = {\r\n    optional: <Typography variant=\"caption\">Optional</Typography>,\r\n  };\r\n \r\n\r\n  // const {\r\n  //   resetBaseSchema,\r\n  //   resetItem,\r\n  //   resetCustomizeSubSchema,\r\n  // } = useAction();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [stepProps, setStepProp] = React.useState<{ completed: boolean } | {}>(\r\n    {}\r\n  );\r\n  const classes = useStyles();\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  // const handleReset = () => {\r\n  //   setActiveStep(0);\r\n  //   setStepProp({});\r\n  //   resetBaseSchema();\r\n  //   resetItem();\r\n  //   resetCustomizeSubSchema();\r\n  // };\r\n\r\n  const handleSkip = () => {\r\n    setStepProp({ completed: false });\r\n    handleNext();\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline/>\r\n      <Stepper className={classes.stepper} activeStep={activeStep} orientation=\"vertical\">\r\n        <Step>\r\n        <StepLabel>{\"Upload LIXI Base Schema\"}</StepLabel>\r\n        <StepContent>\r\n            <UploadSchemaStep handelNextClicked={handleNext}  />\r\n        </StepContent>\r\n        </Step>\r\n        <Step {...stepProps}>\r\n          <StepLabel {...labelProps}>\r\n            <Typography variant=\"caption\">\r\n              Upload an existing customisation file\r\n            </Typography>\r\n          </StepLabel>\r\n          <StepContent>\r\n            <UploadCustomisationInstruction \r\n              handelBack={handleBack} \r\n              activeStep={activeStep} \r\n              handelSkip={handleSkip} \r\n              handelNext={handleNext}\r\n            />\r\n           \r\n          </StepContent>\r\n        </Step>\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n","export const options = { indent: 4, newline: \"\\n\" };\r\nexport const customTheme = {\r\n  tagColor: \"Orange\",\r\n  textColor: \"#FFFFFF\",\r\n  separatorColor: \"Orange\",\r\n};\r\nexport const customThemeVsCode = {\r\n  tagColor: \"#03a9f4\",\r\n  attributeKeyColor: \"#fdd835\",\r\n  textColor: \"#FFFFFF\",\r\n  attributeValueColor: \"#8bc34a\",\r\n  separatorColor: \"#03a9f4\",\r\n};\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      position: \"relative\",\r\n      overflow: \"scroll\",\r\n      backgroundColor: \"#444\",\r\n      maxHeight: \"100vh\",\r\n      marginTop: \"0.5rem\",\r\n      borderRadius: \"0.1rem\",\r\n    },\r\n    header: {\r\n      position: \"sticky\",\r\n      top: \"0\",\r\n      right: \"0\",\r\n      left: \"0\",\r\n      padding: \"0.5rem 1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#333\",\r\n      marginBottom: \"1rem\",\r\n      borderRadius: \"0.1rem\",\r\n      width: \"inherit\",\r\n      boxShadow: \"0.3rem 0.4rem #555\",\r\n      color: theme.palette.getContrastText(\"#333\"),\r\n    },\r\n    downloadLink: {\r\n      color: theme.palette.secondary.light,\r\n      textDecoration: \"none\",\r\n    },\r\n  })\r\n);\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport prettifyXml from \"prettify-xml\";\r\nimport React, { Fragment } from \"react\";\r\nimport XMLViewer from \"react-xml-viewer\";\r\nimport { customThemeVsCode, options } from \"./itemXMLViewerSettings\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { useStyles } from \"./itemXMLViewerStyle\";\r\n\r\ninterface IItemXMLViewer {\r\n  itemXML: Element | null | undefined;\r\n  role?: \"download\" | \"view\";\r\n}\r\n\r\nexport const ItemXMLViewer: React.FC<IItemXMLViewer> = ({ itemXML, role }) => {\r\n  const classes = useStyles();\r\n  const serializer = new XMLSerializer();\r\n  if (itemXML) {\r\n    const xmlString = serializer.serializeToString(itemXML);\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.header}>\r\n          <Typography variant=\"h5\">\r\n            {(!role || role ===   \"download\")?\"Customisation Instructions\":\"Item Instruction\"}\r\n          </Typography>\r\n          {(!role || role ===   \"download\") && (\r\n          (\r\n          (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  startIcon={<GetAppIcon />}\r\n                >\r\n                  <div>\r\n                    <DownloadLink\r\n                      label=\"Download\"\r\n                      filename=\"customisation.xml\"\r\n                      exportFile={() => Promise.resolve(xmlString)}\r\n                      style={{ color: \"pink\", textDecoration: \"none\" }}\r\n                    />\r\n                  </div>\r\n                </Button>\r\n          )\r\n          )\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ margin: \"1rem\" }}>\r\n          <XMLViewer\r\n            xml={prettifyXml(xmlString, options)}\r\n            theme={customThemeVsCode}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Fragment></Fragment>;\r\n  }\r\n};\r\n","export class Customiser {\r\n  customisation: Element;\r\n  path: string | undefined = undefined;\r\n  customiseItem: Element;\r\n  excerpt: string = \"\";\r\n  documentation: string = \"\";\r\n  constructor(customisation: Element | undefined = undefined, path?: string) {\r\n    this.customiseItem = this._customiseItemStub();\r\n    if (path) {\r\n      this.path = path;\r\n    }\r\n    if (customisation) {\r\n      this.customisation = customisation.cloneNode(true) as Element;\r\n    } else {\r\n      this.customisation = this._customisationStub();\r\n    }\r\n  }\r\n\r\n  itemPath() {\r\n    if (this.path) {\r\n      const doc = Customiser.docStub();\r\n      const path = doc.createElement(\"Path\");\r\n      path.textContent = this.path;\r\n      this.customiseItem.append(path);\r\n    }\r\n  }\r\n\r\n  exclude() {\r\n    if (this.ExcludedItem() || !this.path) return;\r\n    this.removeCustomisedItem();\r\n    const doc = Customiser.docStub();\r\n    const customiseItem = this._customiseItemStub();\r\n    customiseItem.setAttribute(\"Exclude\", \"Yes\");\r\n    const path = doc.createElement(\"Path\");\r\n    path.textContent = this.path;\r\n\r\n    customiseItem.append(path);\r\n    this.customisation.append(customiseItem);\r\n    return this.customiseItem;\r\n  }\r\n  include() {\r\n    const excludedPath: Element = this.ExcludedItem();\r\n    if (excludedPath && excludedPath.parentElement) {\r\n      this.customisation.removeChild(excludedPath.parentElement);\r\n    }\r\n  }\r\n\r\n  ExcludedItem(): Element {\r\n    const allPath = Array.from(\r\n      this.customisation?.getElementsByTagName(\"Path\")\r\n    );\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        if (p.parentElement?.getAttribute(\"Exclude\") === \"Yes\") {\r\n          return p.textContent === this.path;\r\n        }\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n\r\n  _customiseItemStub(): Element {\r\n    const doc = Customiser.docStub();\r\n    return doc.createElement(\"CustomiseItem\");\r\n  }\r\n\r\n  _customisationStub(): Element {\r\n    const parser = new DOMParser();\r\n    const customisationStub = `\r\n    <Customisations \r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n        xsi:noNamespaceSchemaLocation=\"LIXI-Customisation-By-Restriction.xsd\" \r\n        LIXICode=\"LIXI\" CustomisationCode=\"\" \r\n        LIXITransactionType=\"\" \r\n        customHeading=\"Custom Heading for All Customised Items\">\r\n    </Customisations>`;\r\n    const parsedXML = parser.parseFromString(customisationStub, \"text/xml\");\r\n    return parsedXML.getElementsByTagName(\"Customisations\")[0];\r\n  }\r\n\r\n  getCustomisedItem() {\r\n    const allPath = Array.from(this.customisation.getElementsByTagName(\"Path\"));\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        if (!p.parentElement?.getAttribute(\"Exclude\")) {\r\n          return p.textContent === this.path;\r\n        }\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n\r\n  getTouchedItem() {\r\n    const allPath = Array.from(this.customisation.getElementsByTagName(\"Path\"));\r\n    const excludedPath: Element = Array.prototype.find.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        return p.textContent === this.path;\r\n      }\r\n    );\r\n    return excludedPath;\r\n  }\r\n  removeCustomisedItem() {\r\n    const existingCustomisedItem = this.getCustomisedItem()?.parentElement;\r\n    if (existingCustomisedItem) {\r\n      this.customisation.removeChild(existingCustomisedItem);\r\n      return existingCustomisedItem;\r\n    }\r\n  }\r\n\r\n  static docStub(): Document {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(\"<root></root>\", \"text/xml\");\r\n  }\r\n\r\n  customExcerpt() {\r\n    if (!this.excerpt) return;\r\n    const doc = Customiser.docStub();\r\n    const customExcerpt = doc.createElement(\"CustomExcerpt\");\r\n    customExcerpt.textContent = this.excerpt.trim();\r\n    this.customiseItem.append(customExcerpt);\r\n  }\r\n  customDocumentation() {\r\n    if (!this.documentation) return;\r\n    const doc = Customiser.docStub();\r\n    const customDocumentation: Element = doc.createElement(\r\n      \"CustomDocumentation\"\r\n    );\r\n    customDocumentation.textContent = this.documentation.trim();\r\n    this.customiseItem.append(customDocumentation);\r\n  }\r\n\r\n  affectedDecedents() {\r\n    if (!this?.path) return;\r\n    const path = this.path;\r\n    const allPath = Array.from(\r\n      this.customisation?.getElementsByTagName(\"Path\")\r\n    );\r\n    const affectedItems: Element[] = Array.prototype.filter.call(\r\n      allPath,\r\n      (p: Element) => {\r\n        return p.textContent?.startsWith(path || \"\");\r\n      }\r\n    );\r\n\r\n    return affectedItems;\r\n  }\r\n  removeCustomisation(paths: string[]) {\r\n    const allCustomisedPaths = Array.from(\r\n      this.customisation.getElementsByTagName(\"Path\")\r\n    );\r\n\r\n    Array.prototype.forEach.call(allCustomisedPaths, (p: Element) => {\r\n      if (p) {\r\n        if (p?.textContent && paths.includes(p?.textContent)) {\r\n          if (p.parentElement) {\r\n            this.customisation.removeChild(p?.parentElement);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  excludeByPath(path: string) {\r\n    this.path = path;\r\n    this.exclude();\r\n  }\r\n  notExcludeByPath(path: string) {\r\n    this.path = path;\r\n    this.include();\r\n  }\r\n}\r\n","import { LixiLocalNameEnum, LixiTagEnum } from \"../enums/lixiEnums\";\r\ninterface ILixiBase {\r\n  element: Element;\r\n  annotated: boolean;\r\n}\r\nexport class LixiBase implements ILixiBase {\r\n  readonly element: Element;\r\n  readonly annotated: boolean;\r\n  constructor(element: Element) {\r\n    this.element = element.cloneNode(true) as Element;\r\n    this.annotated =\r\n      this.element.children[0].localName === LixiLocalNameEnum.annotation;\r\n  }\r\n\r\n  get transactions() {\r\n    if (this.annotated) {\r\n      const annotation = this.element.children[0];\r\n      const transactions = annotation?.getElementsByTagName(\r\n        LixiTagEnum.transactions\r\n      );\r\n      if (transactions.length) {\r\n        return transactions[0].textContent?.split(\",\");\r\n      }\r\n      // return this.element.children[0]\r\n      //   .getElementsByTagName(LixiTagEnum.transactions)[0]\r\n      //   .textContent?.split(\",\");\r\n    }\r\n    return [];\r\n  }\r\n\r\n  get path() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(LixiTagEnum.path)[0]\r\n        .textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get label() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(LixiTagEnum.label)[0]\r\n        .textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n  get documentation() {\r\n    if (this.annotated) {\r\n      return this.element.children[0].getElementsByTagName(\r\n        LixiTagEnum.documentation\r\n      )[0].textContent;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  rootDocument() {\r\n    return this.element.ownerDocument;\r\n  }\r\n\r\n  get references() {\r\n    const referenceTargets: string[] = [];\r\n    if (\r\n      !this.annotated ||\r\n      this.element.localName !== \"attribute\" ||\r\n      this.element.getAttribute(\"type\") !== \"referenceType\"\r\n    ) {\r\n      return undefined;\r\n    }\r\n    const targets = this.element.children[0].getElementsByTagName(\r\n      LixiTagEnum.target\r\n    );\r\n    Array.prototype.map.call(targets, (t) => {\r\n      referenceTargets.push(t.textContent);\r\n    });\r\n    return referenceTargets;\r\n  }\r\n\r\n  get baseRestriction() {\r\n    if (this.element.localName === \"simpleType\") {\r\n      const restriction = this.element.children[1];\r\n      return restriction.getAttribute(\"base\");\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get attributes() {\r\n    const attributes: Array<Element> = [];\r\n    const complexType = this.getLixiComplexType();\r\n    if (complexType) {\r\n      Array.from(complexType.children).forEach((child) => {\r\n        if (child.localName === LixiLocalNameEnum.attribute) {\r\n          attributes.push(child);\r\n        }\r\n      });\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n\r\n  getLixiComplexType() {\r\n    const complex: Element[] = [];\r\n    Array.from(this.element.children).forEach((child) => {\r\n      if (child.localName === LixiLocalNameEnum.complexType) {\r\n        complex.push(child);\r\n      }\r\n    });\r\n    return complex[0];\r\n  }\r\n\r\n  get lixiSubElements() {\r\n    const complexType = this.getLixiComplexType();\r\n    const subElements: { [key: string]: Element[] } = {};\r\n    const firstChild = complexType?.firstElementChild;\r\n\r\n    if (firstChild?.localName === LixiLocalNameEnum.sequence) {\r\n      subElements[LixiLocalNameEnum.sequence] = [\r\n        ...Array.from(firstChild.children),\r\n      ];\r\n    } else if (firstChild?.localName === LixiLocalNameEnum.choice) {\r\n      subElements[LixiLocalNameEnum.choice] = [\r\n        ...Array.from(firstChild.children),\r\n      ];\r\n    }\r\n    if (Object.keys(subElements).length > 0) {\r\n      return subElements;\r\n    }\r\n    return subElements;\r\n  }\r\n\r\n  get enumeration() {\r\n    if (this.element.localName === \"simpleType\") {\r\n      const restriction = this.element.children[1];\r\n      if (restriction.getAttribute(\"base\") === \"xs:token\") {\r\n        return [...Array.from(restriction.children)];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { Customiser } from \"./Customiser\";\r\nimport { CustomisedElementType } from \"./customisationTypes\";\r\n\r\nexport class ElementCustomiser extends Customiser {\r\n  object = {} as CustomisedElementType;\r\n  fixedList: boolean;\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: CustomisedElementType\r\n  ) {\r\n    super(customisation, path);\r\n    this.fixedList = !!(values?.elements.length || values?.attributes.length);\r\n    this.object = values || {\r\n      includeAllElements: true,\r\n      excludeAllElements: false,\r\n      includeAllAttributes: true,\r\n      excludeAllAttributes: false,\r\n      elements: [],\r\n      attributes: [],\r\n      heading: \"\",\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      newMin: \"\",\r\n      newMax: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      includeAllAttributes,\r\n      attributes,\r\n      includeAllElements,\r\n      elements,\r\n      newMin,\r\n      newMax,\r\n      documentation,\r\n      excerpt,\r\n      heading,\r\n    } = this.object;\r\n    if (\r\n      !includeAllAttributes &&\r\n      !attributes.length &&\r\n      !includeAllElements &&\r\n      !elements.length &&\r\n      !newMax &&\r\n      !newMin &&\r\n      !documentation &&\r\n      !heading &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.customMaxOccurs();\r\n    this.customMinOccurs();\r\n    this.customAttributes();\r\n    this.customElements();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  customMinOccurs() {\r\n    if (this.object.newMin) {\r\n      this.customiseItem.setAttribute(\"CustomMinOccurs\", \"Yes\");\r\n      const doc = Customiser.docStub();\r\n      const customMinOccurs = doc.createElement(\"CustomMinOccurs\");\r\n      customMinOccurs.textContent = this.object.newMin.toString();\r\n      this.customiseItem.append(customMinOccurs);\r\n    }\r\n  }\r\n  customMaxOccurs() {\r\n    if (this.object.newMax) {\r\n      this.customiseItem.setAttribute(\"CustomMaxOccurs\", \"Yes\");\r\n      const doc = Customiser.docStub();\r\n      const customMaxOccurs = doc.createElement(\"CustomMaxOccurs\");\r\n      customMaxOccurs.textContent = this.object.newMax.toString();\r\n      this.customiseItem.append(customMaxOccurs);\r\n    }\r\n  }\r\n\r\n  customAttributes() {\r\n    if (!this.object.attributes.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.attributes.forEach((att, idx) => {\r\n      const attribute = doc.createElement(\"Attribute\");\r\n      attribute.textContent = att;\r\n      this.customiseItem.append(attribute);\r\n    });\r\n  }\r\n  customElements() {\r\n    if (!this.object.elements.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.elements.forEach((att, idx) => {\r\n      const element = doc.createElement(\"Element\");\r\n      element.textContent = att;\r\n      this.customiseItem.append(element);\r\n    });\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    if (this.object.heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", this.object.heading);\r\n    }\r\n    if (this.object.elements.length || this.object.attributes.length) {\r\n      this.customiseItem.setAttribute(\"Include\", \"Yes\");\r\n    }\r\n    if (this.object.elements.length) {\r\n      // this.customiseItem.setAttribute(\"ExcludeAllElements\", \"No\");\r\n    }\r\n    if (this.object.attributes.length) {\r\n      // this.customiseItem.setAttribute(\"ExcludeAllAttributes\", \"No\");\r\n    }\r\n    if (this.object.includeAllAttributes) {\r\n      // this.customiseItem.setAttribute(\"IncludeAllAttributes\", \"Yes\");\r\n    } else if (!this.object.attributes.length && this.object.elements.length) {\r\n      this.customiseItem.setAttribute(\"ExcludeAllAttributes\", \"Yes\");\r\n    }\r\n    if (this.object.includeAllElements) {\r\n      // this.customiseItem.setAttribute(\"IncludeAllElements\", \"Yes\");\r\n    } else if (!this.object.elements.length && this.object.attributes.length) {\r\n      this.customiseItem.setAttribute(\"ExcludeAllElements\", \"Yes\");\r\n    }\r\n    if (\r\n      !this.object.elements.length &&\r\n      this.object.includeAllElements &&\r\n      !this.object.attributes.length &&\r\n      this.object.includeAllAttributes\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      !this.object.elements.length &&\r\n      !this.object.includeAllElements &&\r\n      !this.object.attributes.length &&\r\n      !this.object.includeAllAttributes &&\r\n      !this.object.heading &&\r\n      !this.object.documentation &&\r\n      !this.object.excerpt\r\n    ) {\r\n      return this.exclude();\r\n    }\r\n  }\r\n\r\n  // Remove a customsed element, while switching from \r\n  // customisation by inclusion to customisation by exclusion \r\n  removeElementsAndAttributes() {\r\n    const customisedEle = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedEle) return;\r\n    const customHeading = customisedEle.getAttribute(\"customHeading\");\r\n    const result = Array.prototype.find.call(\r\n      customisedEle.children,\r\n      (child: Element) => {\r\n        return [\"CustomDocumentation\", \"CustomExcerpt\"].includes(\r\n          child.localName\r\n        );\r\n      }\r\n    );\r\n    if (!result && !customHeading) {\r\n      customisedEle.parentElement?.removeChild(customisedEle);\r\n      return;\r\n    }\r\n    Array.prototype.forEach.call(customisedEle.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"Element\":\r\n          customisedEle.removeChild(child);\r\n          break;\r\n        case \"Attribute\":\r\n          customisedEle.removeChild(child);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  customisedObject() {\r\n    const customisedEle = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedEle) return this.object;\r\n    this.object.excludeAllAttributes =\r\n      customisedEle.getAttribute(\"ExcludeAllAttributes\") === \"Yes\";\r\n    this.object.excludeAllElements =\r\n      customisedEle.getAttribute(\"ExcludeAllElements\") === \"Yes\";\r\n    this.fixedList = !!customisedEle.getAttribute(\"Include\");\r\n    const heading = customisedEle.getAttribute(\"customHeading\");\r\n    this.object.heading = heading ? heading : undefined;\r\n    // this.object.includeAllAttributes = !this.object.excludeAllAttributes;\r\n    // this.object.includeAllElements = !this.object.excludeAllElements;\r\n\r\n    Array.prototype.forEach.call(customisedEle.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomMaxOccurs\":\r\n          const newMax = child.textContent;\r\n          this.object.newMax = newMax ? parseInt(newMax) : \"\";\r\n          break;\r\n        case \"CustomMinOccurs\":\r\n          const newMin = child.textContent;\r\n          this.object.newMin = newMin ? parseInt(newMin) : \"\";\r\n          break;\r\n        case \"Attribute\":\r\n          const attribute = child.textContent;\r\n          if (!attribute) break;\r\n          this.object.attributes?.push(attribute);\r\n          break;\r\n        case \"Element\":\r\n          const element = child.textContent;\r\n          if (!element) break;\r\n          this.object.elements?.push(element);\r\n          break;\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent;\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent;\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n  static parentCustomised = (\r\n    path: string,\r\n    customisation: Element,\r\n    type: string\r\n  ): { included: boolean; path: string } | undefined => {\r\n    const parentStatus = {} as { included: boolean; path: string };\r\n\r\n    const pathList = path.split(\".\");\r\n    const pathLeaf = pathList.pop();\r\n    const customiser = new ElementCustomiser(customisation, pathList.join(\".\"));\r\n    const customisedItem = customiser.getTouchedItem()?.parentElement;\r\n    customiser.customisedObject();\r\n    if (customisedItem) {\r\n      if (customisedItem.getAttribute(\"Exclude\")) {\r\n        parentStatus.included = false;\r\n        parentStatus.path = pathList.join(\".\");\r\n        return parentStatus;\r\n      }\r\n      if (!customisedItem.getAttribute(\"Include\")) {\r\n        parentStatus.included = true;\r\n        parentStatus.path = pathList.join(\".\");\r\n        return parentStatus;\r\n      }\r\n      if (type === \"element\") {\r\n        if (customisedItem.getAttribute(\"ExcludeAllElements\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        } else {\r\n          if (pathLeaf && customiser.object.elements.includes(pathLeaf)) {\r\n            parentStatus.included = true;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          } else {\r\n            parentStatus.included = false;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          }\r\n        }\r\n      } else if (type === \"attribute\") {\r\n        if (customisedItem.getAttribute(\"ExcludeAllAttributes\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        } else {\r\n          if (pathLeaf && customiser.object.attributes.includes(pathLeaf)) {\r\n            parentStatus.included = true;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          } else {\r\n            parentStatus.included = false;\r\n            parentStatus.path = pathList.join(\".\");\r\n            return parentStatus;\r\n          }\r\n        }\r\n      }\r\n      pathList.pop();\r\n    }\r\n    while (pathList.length) {\r\n      const pathLeaf = pathList.pop();\r\n      const customiser = new ElementCustomiser(\r\n        customisation,\r\n        pathList.join(\".\")\r\n      );\r\n      const customisedItem = customiser.getTouchedItem()?.parentElement;\r\n      customiser.customisedObject();\r\n      if (customisedItem) {\r\n        if (customisedItem.getAttribute(\"Exclude\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }\r\n\r\n        if (!customisedItem.getAttribute(\"Include\")) {\r\n          parentStatus.included = true;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }\r\n        if (customisedItem.getAttribute(\"ExcludeAllElements\")) {\r\n          parentStatus.included = false;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        } else if (pathLeaf && customiser.object.elements.includes(pathLeaf)) {\r\n          parentStatus.included = true;\r\n          parentStatus.path = pathList.join(\".\");\r\n          return parentStatus;\r\n        }\r\n      }\r\n    }\r\n    return;\r\n  };\r\n}\r\n\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      // marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport React from \"react\";\r\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport { useStyles } from \"./lixiListItemHeaderStyle\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { FieldArrayRenderProps, useFormikContext } from \"formik\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\ninterface IHeaderLixiItem {\r\n  name: \"includeAllElements\" | \"includeAllAttributes\";\r\n  header: string;\r\n  items: (LixiBase | null | undefined)[];\r\n  selectedItemsLength: number;\r\n  toggle: (value:string) => void;\r\n  arrayHelper:FieldArrayRenderProps\r\n  listName:\"elements\" | \"attributes\"\r\n  excluded:string[]\r\n  included:string[]\r\n  exclusion:boolean\r\n}\r\n\r\nexport const LixiListItemHeader: React.FC<IHeaderLixiItem> = ({\r\n  name,\r\n  toggle,\r\n  items,\r\n  listName,\r\n  selectedItemsLength,\r\n  header,\r\n  excluded,\r\n  included,\r\n  arrayHelper:FieldArrayRenderProps,\r\n  exclusion\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value,setValue]=React.useState<string>(\"\")\r\n  const [includeAll, setIncludeAll]= React.useState(true)\r\n  const [excludeAll, setExcludeAll]= React.useState(false)\r\n  const {updateCustomisation} = useAction()\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n\r\n  const {values,getFieldHelpers,submitForm} = useFormikContext<CustomisedElementType>()\r\n\r\n  React.useEffect(()=>{\r\n    if(selectedItemsLength === items.length ){\r\n      setValue(name)\r\n      getFieldHelpers(name).setValue(true)\r\n      return\r\n    }\r\n    getFieldHelpers(name).setValue(false)\r\n    setValue(\"\")\r\n    \r\n  },[getFieldHelpers, items.length, name, selectedItemsLength, value, values])\r\n\r\n  const toggleAll = ()=>{\r\n    \r\n    if(!exclusion){\r\n      const copyList = [...values[listName]]\r\n      setIncludeAll(!includeAll)\r\n      if(!includeAll){\r\n        items.forEach((item,idx)=>{\r\n          const leafItem = item?.path?.split(\".\").pop() \r\n          if(leafItem && !copyList.includes(leafItem) ){\r\n            copyList.push(leafItem) \r\n          }\r\n        })\r\n        getFieldHelpers(listName).setValue(copyList)\r\n        \r\n        submitForm()\r\n        return \r\n      }\r\n      items.forEach((item,idx)=>{\r\n        const leafItem = item?.path?.split(\".\").pop() \r\n        if(leafItem && copyList.includes(leafItem) && !included.includes(leafItem) ){\r\n          copyList.splice(copyList.indexOf(leafItem),1) \r\n        }\r\n        getFieldHelpers(listName).setValue(copyList)\r\n      })\r\n      // setIncludeAll(true)\r\n      submitForm()\r\n    }\r\n    else{\r\n      const newCustomisation = new Customiser(customization);\r\n      setExcludeAll(!excludeAll)\r\n      items.forEach((item,idx)=>{\r\n        const path = item?.path\r\n        const leafItem = path?.split(\".\").pop() \r\n        if(!excludeAll){\r\n          if(path && leafItem && !included.includes(leafItem) && !excluded.includes(leafItem)){\r\n            newCustomisation.excludeByPath(path)\r\n          }\r\n      }else{\r\n        if(path && leafItem && !included.includes(leafItem) && excluded.includes(leafItem)){\r\n          newCustomisation.notExcludeByPath(path)\r\n        }\r\n      }\r\n      })\r\n      updateCustomisation(newCustomisation.customisation)\r\n    }\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if(items.length === excluded.length){\r\n      setExcludeAll(true)\r\n      return\r\n    }\r\n    setExcludeAll(false)\r\n  },[excluded.length, items.length])\r\n  React.useEffect(()=>{\r\n    if(items.length === selectedItemsLength){\r\n      setIncludeAll(true)\r\n      return\r\n    }\r\n    setIncludeAll(false)\r\n  },[items.length, selectedItemsLength, setIncludeAll])\r\n\r\n  const StatusText = ()=>{\r\n    if(exclusion && excludeAll){\r\n      return <Typography color=\"secondary\" variant=\"button\"><strong>{\" - \"}All Excluded</strong></Typography>\r\n    }\r\n    if(!exclusion && items.length === selectedItemsLength ){\r\n      return <Typography color=\"primary\" variant=\"button\"><strong style={{color:\"green\"}}>{\" - \"}All Included</strong></Typography>\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <div \r\n        onClick={()   =>   toggleAll()} \r\n        style={{cursor:\"pointer\"}}>\r\n      <ListSubheader\r\n        key={name}\r\n        style={{ marginTop: \"0\", alignItems: \"center\" }}\r\n        className={classes.subItemHeader}\r\n      >\r\n        \r\n         {!exclusion &&( <ListItemIcon>\r\n          \r\n           {(selectedItemsLength > 0 && selectedItemsLength < items.length)\r\n            ? <IndeterminateCheckBoxTwoToneIcon color=\"primary\" />\r\n            : includeAll\r\n            ? <CheckRoundedIcon style={{ color: \"green\" }} fontSize=\"default\" />\r\n            :<CloseOutlinedIcon fontSize=\"small\" style={{ color: \"red\" }}/>}\r\n          \r\n          </ListItemIcon>)}\r\n          <ListItemSecondaryAction>\r\n          {exclusion && <Switch size=\"small\"\r\n              checked={(items.length === excluded.length)}\r\n              onChange={(e) => toggleAll()}\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n            />}\r\n          </ListItemSecondaryAction>\r\n          <ListItemText primary={<>{header}<StatusText/></>} />\r\n      </ListSubheader>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: \"rgba(0, 0, 0, 0.87)\",\r\n      // boxShadow: theme.shadows[1],\r\n      fontSize: 16,\r\n    },\r\n    tooltip2: {\r\n      backgroundColor: \"#fff\",\r\n      color: \"rgba(0, 0, 0, 0.87)\",\r\n      maxWidth: 220,\r\n      fontSize: theme.typography.pxToRem(16),\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InfoTwoToneIcon from \"@material-ui/icons/InfoTwoTone\";\r\nimport { useStyles } from \"./lixiItemToolTipStyle\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\n\r\ninterface IToolTip {\r\n  lixiItem: LixiBase;\r\n  placement:\r\n    | \"top-start\"\r\n    | \"top\"\r\n    | \"top-end\"\r\n    | \"left-start\"\r\n    | \"left\"\r\n    | \"left-end\"\r\n    | \"right-start\"\r\n    | \"right\"\r\n    | \"right-end\"\r\n    | \"bottom-start\"\r\n    | \"bottom\"\r\n    | \"bottom-end\";\r\n}\r\n\r\nexport const LixiItemToolTip: React.FC<IToolTip> = ({\r\n  lixiItem,\r\n  placement,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Tooltip\r\n      placement={placement}\r\n      className={classes.tooltip2}\r\n      title={\r\n        <React.Fragment>\r\n          <Typography color=\"inherit\">{lixiItem.label}</Typography>\r\n          {lixiItem.documentation}\r\n        </React.Fragment>\r\n      }\r\n    >\r\n      <InfoTwoToneIcon className={classes.viewItem} fontSize=\"small\" />\r\n    </Tooltip>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItem: {\r\n      height: \"16rem\",\r\n      // maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\r\nimport React from \"react\";\r\nimport { useField, FieldAttributes } from \"formik\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\ntype AppTextFieldProps = { label?: string } & CheckboxProps &\r\n  FieldAttributes<{}>;\r\n\r\nexport const AppCheckBox: React.FC<AppTextFieldProps> = ({\r\n  checked,\r\n  label,\r\n  ...props\r\n}) => {\r\n  const [field,meta] = useField<{}>(props);\r\n  if (label)  {\r\n    return (\r\n      <FormControl error={meta.touched && meta.error?true:false }>\r\n        {/* <FormHelperText>{meta.touched && meta.error? meta.error:undefined}</FormHelperText> */}\r\n        <FormControlLabel\r\n          \r\n          style={{ padding: 0,color:meta.touched && meta.error?\"red\":\"inherit\" }}\r\n          control={<Checkbox checked={checked} {...field} {...props} />}\r\n          label={label}\r\n        />\r\n      \r\n      </FormControl>\r\n      \r\n    );\r\n  }  else  {\r\n    return <Checkbox checked={checked} {...field} {...props} />;;\r\n  }\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n\r\n    paper: {\r\n      // backgroundColor: \"transparent\",\r\n      boxShadow: \"1px 1px 3px #BDBDBD\",\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0),\r\n    },\r\n    alert: {\r\n      color: \"#c43e00\",\r\n      \"&:hover\": {\r\n        color: \"#ff8f00\",\r\n      },\r\n    },\r\n    button: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { AppCheckBox } from \"../formik-mterial-ui/AppCheckBox\";\r\nimport CancelPresentationTwoToneIcon from \"@material-ui/icons/CancelPresentationTwoTone\";\r\n// import {CssBaseline} from \"@material-ui/core\"\r\nimport { Formik, Form } from \"formik\";\r\nimport { useStyles } from \"./confirmRemoveItemDialogStyle\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as Yup from \"yup\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\n\r\ninterface IConfirmRemoveItem {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  affected: { path: string; items: string[] } | undefined;\r\n}\r\n\r\nexport const ConfirmRemoveItemDialog: React.FC<IConfirmRemoveItem> = ({\r\n  open,\r\n  affected,\r\n  handleClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { markedForDeletion } = useAction();\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  \r\n  return (\r\n    <Formik\r\n      initialValues={{ agree: false, ...affected }}\r\n      validationSchema={Yup.object().shape({\r\n        agree: Yup.boolean().oneOf([true]),\r\n      })}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(true);\r\n          const deletionList = markedForDeletionList\r\n            ? [...markedForDeletionList]\r\n            : [];\r\n          values.items.forEach((item) => {\r\n            if (!markedForDeletionList?.includes(item)) {\r\n              deletionList.push(item);\r\n            }\r\n          });\r\n          markedForDeletion([...deletionList]);\r\n          setSubmitting(false);\r\n          resetForm();\r\n          handleClose();\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <div>\r\n          <Dialog\r\n            draggable\r\n            BackdropProps={{ classes: { root: classes.root } }}\r\n            PaperProps={{ classes: { root: classes.paper, elevation2: \"5\" } }}\r\n            style={{ boxShadow: \"none\" }}\r\n            open={open}\r\n            onClose={resetForm}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <CssBaseline />\r\n            <DialogTitle\r\n              style={{\r\n                backgroundColor: \"cornsilk\",\r\n                padding: 0,\r\n                boxShadow: \"1px 1px 1px orange\",\r\n              }}\r\n              id=\"form-dialog-title\"\r\n            >\r\n              <Alert\r\n                style={{ width: \"100%\" }}\r\n                variant=\"standard\"\r\n                severity=\"warning\"\r\n                action={\r\n                  <Tooltip title=\"Cancel\" placement=\"top\">\r\n                    <IconButton\r\n                      onClick={handleClose}\r\n                      aria-label=\"delete\"\r\n                      className={classes.alert}\r\n                      size=\"small\"\r\n                      disableRipple\r\n                    >\r\n                      <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              >\r\n                Excluding{\" \"}\r\n                <em>\r\n                  <strong>{affected?.path.split(\".\").pop()}</strong>\r\n                </em>{\" \"}\r\n                will delete all of its customised descendants\r\n              </Alert>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"subtitle1\">\r\n                Following customisation will be lost.\r\n              </Typography>\r\n              {affected?.items.map((i, idx) => {\r\n                return <li key={i}>{`${i}`}</li>;\r\n              })}\r\n              <DialogContentText></DialogContentText>\r\n            </DialogContent>\r\n            <Divider />\r\n            <Form>\r\n              <DialogActions\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  padding: \"0.2rem 1rem\",\r\n                }}\r\n              >\r\n                <AppCheckBox\r\n                  checked={values.agree}\r\n                  name=\"agree\"\r\n                  label=\"I know what I'm doing\"\r\n                  onClick={() => (values.agree = !values.agree)}\r\n                  value={`${values?.agree}`}\r\n                />\r\n                {/* <Checkbox value={values.agree} name=\"agree\" /> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  disabled={isSubmitting}\r\n                  size=\"small\"\r\n                  // onClick={handleClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Exclude\r\n                </Button>\r\n              </DialogActions>\r\n            </Form>\r\n          </Dialog>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Fragment } from \"react\";\r\n// import { AppCheckBox } from \"../formik-mterial-ui/AppCheckBox\";\r\nimport { LixiItemToolTip } from \"../tool-tip/LixiItemToolTip\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { FieldArrayRenderProps, useFormikContext } from \"formik\";\r\n\r\nimport { useStyles } from \"./lixiListItemStyle\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { ConfirmRemoveItemDialog } from \"../confirm-remove-dialog/ConfirmRemoveItemDialog\";\r\n// import DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n// import RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\n// import Switch from \"@material-ui/core/Switch\";\r\n\r\ninterface IListLixiItem {\r\n  listName: \"elements\" | \"attributes\";\r\n  element: LixiBase;\r\n  included: string[];\r\n  excluded: string[];\r\n  selectAll: boolean | \"disable\";\r\n  fixedListItem: string[];\r\n  touched: boolean;\r\n  arrayHelper: FieldArrayRenderProps;\r\n  toggleSelectAll: (value: string) => void;\r\n  includeAll: \"includeAllElements\" | \"includeAllAttributes\";\r\n  excludeAll:\"excludeAllElements\" | \"excludeAllAttributes\";\r\n  exclusion:boolean\r\n}\r\nexport const LixiListItem: React.FC<IListLixiItem> = ({\r\n  listName,\r\n  element,\r\n  included,\r\n  excluded,\r\n  touched,\r\n  fixedListItem,\r\n  selectAll,\r\n  arrayHelper,\r\n  toggleSelectAll,\r\n  includeAll,\r\n  excludeAll,\r\n  exclusion\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState<string>(\"\");\r\n  const [neutral, setNeutral] = React.useState<string[]>([]);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { searchItem,  updateCustomisation } = useAction();\r\n  const { values,submitForm } = useFormikContext<CustomisedElementType>();\r\n\r\n  const [affectedPath, setAffectedPath] = React.useState<{\r\n    path: string;\r\n    items: string[];\r\n  }>();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const Status = ()=>{\r\n    let status = ''\r\n    if(exclusion){\r\n      status = included.includes(leafItem || \"\")\r\n      ? \"customised\"\r\n      : excluded.includes(leafItem||\"\")\r\n      ? \"excluded\"\r\n      : \"not excluded\"\r\n      \r\n    }\r\n    if (!exclusion){\r\n      status = included.includes(leafItem || \"\")\r\n      ? \"customised\"\r\n      : values[listName].includes(leafItem||\"\")\r\n      ?\"included\"\r\n      : \"not included\"\r\n    }\r\n     if (status === \"excluded\"){\r\n       return <Typography variant=\"caption\" color=\"secondary\">{status}</Typography>\r\n     }\r\n     if (status === \"customised\"){\r\n       return <Typography variant=\"caption\" color=\"primary\"><strong>{status}</strong></Typography>\r\n     }\r\n     return <em>{status}</em>\r\n   \r\n\r\n  }\r\n  const leafItem = React.useMemo(() => {\r\n    return element.path?.split(\".\").pop();\r\n  }, [element.path]);\r\n\r\n  const furtherCustomisation = React.useMemo(() => {\r\n    const path = element?.path;\r\n    if (!path) return;\r\n    return markedForDeletionList?.find((d) => {\r\n      return d.startsWith(path);\r\n    });\r\n  }, [element?.path, markedForDeletionList]);\r\n\r\n\r\n  // React.useEffect(() => {\r\n  //   if (!leafItem) return;\r\n  //   if (\r\n  //     (included.includes(leafItem) || excluded.includes(leafItem)) &&\r\n  //     neutral.includes(leafItem)\r\n  //   ) {\r\n  //     setNeutral([]);\r\n  //   }\r\n  //   if (\r\n  //     !(included.includes(leafItem) || excluded.includes(leafItem)) &&\r\n  //     !neutral.includes(leafItem)\r\n  //   ) {\r\n  //     setNeutral([leafItem]);\r\n  //   }\r\n  // }, [excluded, included, leafItem, neutral]);\r\n\r\n  // React.useEffect(() => {\r\n  //   if (!leafItem) return;\r\n  //   if (values[excludeAll]) {\r\n  //     setValue(\"\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (furtherCustomisation && values[listName].includes(leafItem)) {\r\n  //     setValue(leafItem);\r\n  //     return;\r\n  //   }\r\n  //   if (furtherCustomisation && !values[listName].includes(leafItem)) {\r\n  //     setValue(\"\");\r\n  //     return;\r\n  //   }\r\n  //   if (included.includes(leafItem) || values[listName].includes(leafItem)) {\r\n  //     // if  (!values[includeAll])  return;;\r\n  //     setValue(leafItem);\r\n  //     return;\r\n  //   }\r\n  //   if (excluded.includes(leafItem) || !values[listName].includes(leafItem)) {\r\n  //     setValue(\"\");\r\n  //     return;\r\n  //   }\r\n  // }, [\r\n  //   excludeAll,\r\n  //   excluded,\r\n  //   furtherCustomisation,\r\n  //   includeAll,\r\n  //   included,\r\n  //   leafItem,\r\n  //   listName,\r\n  //   values,\r\n  // ]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // React.useEffect(() => {\r\n  //   if (!leafItem) return;\r\n  //   if (values[excludeAll]) {\r\n  //     setValue(\"\");\r\n  //     return;\r\n  //   }\r\n  //   if (values[listName].includes(leafItem)) return;\r\n  //   if (fixedListItem.length && !fixedListItem.includes(leafItem) && !touched)\r\n  //     return;\r\n  //   if (selectAll === \"disable\") return;\r\n\r\n  //   if (selectAll && !excluded.includes(leafItem)) {\r\n  //     arrayHelper.push(leafItem);\r\n\r\n  //     return;\r\n  //   }\r\n  // }, [\r\n  //   arrayHelper,\r\n  //   excludeAll,\r\n  //   excluded,\r\n  //   fixedListItem,\r\n  //   leafItem,\r\n  //   listName,\r\n  //   selectAll,\r\n  //   touched,\r\n  //   values,\r\n  // ]);\r\n\r\n  React.useEffect(() => {\r\n    if (!leafItem) return;\r\n    if (values[excludeAll]) {\r\n      setValue(\"\");\r\n      return;\r\n    }\r\n    if (selectAll === \"disable\") return;\r\n    if (\r\n      !selectAll &&\r\n      (furtherCustomisation ||\r\n        (!excluded.includes(leafItem) && !included.includes(leafItem))) &&\r\n      values[listName].includes(leafItem)\r\n    ) {\r\n      arrayHelper.remove(values[listName].indexOf(leafItem));\r\n      return;\r\n    }\r\n  }, [\r\n    arrayHelper,\r\n    excludeAll,\r\n    excluded,\r\n    furtherCustomisation,\r\n    included,\r\n    leafItem,\r\n    listName,\r\n    selectAll,\r\n    values,\r\n  ]);\r\n\r\n  const affected = React.useMemo(():\r\n    | { path: string; items: string[] }\r\n    | undefined => {\r\n    const affectedItem = {} as { path: string; items: string[] };\r\n    if (element && element.path) {\r\n      const customiser = new Customiser(customization, element.path);\r\n      const affectedList = customiser.affectedDecedents();\r\n      if (affectedList?.length) {\r\n        affectedItem.path = element.path;\r\n        affectedItem.items = [];\r\n        affectedList.forEach((i) => {\r\n          if (i.textContent) {\r\n            affectedItem.items.push(i.textContent);\r\n          }\r\n        });\r\n        if (affectedItem.items.length) {\r\n          return affectedItem;\r\n        }\r\n      }\r\n    }\r\n  }, [customization, element]);\r\n\r\n  const handelAddItem = (subEle: string | undefined) => {\r\n    if (!subEle) return;\r\n    if (affected && !furtherCustomisation) {\r\n      setAffectedPath(affected);\r\n      if (leafItem && !excluded.includes(leafItem)) {\r\n        setOpen(true);\r\n        return;\r\n      }\r\n    }\r\n    if (selectAll !== \"disable\") {\r\n      toggleSelectAll(\"disable\");\r\n    }\r\n    if (!values[listName].includes(subEle) && !exclusion) {\r\n      setValue(subEle);\r\n      arrayHelper.push(subEle);\r\n    } else {\r\n      setValue(\"\");\r\n      arrayHelper.remove(values[listName].indexOf(subEle));\r\n    }\r\n    if(!exclusion){\r\n      submitForm()\r\n    }else{\r\n      toggleExclude()\r\n    }\r\n  };\r\n\r\n  const toggleExclude = () => {\r\n    if (!element.path) return;\r\n    const newCustomisation = new Customiser(customization, element?.path);\r\n    if (!!newCustomisation.ExcludedItem()) {\r\n      console.log(\"excluding:\", element.path)\r\n      newCustomisation.include();\r\n      updateCustomisation(newCustomisation.customisation);\r\n      return;\r\n    }\r\n    console.log(\"including:\", element.path)\r\n    newCustomisation.exclude();\r\n    updateCustomisation(newCustomisation.customisation);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ConfirmRemoveItemDialog\r\n        affected={affectedPath}\r\n        open={open}\r\n        handleClose={handleClose}\r\n      />\r\n      <ListItem divider dense button onClick={() => handelAddItem(leafItem)}>\r\n       { !exclusion &&(<ListItemIcon>\r\n          {(leafItem && values[listName].includes(leafItem)) \r\n          ? <DoneOutlinedIcon style={{ color: \"green\" }} fontSize=\"small\" />\r\n          :<CloseOutlinedIcon fontSize=\"small\" style={{ color: \"red\" }} />}\r\n          \r\n       \r\n        </ListItemIcon>)}\r\n        <ListItemText\r\n          style={{ cursor: \"pointer\" }}\r\n          id={`${element?.path?.split(\".\").pop()}`}\r\n          primary={\r\n            <div>\r\n              <Typography\r\n                style={{ alignItems: \"center\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color={excluded.includes(leafItem ||\"\")?\"textPrimary\":\"textSecondary\"}\r\n              >\r\n                {leafItem}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                &nbsp;\r\n                <Status/>\r\n                <LixiItemToolTip lixiItem={element} placement=\"top-start\" />\r\n              </Typography>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <ListItemSecondaryAction>\r\n          \r\n          {/* {exclusion && <Switch size=\"small\"\r\n              checked={!!(leafItem && excluded.includes(leafItem))}\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n            />} */}\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"comments\"\r\n            className={classes.viewItem}\r\n            value={element?.path?.split(\".\").pop()}\r\n            onClick={(e) => searchItem(element?.path || \"\")}\r\n          >\r\n            <LaunchIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      // marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"35rem\",\r\n      // maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n      paddingTop:  \"0\"\r\n    },\r\n    viewItem: {\r\n      \"&:hover\": {\r\n        color: \"#3f51b5\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import List from \"@material-ui/core/List/List\";\r\nimport { FieldArray, useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { LixiListItemHeader } from \"../lixi-list-item-header/LixiListItemHeader\";\r\nimport { LixiListItem } from \"../lixi-list-item/LixiListItem\";\r\nimport { useStyles } from \"./elementSubItemsStyle\";\r\n\r\ninterface SubItems {\r\n  subItems: (LixiBase | null | undefined)[];\r\n  header: string;\r\n  name: \"elements\"|\"attributes\";\r\n  value:string[];\r\n  fixedListItem:string[]\r\n  setExcludedList:React.Dispatch<React.SetStateAction<{\r\n    elements: string[];\r\n    attributes: string[];\r\n} >>\r\nexclusion:boolean\r\n}\r\n\r\nexport const ElementSubItems: React.FC<SubItems> = ({\r\n  subItems,\r\n  header,\r\n  name,\r\n  fixedListItem,\r\n  setExcludedList,\r\n  value,\r\n  exclusion\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectAll, setSelectAll] = React.useState<{elements:boolean|\"disable\",attributes:boolean|\"disable\",touched:boolean}>({\r\n    elements:true,attributes:true,touched:false\r\n  })\r\n  const [touched, setTouched] = React.useState<{elements:boolean,attributes:boolean}>({\r\n    elements:false,attributes:false\r\n  })\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  // const { markedForDeletion } = useAction();\r\n  const { values } = useFormikContext<CustomisedElementType>();\r\n  \r\n  const includeAllItem = React.useMemo(()=>{\r\n    const titleCaseName = name.replace(new RegExp(\"^[a-z]\"),(matched) => {\r\n    return matched.toUpperCase();\r\n    }) \r\n    return `includeAll${titleCaseName}`\r\n  },[name]) as  \"includeAllElements\"|\"includeAllAttributes\"\r\n  \r\n  const excludeAllItem = React.useMemo(() => {\r\n    const titleCaseName = name.replace(new RegExp(\"^[a-z]\"), (matched) => {\r\n      return matched.toUpperCase();\r\n    });\r\n    return `excludeAll${titleCaseName}`;\r\n  }, [name]) as \"excludeAllElements\" | \"excludeAllAttributes\";\r\n\r\n  const affected2 = React.useMemo(()=>{\r\n    if (!customization)return\r\n    const excluded:string[] = []\r\n    const excludedFullPath:string[]=[]\r\n    const included:string[] = []\r\n    subItems?.forEach((item:LixiBase|null|undefined)=>{\r\n      const path = item?.path as string\r\n      const leaf = path.split(\".\").pop() as string\r\n      const customiser = new Customiser(customization, path);\r\n      const affectedList = customiser.affectedDecedents();\r\n      affectedList?.forEach((affected)=>{\r\n        if (affected.textContent?.split(\".\").pop() === leaf){\r\n          if(!!affected?.parentElement?.getAttribute(\"Exclude\") && !excluded.includes(leaf)){\r\n              excluded.push(leaf)\r\n              excludedFullPath.push(affected.textContent)\r\n          }else if(!included.includes(leaf)){\r\n              included.push(leaf)\r\n          }\r\n        } else if(!included.includes(leaf)){\r\n            included.push(leaf)\r\n        }\r\n      })\r\n    })\r\n    return {included:[...included],excluded:[...excluded],excludedFullPath:[...excludedFullPath]}\r\n  },[customization, subItems])\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!affected2?.excludedFullPath) return;\r\n    const {excludedFullPath} = affected2\r\n    const deletionList:string[] = []\r\n    excludedFullPath.forEach((exc)=>{\r\n      if(!markedForDeletionList?.includes(exc)){\r\n        deletionList.push(exc)\r\n      }\r\n    })\r\n    setExcludedList((pre)=>({...pre,[name]:[...deletionList]}))\r\n  },[affected2, markedForDeletionList, name, setExcludedList])\r\n  \r\n\r\n  const toggleExclude = React.useCallback((value:string) => {\r\n    if (values[excludeAllItem]) {\r\n      values[excludeAllItem] = false;\r\n    }\r\n    if(!touched[name]){\r\n      setTouched({...touched,[name]:true})\r\n    }\r\n    if (value === \"disable\"){\r\n        setSelectAll({...selectAll,elements:\"disable\",attributes:\"disable\"})\r\n        return \r\n      }\r\n    if(value===\"enable\"){\r\n      return\r\n    }\r\n    setSelectAll({...selectAll,[name]:!selectAll[name]})\r\n  },[excludeAllItem, name, selectAll, touched, values]);\r\n \r\n  return (\r\n    <>\r\n      <List className={classes.subItem}>\r\n        <FieldArray\r\n          name={name}\r\n          render={(arrayHelper) => (\r\n            <div>\r\n              <LixiListItemHeader\r\n                name={includeAllItem}\r\n                exclusion={exclusion}\r\n                header={header}\r\n                excluded={affected2?.excluded || []}\r\n                included={affected2?.included || []}\r\n                items={subItems}\r\n                arrayHelper={arrayHelper}\r\n                selectedItemsLength={values[name].length}\r\n                listName={name}\r\n                toggle={toggleExclude}\r\n              />\r\n              {subItems?.map((subEle, idx) => {\r\n                if (!subEle?.path) {\r\n                  return <p></p>;\r\n                }\r\n                return (\r\n                  <LixiListItem\r\n                    key={`${idx}-${subEle.path}`}\r\n                    exclusion={exclusion}\r\n                    fixedListItem={fixedListItem}\r\n                    includeAll={includeAllItem}\r\n                    excludeAll={excludeAllItem}\r\n                    listName={name}\r\n                    element={subEle}\r\n                    selectAll={selectAll[name]}\r\n                    touched={touched[name]}\r\n                    toggleSelectAll={toggleExclude}\r\n                    excluded={affected2?.excluded || []}\r\n                    included={affected2?.included || []}\r\n                    arrayHelper={arrayHelper}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        />\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n\r\n    helperText: {\r\n      width: \"100%\",\r\n      padding: \"0.5rem 0.2rem\",\r\n      position: \"absolute\",\r\n      background: \"#fff8e1\",\r\n      borderColor: theme.palette.error.main,\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"0.1rem\",\r\n      borderRadius: \"0.2rem\",\r\n      zIndex: 20,\r\n      boxSizing: \"border-box\",\r\n      marginTop: \"2.7rem\",\r\n    },\r\n  })\r\n);\r\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport { useField, FieldAttributes } from \"formik\";\r\nimport { useStyles } from \"./appTextFieldStyle\";\r\n\r\ntype AppTextFieldProps = TextFieldProps & FieldAttributes<{}>;\r\n\r\nexport const AppTextField: React.FC<AppTextFieldProps> = ({ ...props }) => {\r\n  const [field, meta] = useField<{}>(props);\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      FormHelperTextProps={{\r\n        className: classes.helperText,\r\n      }}\r\n      {...field}\r\n      {...props}\r\n      error={!!(meta.touched && meta.error)}\r\n      helperText={meta.error && meta.touched ? meta.error : undefined}\r\n    />\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nexport const ExcerptDocumentation: React.FC = ({ children }) => {\r\n  const excerptTooltip = `\r\n  A short description - explaining the item usage.\r\n  `;\r\n  const documentationTooltip = `\r\n  An alternative description - explaining the item usage.\r\n  `;\r\n  const customHeadingTooltip = `A custom heading for the documentation`;\r\n  const { values } = useFormikContext<{\r\n    excerpt: string;\r\n    documentation: string;\r\n    heading: string;\r\n  }>();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      \r\n      <Grid item xs={12} sm={children?6:12}>\r\n        <AppTextField\r\n          title={customHeadingTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={1}\r\n          name=\"heading\"\r\n          value={values.heading}\r\n          label=\"Custom Heading\"\r\n        />\r\n      </Grid>\r\n      {children}\r\n      <Grid item xs={12} sm={6}>\r\n        <AppTextField\r\n          title={excerptTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={4}\r\n          name=\"excerpt\"\r\n          value={values.excerpt}\r\n          label=\"Custom Excerpt\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <AppTextField\r\n          title={documentationTooltip}\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          rows={4}\r\n          name=\"documentation\"\r\n          value={values.documentation}\r\n          label=\"Custom Documentation\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    subItemHeader: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"12rem\",\r\n      maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n    saveMinMax: {\r\n      width:\"100%\",\r\n      margin:\"auto\",\r\n      // padding: \"0.5rem 0\",\r\n      // display: \"flex\",\r\n      gap: \"0.5rem\",\r\n      // justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    minMaxContainer: {\r\n      // width:\"50%\",\r\n      margin:\"auto\",\r\n      display: \"flex\",\r\n\r\n      justifyContent: \"space-between\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    textFieldMinMax: {\r\n      // width: \"10rem\",\r\n    },\r\n    saveButton: {\r\n      // width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    customisationTitleContainer: {\r\n      display: \"flex\",\r\n      justifyContent:  \"space-between\",\r\n      padding: \"0.5rem\",\r\n      backgroundColor: theme.palette.primary.main,\r\n      // color: theme.palette.text.primary,\r\n    },\r\n    customisationTitle: {\r\n      color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    },\r\n    customisationTitleExclusion: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    customisationTitleInclusion: {\r\n      color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    },\r\n\r\n    customisationTooltip: {\r\n      // backgroundColor: \"#f5f5f9\",\r\n      // color: \"rgba(0, 0, 0, 0.87)\",\r\n      // maxWidth: 220,\r\n      // fontSize: theme.typography.pxToRem(12),\r\n      // border: \"1px solid #dadde9\",\r\n    },\r\n  })\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { CustomisedElementType } from \"../../models/customisationTypes\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { ElementCustomiser } from \"../../models/ElementCustomiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { ElementSubItems } from \"../element-sub-items/ElementSubItems\";\r\nimport { ExcerptDocumentation } from \"../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\nimport { CustomiseElementSchema } from \"./customiseElementSchema\";\r\nimport { useStyles } from \"./customiseElementStyle\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\n\r\ninterface ICustomiseElement {\r\n  lixiItem: LixiBase | undefined;\r\n}\r\ntype SubElement = { [key: string]: Element[] };\r\n\r\nexport const CustomiseElement: React.FC<ICustomiseElement> = ({ lixiItem }) => {\r\n  const classes = useStyles();\r\n  const previousValues = React.useRef<CustomisedElementType>()\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const { markedForDeletionList } = useTypedSelector((state) => state.item);\r\n  const [initialValue, setInitialValue] = React.useState<CustomisedElementType>(\r\n    {\r\n      newMin: \"\",\r\n      newMax: \"\",\r\n      includeAllElements: true,\r\n      excludeAllElements: false,\r\n      includeAllAttributes: true,\r\n      excludeAllAttributes: false,\r\n      elements: [],\r\n      attributes: [],\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      heading: \"\",\r\n    }\r\n  );\r\n\r\n  const [checked, setChecked] = React.useState(true);\r\n  const [itemSubElement, setItemSubElement] = React.useState<SubElement>({});\r\n  const [itemAttributes, setItemAttributes] = React.useState<Element[]>([]);\r\n  const [excludedList, setExcludedList] = React.useState<{\r\n    elements: string[];\r\n    attributes: string[];\r\n  }>({ elements: [], attributes: [] });\r\n  const [fixedListItem, setFixedListItems] = React.useState<{\r\n    elements: string[];\r\n    attributes: string[];\r\n  }>({ elements: [], attributes: [] });\r\n\r\n  const [occursMinMax, setOccursMinMax] = React.useState<\r\n    | {\r\n        min: string | null | undefined;\r\n        max: string | null | undefined;\r\n      }\r\n    | undefined\r\n  >();\r\n  \r\n  React.useEffect(()=>{\r\n    previousValues.current = {\r\n      ...initialValue,\r\n      elements:[...initialValue.elements],\r\n      attributes:[...initialValue.attributes]\r\n    }\r\n  },[initialValue])\r\n\r\n  const leafAttribs = React.useMemo(() => {\r\n    return itemAttributes?.map((item, idx) => {\r\n      const itemEle = new LixiBase(item);\r\n      if (itemEle) {\r\n        return itemEle;\r\n      }\r\n      return undefined;\r\n    });\r\n  }, [itemAttributes]);\r\n  const attributesPaths = React.useMemo(()=>{\r\n    const results:string[] = []\r\n    leafAttribs?.forEach((att,idx)=>{\r\n      if(att?.path){\r\n        results.push(att.path)\r\n      }\r\n    })\r\n    return results\r\n  },[leafAttribs])\r\n \r\n  const leafEle = React.useMemo(() => {\r\n    return (itemSubElement[\"choice\"] || itemSubElement[\"sequence\"])?.map(\r\n      (item, idx) => {\r\n        const itemEle = new LixiBase(item);\r\n        return itemEle;\r\n      }\r\n    );\r\n  }, [itemSubElement]);\r\n\r\n  const elementsPaths = React.useMemo(()=>{\r\n    const results:string[] = []\r\n    leafEle?.forEach((att,idx)=>{\r\n      if(att?.path){\r\n        results.push(att.path)\r\n      }\r\n    })\r\n    return results\r\n  },[leafEle])\r\n  \r\n  const excludeNotIncludedItems = React.useCallback(()=>{\r\n    const paths = [...elementsPaths,...attributesPaths]\r\n    const copyAttributes = [...(previousValues.current?.attributes||[])]\r\n    const copyElements = [...(previousValues.current?.elements||[])]\r\n    const leafItems = [...copyAttributes,...copyElements]\r\n    if (!(lixiItem && lixiItem?.path))return\r\n      const newCustomisation = new ElementCustomiser(customization,lixiItem?.path)\r\n      newCustomisation.removeElementsAndAttributes()\r\n      paths.forEach((path,idx)=>{\r\n        const leafItem = path?.split(\".\").pop()\r\n        if( leafItem && !leafItems.includes(leafItem)){\r\n          newCustomisation.excludeByPath(path)\r\n        }\r\n      })\r\n      updateCustomisation(newCustomisation.customisation);\r\n  },[attributesPaths, customization, elementsPaths, lixiItem, updateCustomisation])\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new ElementCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    if (\r\n      (instruction.attributes.length ||\r\n      instruction.elements.length) \r\n     ){\r\n        setChecked(false)\r\n      }else{\r\n      \r\n      }\r\n    \r\n    setInitialValue(instruction);\r\n    if (!instruction.elements.length && !instruction.attributes.length) return;\r\n    setFixedListItems({\r\n      elements: [...instruction.elements],\r\n      attributes: [...instruction.attributes],\r\n    });\r\n  }, [ customization, lixiItem?.path]);\r\n\r\n  \r\n\r\n  const toggleIncludeExclude = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    submitForm:(() => Promise<void>) & (() => Promise<any>),\r\n    values:CustomisedElementType) => {\r\n      const copyInitialValues = {...values,elements:[...values['elements']],attributes:[...values[\"attributes\"]]}\r\n      \r\n    setInitialValue({...copyInitialValues, elements:[],attributes:[]})\r\n    if (event.target.checked){\r\n      excludeNotIncludedItems()\r\n      setInitialValue({...copyInitialValues, elements:[],attributes:[]})\r\n      setChecked(event.target.checked);\r\n      return \r\n    }\r\n   \r\n    if(!event.target.checked){\r\n      const copyListAttributes = [...values[\"attributes\"]]\r\n      attributesPaths.forEach((path,idx)=>{\r\n          const leafItem =path.split(\".\").pop() \r\n          if(leafItem && !copyListAttributes.includes(leafItem) && !excludedList.attributes.includes(path) ){\r\n            copyListAttributes.push(leafItem) \r\n          }\r\n        })\r\n        \r\n        copyInitialValues[\"attributes\"] = [...copyListAttributes]\r\n\r\n      const copyListElements = [...values[\"elements\"]]\r\n      elementsPaths.forEach((path,idx)=>{\r\n          const leafItem =path.split(\".\").pop() \r\n          if(leafItem && !copyListElements.includes(leafItem) && !excludedList.elements.includes(path) ){\r\n            copyListElements.push(leafItem) \r\n          }\r\n        })\r\n       \r\n        copyInitialValues[\"elements\"] = [...copyListElements]\r\n        \r\n        setInitialValue(copyInitialValues)\r\n    }\r\n    submitForm()\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n\r\n  React.useEffect(() => {\r\n    const subElement = lixiItem?.lixiSubElements;\r\n    const attributes = lixiItem?.attributes;\r\n    if (subElement) {\r\n      setItemSubElement(subElement);\r\n    }\r\n    if (attributes?.length) {\r\n      setItemAttributes(attributes);\r\n    }\r\n  }, [lixiItem]);\r\n\r\n  React.useEffect(() => {\r\n    const occurrenceMinMax = {\r\n      min: lixiItem?.element.getAttribute(\"minOccurs\"),\r\n      max: lixiItem?.element.getAttribute(\"maxOccurs\"),\r\n    };\r\n    setOccursMinMax(occurrenceMinMax);\r\n  }, [lixiItem?.element]);\r\n\r\n  const deleteInstruction = () => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new ElementCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const removedItem = newCustomisation.removeCustomisedItem();\r\n    if (removedItem) {\r\n      updateCustomisation(newCustomisation.customisation);\r\n    }\r\n    setInitialValue(newCustomisation.customisedObject())\r\n    setFixedListItems({\r\n      elements: [],\r\n      attributes: [],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={initialValue}\r\n      validationSchema={() =>\r\n        CustomiseElementSchema(occursMinMax?.min, occursMinMax?.max)\r\n      }\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true);\r\n        if (!lixiItem?.path) return;\r\n\r\n        // alert(JSON.stringify(values, null, 2));\r\n        const newCustomisation = new ElementCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        const { elements, attributes } = excludedList;\r\n        if (markedForDeletionList) {\r\n          newCustomisation.removeCustomisation([...markedForDeletionList]);\r\n        }\r\n        if (elements.length) {\r\n          newCustomisation.removeCustomisation([...elements]);\r\n        }\r\n        if (attributes.length) {\r\n          newCustomisation.removeCustomisation([...attributes]);\r\n        }\r\n        newCustomisation.customise();\r\n        updateCustomisation(newCustomisation.customisation);\r\n\r\n        setSubmitting(false);\r\n        // searchItem(lixiItem.path);\r\n        // setTimeout(() => {\r\n        // }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, submitForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Paper className={classes.customisationTitleContainer}>\r\n                  <div>\r\n                    <Switch\r\n                      checked={checked}\r\n                      onChange={(e) =>\r\n                        toggleIncludeExclude(e, submitForm, values)\r\n                      }\r\n                      inputProps={{ \"aria-label\": \"controlled\" }}\r\n                    />\r\n                    <Typography\r\n                      variant=\"button\"\r\n                      className={classes.customisationTitle}\r\n                    >\r\n                      {\" \"}\r\n                      Customisation by&nbsp;\r\n                    </Typography>\r\n                    {checked && (\r\n                      <Tooltip\r\n                        title={\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: \"#fff\",\r\n                              margin: 0,\r\n                              color: \"#333\",\r\n                              padding: \"0.5rem\",\r\n                            }}\r\n                          >\r\n                            <Typography color=\"primary\" variant=\"h6\">\r\n                              <u>Exclusion Mode</u>\r\n                            </Typography>\r\n                            <Typography component=\"div\" color=\"textPrimary\">\r\n                              The&nbsp;\r\n                              <Typography variant=\"caption\" color=\"secondary\">\r\n                                excluded\r\n                              </Typography>\r\n                              &nbsp;item(s) will not appear in the customised\r\n                              schema\r\n                            </Typography>\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <Typography\r\n                          variant=\"button\"\r\n                          className={classes.customisationTitleExclusion}\r\n                        >\r\n                          <u>\r\n                            <em>Exclusion</em>\r\n                          </u>\r\n                        </Typography>\r\n                      </Tooltip>\r\n                    )}\r\n                    {!checked && (\r\n                      <Tooltip\r\n                        title={\r\n                          <div\r\n                            style={{\r\n                              backgroundColor: \"#fff\",\r\n                              margin: 0,\r\n                              color: \"#333\",\r\n                              padding: \"0.5rem\",\r\n                            }}\r\n                          >\r\n                            <Typography color=\"primary\" variant=\"h6\">\r\n                              <u>Inclusion Mode</u>\r\n                            </Typography>\r\n                            <Typography color=\"textPrimary\">\r\n                              ONLY the included item(s)&nbsp;\r\n                              <DoneOutlinedIcon\r\n                                style={{ color: \"green\" }}\r\n                                fontSize=\"small\"\r\n                              />\r\n                              of the parent element will appear in the\r\n                              customised schema.\r\n                            </Typography>\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <Typography\r\n                          variant=\"button\"\r\n                          className={classes.customisationTitleInclusion}\r\n                        >\r\n                          <u>\r\n                            <em>Inclusion</em>\r\n                          </u>\r\n                        </Typography>\r\n                      </Tooltip>\r\n                    )}\r\n                  </div>\r\n                  <div className={classes.saveButton}>\r\n                    <Button\r\n                      size=\"small\"\r\n                      style={{ marginInline: \"0.5rem\" }}\r\n                      onClick={deleteInstruction}\r\n                      variant=\"text\"\r\n                      color=\"secondary\"\r\n                      startIcon={<SaveIcon fontSize=\"large\" />}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      type=\"submit\"\r\n                      variant=\"text\"\r\n                      color=\"secondary\"\r\n                      startIcon={<SaveIcon fontSize=\"large\" />}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n\r\n              {leafEle?.length ? (\r\n                <Grid item xs={12} sm={itemAttributes?.length ? 6 : 12}>\r\n                  <ElementSubItems\r\n                    setExcludedList={setExcludedList}\r\n                    fixedListItem={fixedListItem[\"elements\"]}\r\n                    exclusion={checked}\r\n                    key={\"element\"}\r\n                    value={values.elements}\r\n                    header={`Sub-Elements ${\r\n                      itemSubElement[\"choice\"] ? \"CHOICE\" : \"(SEQUENCE)\"\r\n                    }`}\r\n                    subItems={leafEle}\r\n                    name=\"elements\"\r\n                  />\r\n                </Grid>\r\n              ) : undefined}\r\n              {leafAttribs?.length ? (\r\n                <Grid item xs={12} sm={leafEle?.length ? 6 : 12}>\r\n                  <ElementSubItems\r\n                    setExcludedList={setExcludedList}\r\n                    fixedListItem={fixedListItem[\"attributes\"]}\r\n                    exclusion={checked}\r\n                    key=\"attribute\"\r\n                    value={values.attributes}\r\n                    header=\"Attributes\"\r\n                    subItems={leafAttribs}\r\n                    name=\"attributes\"\r\n                  />\r\n                </Grid>\r\n              ) : undefined}\r\n\r\n              <Grid item xs={12}>\r\n                <ExcerptDocumentation>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <div className={classes.saveMinMax}>\r\n                      <div className={classes.minMaxContainer}>\r\n                        <AppTextField\r\n                          // className={classes.textFieldMinMax}\r\n                          name=\"newMin\"\r\n                          size=\"medium\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          label=\"New Min Occurs\"\r\n                          disabled={\r\n                            occursMinMax?.min === \"1\" &&\r\n                            occursMinMax?.max === \"1\"\r\n                          }\r\n                          value={values?.newMin}\r\n                        />\r\n\r\n                        <AppTextField\r\n                          // className={classes.textFieldMinMax}\r\n                          name=\"newMax\"\r\n                          size=\"medium\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          label=\"New Max Occurs\"\r\n                          disabled={occursMinMax?.max === \"1\"}\r\n                          value={values?.newMax}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                </ExcerptDocumentation>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n          {/* <pre>{JSON.stringify(markedForDeletionList, null, 2)}</pre> */}\r\n          {/* <pre>{JSON.stringify(excludedList[\"attributes\"], null, 2)}</pre> */}\r\n          {/* <pre>{JSON.stringify(excludedList[\"elements\"], null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const CustomiseElementSchema = (\r\n  currentMin: string | null | undefined,\r\n  currentMax: string | null | undefined\r\n) => {\r\n  const min = currentMin ? parseInt(currentMin) : 0;\r\n  const max = currentMax && parseInt(currentMax) ? parseInt(currentMax) : 99999;\r\n\r\n  return Yup.object().shape(\r\n    {\r\n      newMin: Yup.number().moreThan(min).max(max),\r\n      newMax: Yup.number()\r\n        .max(max - 1)\r\n        .test({\r\n          name: \"min\",\r\n          exclusive: false,\r\n          message: \"Must be greater than new min occurs\",\r\n          params: {},\r\n          test: function (value) {\r\n            if (value && this.parent.newMin) {\r\n              return value > this.parent.newMin;\r\n            }\r\n            return true;\r\n          },\r\n        }),\r\n\r\n      excerpt: Yup.string().max(100),\r\n      documentation: Yup.string().max(100),\r\n    },\r\n    [[\"newMin\", \"newMax\"]]\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      marginTop: \"1rem\",\r\n      backgroundColor: \"##fafafa\",\r\n      border: \"solid #333 0.1rem\",\r\n      borderRadius: \"0.3rem\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      padding: \"0.5rem\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.1rem\",\r\n      alignItems: \"center\",\r\n    },\r\n    subItemHeader: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n    subItem: {\r\n      height: \"12rem\",\r\n      maxHeight: \"12rem\",\r\n      overflow: \"scroll\",\r\n    },\r\n\r\n    itemLabelDescription: {\r\n      padding: \"0.1rem\",\r\n      margin: \"0.5rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    attributes: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    references: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    alert: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n    typeAttribute: {\r\n      cursor: \"pointer\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    otherAttribute: {\r\n      cursor: \"not-allowed\",\r\n    },\r\n  })\r\n);\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      marginBottom: \"0.5rem\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    paper: {\r\n      padding: \"0.5rem\",\r\n      margin: \"0.5rem 0.2rem\",\r\n    },\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import * as Yup from \"yup\";\r\n\r\nexport const integerTypeSchema = Yup.object().shape({\r\n  optionalToMandatory: Yup.boolean(),\r\n  minInteger: Yup.number()\r\n    .min(0, \"Value must be grater than or equal to zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\"),\r\n  maxInteger: Yup.number()\r\n    .positive(\"Value must be grater than zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\")\r\n    .test({\r\n      name: \"minInteger\",\r\n      exclusive: false,\r\n      message: \"Value must be grater than the minimum value\",\r\n      params: {},\r\n      test: function (value) {\r\n        if (value && this.parent.minInteger) {\r\n          return value > this.parent.minInteger;\r\n        }\r\n        return true;\r\n      },\r\n    }),\r\n});\r\n","import { Customiser } from \"./Customiser\";\r\nimport { IntegerTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class IntegerTypeAttributeCustomiser extends Customiser {\r\n  object = {} as IntegerTypeAttributeType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: IntegerTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n      minInteger: \"\",\r\n      maxInteger: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      optionalToMandatory,\r\n      documentation,\r\n      excerpt,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (\r\n      !optionalToMandatory &&\r\n      !minInteger &&\r\n      !maxInteger &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.integerMinMax();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  integerMinMax() {\r\n    if (!this.object.minInteger && !this.object.maxInteger) return;\r\n    if (this.object.minInteger) {\r\n      const doc = Customiser.docStub();\r\n      const minInteger = doc.createElement(\"MinInteger\");\r\n      minInteger.textContent = this.object.minInteger.toString().trim();\r\n      this.customiseItem.append(minInteger);\r\n    }\r\n    if (this.object.maxInteger) {\r\n      const doc = Customiser.docStub();\r\n      const maxInteger = doc.createElement(\"MaxInteger\");\r\n      maxInteger.textContent = this.object.maxInteger.toString().trim();\r\n      this.customiseItem.append(maxInteger);\r\n    }\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const {\r\n      optionalToMandatory,\r\n      heading,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n    if (minInteger || maxInteger) {\r\n      this.customiseItem.setAttribute(\"CustomIntegerRange\", \"Yes\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"MinInteger\":\r\n          const minInteger = child.textContent?.trim();\r\n          if (!minInteger) return;\r\n          try {\r\n            // this.object.minInteger = parseInt(minInteger) ? parseInt(minInteger) : undefined;\r\n            this.object.minInteger = minInteger ? minInteger : undefined;\r\n          } catch (error) {}\r\n          break;\r\n        case \"MaxInteger\":\r\n          const maxInteger = child.textContent?.trim();\r\n          if (!maxInteger) return;\r\n          try {\r\n            // this.object.maxInteger = parseInt(maxInteger) ? parseInt(maxInteger) : undefined;\r\n            this.object.maxInteger = maxInteger ? maxInteger : undefined;\r\n          } catch (error) {}\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useStyles } from \"./integerTypeAttributeStyle\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppTextField } from \"../../formik-mterial-ui/AppTextField\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport { integerTypeSchema } from \"./integerTypeAttributeSchema\";\r\nimport { IntegerTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { IntegerTypeAttributeCustomiser } from \"../../../models/IntegerTypeAttributeCustomiser\";\r\nimport { Form, Formik } from \"formik\";\r\n\r\ninterface ICustomiseIntegerTypeAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"integerType\";\r\n}\r\n\r\nexport const IntegerTypeAttribute: React.FC<ICustomiseIntegerTypeAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [\r\n    initialValue,\r\n    setInitialValue,\r\n  ] = React.useState<IntegerTypeAttributeType>({\r\n    optionalToMandatory: false,\r\n    excerpt: \"\",\r\n    documentation: \"\",\r\n    heading: \"\",\r\n    minInteger: \"\",\r\n    maxInteger: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new IntegerTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      validationSchema={integerTypeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new IntegerTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        // console.log(\"ci\", attCustomiser.customisation);\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <Paper className={classes.paper}>\r\n                  <div className={classes.container}>\r\n                    <AppTextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Minimum\"\r\n                      name=\"minInteger\"\r\n                      placeholder=\"Minimum\"\r\n                      // value={values.minInteger}\r\n                    />\r\n                    <AppTextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Maximum\"\r\n                      name=\"maxInteger\"\r\n                      placeholder=\"Maximum\"\r\n                      // value={values.maxInteger}\r\n                    />\r\n                  </div>\r\n                </Paper>\r\n              </FormControl>\r\n            </div>\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nIntegerTypeAttribute.defaultProps = {\r\n  type: \"integerType\",\r\n};\r\n","import React from \"react\";\r\n\r\ninterface ISwitchAttributeType {\r\n  switchType: string;\r\n  children: React.ReactElement<{\r\n    type:\r\n      | \"stringType\"\r\n      | \"integerType\"\r\n      | \"decimalType\"\r\n      | \"currencyType\"\r\n      | \"listType\";\r\n  }>[];\r\n}\r\nexport const SwitchAttributeType: React.FC<ISwitchAttributeType> = ({\r\n  children,\r\n  switchType,\r\n}) => {\r\n  const regex = /^[a-zA-Z]+List$/;\r\n  const child = children.find(({ props }) => {\r\n    const { type } = props;\r\n\r\n    if (regex.test(switchType)) {\r\n      return type === \"listType\";\r\n    }\r\n    return switchType === type;\r\n  });\r\n  return child || <></>;\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    name: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    definition: {\r\n      marginBottom: 12,\r\n      marginLeft: \"2.7rem\",\r\n      width: \"75ch\",\r\n    },\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n    enumeratedList: {\r\n      maxHeight: \"15rem\",\r\n      width: \"100%\",\r\n      overflowY: \"scroll\",\r\n    },\r\n  })\r\n);\r\n","import * as Yup from \"yup\";\r\n\r\nexport const customiseAttributeSchema = Yup.object().shape({\r\n  optionalToMandatory: Yup.boolean(),\r\n  stringTo: Yup.string().oneOf([\"list\", \"pattern\"]),\r\n  minInteger: Yup.number()\r\n    .min(0, \"Value must be grater than or equal to zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\"),\r\n  maxInteger: Yup.number()\r\n    .positive(\"Value must be grater than zero\")\r\n    .typeError(\"Only an integer value allowed\")\r\n    .integer(\"Only an integer value allowed\")\r\n    .test({\r\n      name: \"minInteger\",\r\n      exclusive: false,\r\n      message: \"Value must be grater than the minimum value\",\r\n      params: {},\r\n      test: function (value) {\r\n        if (value && this.parent.minInteger) {\r\n          return value > this.parent.minInteger;\r\n        }\r\n        return true;\r\n      },\r\n    }),\r\n  // pattern: Yup.string().test({\r\n  //   name: \"stringTo\",\r\n  //   exclusive: false,\r\n  //   message: \"Must provide a regular expression for the pattern\",\r\n  //   params: {},\r\n  //   test: function (value) {\r\n  //     if (this.parent.stringTo === \"pattern\") {\r\n  //       return !!value;\r\n  //     }\r\n  //     return true;\r\n  //   },\r\n  // }),\r\n\r\n  // \"pattern.regex\": Yup.string().test({\r\n  //   name: \"stringTo\",\r\n  //   exclusive: false,\r\n  //   message: \"Must provide a regular expression for the pattern\",\r\n  //   params: {},\r\n  //   test: function (value) {\r\n  //     if (this.parent.stringTo === \"pattern\") {\r\n  //       console.log(\"value@\", value);\r\n  //       return !!value;\r\n  //     }\r\n  //     return true;\r\n  //   },\r\n  // }),\r\n\r\n  pattern: Yup.object({\r\n    regex: Yup.string(),\r\n    definition: Yup.string(),\r\n  }).test({\r\n    name: \"stringTo\",\r\n    exclusive: false,\r\n    message: \"Must provide a valid regular expression for the pattern\",\r\n    params: {},\r\n    test: function (value) {\r\n      if (this.parent.stringTo === \"pattern\") {\r\n        console.log(\"value\", value);\r\n        if (!value.regex) return false;\r\n        try {\r\n          return !!new RegExp(value.regex);\r\n        } catch (error) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  }),\r\n});\r\n","import React from \"react\";\r\nimport Radio, { RadioProps } from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { FieldAttributes, useField } from \"formik\";\r\n\r\ntype AppRadioButtonType = { label: string } & RadioProps & FieldAttributes<{}>;\r\n\r\nexport const AppRadioButton: React.FC<AppRadioButtonType> = ({\r\n  label,\r\n  onSelect,\r\n  ...props\r\n}) => {\r\n  const [field] = useField<{}>(props);\r\n  return (\r\n    <FormControlLabel\r\n      {...field}\r\n      control={<Radio onSelect={onSelect} color=\"primary\" />}\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      marginBottom: \"0.5rem\",\r\n      width: \"100%\",\r\n    },\r\n    helperText: {\r\n      width: \"20rem\",\r\n      padding: \"0.5rem 0.2rem\",\r\n      position: \"absolute\",\r\n      background: \"#fff8e1\",\r\n      borderColor: theme.palette.error.main,\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"0.1rem\",\r\n      borderRadius: \"0.2rem\",\r\n      zIndex: 20,\r\n      boxSizing: \"border-box\",\r\n      // marginTop: \"2.7rem\",\r\n    },\r\n  })\r\n);\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FormikState, useFormikContext } from \"formik\";\r\nimport React from \"react\";\r\nimport { StringTypeAttributeType } from \"../../../../models/customisationTypes\";\r\nimport { AppRadioButton } from \"../../../formik-mterial-ui/AppRadioButton\";\r\nimport { AppTextField } from \"../../../formik-mterial-ui/AppTextField\";\r\n\r\nimport { useStyles } from \"./stringToPatternStyle\";\r\n\r\ninterface IStringToPattern {\r\n  resetForm: (\r\n    nextState?: Partial<FormikState<StringTypeAttributeType>> | undefined\r\n  ) => void;\r\n}\r\n\r\nexport const StringToPattern: React.FC<IStringToPattern> = ({ resetForm }) => {\r\n  const classes = useStyles();\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n  } = useFormikContext<StringTypeAttributeType>();\r\n  return (\r\n    <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n      <div className={classes.container}>\r\n        <AppRadioButton\r\n          name=\"stringTo\"\r\n          type=\"radio\"\r\n          value=\"pattern\"\r\n          label=\"String To Pattern\"\r\n        />\r\n        <Collapse\r\n          style={{ width: \"100%\", marginTop: \"0.5rem\" }}\r\n          onExit={() =>\r\n            resetForm({\r\n              values: {\r\n                ...values,\r\n                pattern: { ...values.pattern, regex: \"\", definition: \"\" },\r\n              },\r\n            })\r\n          }\r\n          in={values.stringTo === \"pattern\"}\r\n        >\r\n          {/* <FormHelperText error={!!errors.pattern}>\r\n            {errors.pattern}\r\n          </FormHelperText> */}\r\n          <div>\r\n            <AppTextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              label=\"Regex Expression\"\r\n              name=\"pattern.regex\"\r\n              placeholder=\"Regex Expression\"\r\n              // value={values.pattern?.regex}\r\n            />\r\n\r\n            {touched.pattern && errors.pattern ? (\r\n              <FormHelperText\r\n                className={classes.helperText}\r\n                error={!!errors.pattern}\r\n              >\r\n                {errors.pattern}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </div>\r\n          <div style={{ marginTop: \"0.5rem\" }}>\r\n            <AppTextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              label=\"Regex Definition\"\r\n              name=\"pattern.definition\"\r\n              placeholder=\"Regex Definition\"\r\n              // value={values.pattern?.definition}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const stringToEnumeratedListSchema = Yup.object().shape({\r\n  definition: Yup.string()\r\n    .required()\r\n    .matches(/^[a-zA-Z0-9 '\"%]*$/, {\r\n      message: \"Only alphanumerical values, % and quotes are allowed\",\r\n    })\r\n    .min(3),\r\n  name: Yup.string()\r\n    .required()\r\n    .matches(/^[a-zA-Z0-9 '\"%]*$/, {\r\n      message: \"Only alphanumerical values, % and quotes are allowed\",\r\n    })\r\n    .min(3),\r\n});\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      error: {\r\n        position: \"fixed\",\r\n      },\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(0.5, 1, 1.5),\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      marginBottom: \"0.2rem\",\r\n      borderRadius: \"0.1rem\",\r\n      alignItems: \"center\",\r\n    },\r\n    textField: {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { Formik, useFormikContext } from \"formik\";\r\nimport { stringToEnumeratedListSchema } from \"./stringToListHeaderSchema\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { AppTextField } from \"../../../formik-mterial-ui/AppTextField\";\r\nimport ControlPointRoundedIcon from \"@material-ui/icons/ControlPointRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport { useStyles } from \"./stringToListHeaderStyle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ninterface ITypeFormikValue {\r\n  optionalToMandatory: boolean;\r\n  stringTo: string;\r\n  enumerations: { definition: string; name: string }[];\r\n}\r\n\r\nexport const StringToListHeader: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [nameAlert, setNameAlert] = React.useState(false);\r\n  const { getFieldHelpers, values } = useFormikContext<ITypeFormikValue>();\r\n  return (\r\n    <Formik\r\n      initialValues={{ definition: \"\", name: \"\", enumList: [] }}\r\n      onSubmit={(val, { resetForm }) => {\r\n        if (values.enumerations.some((e) => e.name === val.name)) {\r\n          setNameAlert(true);\r\n          return;\r\n        }\r\n\r\n        const valuesCopy = [...values.enumerations];\r\n        valuesCopy.push(val);\r\n        getFieldHelpers(\"enumerations\").setValue(valuesCopy);\r\n        resetForm();\r\n      }}\r\n      validationSchema={stringToEnumeratedListSchema}\r\n    >\r\n      {(formik) => (\r\n        <Paper className={classes.header}>\r\n          <Grid container alignItems=\"center\" spacing={3}>\r\n            <Grid item xs={12} sm={5}>\r\n              <AppTextField\r\n                className={classes.textField}\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                label=\"Name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={5}>\r\n              <AppTextField\r\n                className={classes.textField}\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"definition\"\r\n                placeholder=\"Definition\"\r\n                label=\"Definition\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <IconButton\r\n                onClick={formik.submitForm}\r\n                color=\"primary\"\r\n                aria-label=\"delete\"\r\n              >\r\n                <ControlPointRoundedIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Snackbar\r\n              anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n              open={nameAlert}\r\n              autoHideDuration={2000}\r\n              onClose={() => setNameAlert(false)}\r\n            >\r\n              <Alert onClose={() => setNameAlert(false)} severity=\"error\">\r\n                <strong>Duplicated Name</strong>\r\n                <em>{`\"${formik.values.name}\"`}</em>\r\n                already exist!\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    name: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    definition: {\r\n      marginBottom: 12,\r\n      marginLeft: \"2.7rem\",\r\n      width: \"75ch\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    row: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\n","import Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./stringToListBodyStyle\";\r\n\r\ninterface IStringToListBody {\r\n  idx: number;\r\n  remove: (idx: number) => void;\r\n  name: string;\r\n  definition: string;\r\n}\r\n\r\nexport const StringToListBody: React.FC<IStringToListBody> = ({\r\n  idx,\r\n  remove,\r\n  name,\r\n  definition,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.row}>\r\n        <IconButton\r\n          onClick={() => remove(idx)}\r\n          color=\"secondary\"\r\n          aria-label=\"delete\"\r\n        >\r\n          <RemoveCircleOutlineRoundedIcon fontSize=\"default\" />\r\n        </IconButton>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {name}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div>\r\n        <Typography className={classes.definition} color=\"textSecondary\">\r\n          {definition}\r\n        </Typography>\r\n      </div>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n","import { Customiser } from \"./Customiser\";\r\nimport { StringTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class StringTypeAttributeCustomiser extends Customiser {\r\n  object = {} as StringTypeAttributeType;\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: StringTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      pattern: { regex: \"\", definition: \"\" },\r\n      stringTo: \"\",\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n      enumerations: [],\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      enumerations,\r\n      optionalToMandatory,\r\n      pattern,\r\n      stringTo,\r\n      documentation,\r\n      excerpt,\r\n    } = this.object;\r\n\r\n    if (\r\n      !enumerations.length &&\r\n      !pattern &&\r\n      !optionalToMandatory &&\r\n      !stringTo &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.customPattern();\r\n    this.setInLineAttributes();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n    this.customEnumeration();\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  customEnumeration() {\r\n    if (!this.object.enumerations.length) return;\r\n    const doc = Customiser.docStub();\r\n    this.object.enumerations.forEach(({ definition, name }, idx) => {\r\n      const enumeration = doc.createElement(\"Enumeration\");\r\n      enumeration.textContent = name.trim();\r\n      enumeration.setAttribute(\"Definition\", definition);\r\n      this.customiseItem.append(enumeration);\r\n    });\r\n  }\r\n  customPattern() {\r\n    if (this.object.stringTo !== \"pattern\") return;\r\n    const doc = Customiser.docStub();\r\n    const pattern = doc.createElement(\"Pattern\");\r\n    if (this.object.pattern) {\r\n      const { regex, definition } = this.object.pattern;\r\n      if (regex) {\r\n        pattern.textContent = regex?.toString();\r\n      }\r\n      if (definition) {\r\n        pattern.setAttribute(\"Definition\", definition);\r\n      }\r\n    }\r\n    this.customiseItem.append(pattern);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const {\r\n      optionalToMandatory,\r\n      stringTo,\r\n      enumerations,\r\n      heading,\r\n    } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n    if (stringTo === \"pattern\") {\r\n      this.customiseItem.setAttribute(\"StringToPattern\", \"Yes\");\r\n      return;\r\n    }\r\n    if (stringTo === \"list\" && enumerations.length) {\r\n      this.customiseItem.setAttribute(\"StringToList\", \"Yes\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        case \"StringToPattern\": {\r\n          this.object.stringTo = \"pattern\";\r\n          break;\r\n        }\r\n        case \"StringToList\": {\r\n          this.object.stringTo = \"list\";\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"Enumeration\":\r\n          const name = child.textContent?.trim();\r\n          const definition = child.getAttribute(\"Definition\");\r\n          if (!name || !definition) return;\r\n          this.object.enumerations.push({ name, definition });\r\n          break;\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"Pattern\":\r\n          const pattern = child.textContent?.trim();\r\n          const regexDefinition = child.getAttribute(\"Definition\") || \"\";\r\n          this.object.pattern = {\r\n            regex: pattern ? pattern : \"\",\r\n            definition: regexDefinition,\r\n          };\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useStyles } from \"./stringTypeAttributeStyle\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { customiseAttributeSchema } from \"./stringTypeAttributeSchema\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import { AppTextField } from \"../formik-mterial-ui/AppTextField\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { StringTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport { StringToPattern } from \"./string-to-pattern/StringToPattern\";\r\nimport { AppRadioButton } from \"../../formik-mterial-ui/AppRadioButton\";\r\nimport { StringToListHeader } from \"./string-to-list-header/StringToListHeader\";\r\nimport { StringToListBody } from \"./string-to-list-body/StringToListBody\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { StringTypeAttributeCustomiser } from \"../../../models/StringTypeAttributeCustomiser\";\r\n\r\n// import { CustomIntegerRange } from \"./custom-integer-range/CustomIntegerRange\";\r\n\r\ninterface ICustomiseAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"stringType\";\r\n}\r\n\r\nexport const StringTypeAttribute: React.FC<ICustomiseAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [\r\n    initialValue,\r\n    setInitialValue,\r\n  ] = React.useState<StringTypeAttributeType>({\r\n    optionalToMandatory: false,\r\n    pattern: { regex: \"\", definition: \"\" },\r\n    stringTo: \"\",\r\n    excerpt: \"\",\r\n    documentation: \"\",\r\n    heading: \"\",\r\n    enumerations: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new StringTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      validationSchema={customiseAttributeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        console.log(\"values\", values);\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new StringTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                    // value={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <FormControl style={{ width: \"100%\" }}>\r\n                <StringToPattern resetForm={resetForm} />\r\n                <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                  <AppRadioButton\r\n                    name=\"stringTo\"\r\n                    type=\"radio\"\r\n                    value=\"list\"\r\n                    label=\"String To Enumerated List\"\r\n                  />\r\n\r\n                  <Collapse\r\n                    onExit={() =>\r\n                      resetForm({ values: { ...values, enumerations: [] } })\r\n                    }\r\n                    in={values.stringTo === \"list\"}\r\n                  >\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <StringToListHeader />\r\n                      <FieldArray name=\"enumerations\">\r\n                        {(arrayHelper) => {\r\n                          return (\r\n                            <div className={classes.enumeratedList}>\r\n                              {values.enumerations.map((e, idx) => {\r\n                                return (\r\n                                  <StringToListBody\r\n                                    key={`${e[\"name\"]}-`}\r\n                                    idx={idx}\r\n                                    remove={arrayHelper.remove}\r\n                                    name={e[\"name\"]}\r\n                                    definition={e[\"definition\"]}\r\n                                  />\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        }}\r\n                      </FieldArray>\r\n                    </div>\r\n                  </Collapse>\r\n                </Paper>\r\n              </FormControl>\r\n            </div>\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n          <pre>{JSON.stringify(lixiItem?.path, null, 2)}</pre>\r\n          <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nStringTypeAttribute.defaultProps = {\r\n  type: \"stringType\",\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      // backgroundColor: \"#333\",\r\n      width: \"max-content\",\r\n      alignItems: \"right\",\r\n      margin: theme.spacing(0.5, 0, 0, 0),\r\n    },\r\n    attributes: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      // width: \"100%\",\r\n      justifyContent: \"flex-end\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    typeAttribute: {\r\n      cursor: \"pointer\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.primary.light,\r\n      },\r\n    },\r\n    otherAttribute: {\r\n      cursor: \"not-allowed\",\r\n    },\r\n    table: {\r\n      width: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { useStyles } from \"./attributesTransactionsStyle\";\r\n\r\ninterface IAttributeTransaction {\r\n  lixiItem: LixiBase | undefined;\r\n  type: string | undefined;\r\n}\r\n\r\nexport const ItemAttributes: React.FC<IAttributeTransaction> = ({\r\n  lixiItem,\r\n  type,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.attributes}>\r\n        <TableContainer component={Paper}>\r\n          <Table\r\n            className={classes.table}\r\n            size=\"small\"\r\n            aria-label=\"a dense table\"\r\n          >\r\n            <TableBody>\r\n              {lixiItem?.element.getAttributeNames().map((att, idx) => {\r\n                return (\r\n                  <TableRow key={att}>\r\n                    <TableCell size=\"small\" align=\"right\">\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        align=\"right\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {`${att}:`}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell size=\"small\" align=\"center\">\r\n                      <Typography\r\n                        className={\r\n                          att === \"type\"\r\n                            ? classes.typeAttribute\r\n                            : classes.otherAttribute\r\n                        }\r\n                        color=\"textPrimary\"\r\n                        align=\"left\"\r\n                        variant=\"body2\"\r\n                        onClick={() =>\r\n                          att === \"type\" && type ? searchItem(type) : undefined\r\n                        }\r\n                      >\r\n                        <strong>{lixiItem?.element.getAttribute(att)}</strong>\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"secondary\">\r\n                        <em>\r\n                          {att === \"type\" && /^[a-zA-Z]+List$/.test(type || \"\")\r\n                            ? \"Customisable\"\r\n                            : null}\r\n                        </em>\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {lixiItem?.baseRestriction ? (\r\n                <TableRow key={lixiItem?.baseRestriction}>\r\n                  <TableCell size=\"small\" align=\"right\">\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      align=\"right\"\r\n                      variant=\"body1\"\r\n                    >\r\n                      base:\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell size=\"small\" align=\"center\">\r\n                    <Typography\r\n                      className={classes.otherAttribute}\r\n                      color=\"textPrimary\"\r\n                      align=\"left\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      <strong>{lixiItem?.baseRestriction}</strong>\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      // backgroundColor: \"#333\",\r\n      width: \"max-content\",\r\n      alignItems: \"right\",\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n    },\r\n    transactions: {\r\n      margin: theme.spacing(1.5, 0, 0, 0),\r\n      padding: \"0.1rem 1rem\",\r\n      display: \"flex\",\r\n      // width: \"100%\",\r\n      justifyContent: \"flex-start\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport React from \"react\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { SubSchema } from \"../../../redux/actions/customiser-actions\";\r\nimport { useStyles } from \"./transactionsStyle\";\r\n\r\ninterface ITransactions {\r\n  lixiItem: LixiBase | undefined;\r\n  subSchema: SubSchema | undefined;\r\n}\r\n\r\nexport const Transactions: React.FC<ITransactions> = ({\r\n  lixiItem,\r\n  subSchema,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.transactions}>\r\n      {subSchema &&\r\n        lixiItem?.transactions?.sort().map((t, idx) => {\r\n          if (subSchema?.transactionType && subSchema.transactionType !== t) {\r\n            return (\r\n              <span style={{ paddingInline: \"0.1rem\" }} key={t}>\r\n                <Chip\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  // clickable\r\n                  label={t}\r\n                />\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span style={{ paddingInline: \"0.1rem\" }} key={t}>\r\n                <Chip\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"default\"\r\n                  // clickable\r\n                  label={t}\r\n                  avatar={<Avatar>{t[0]}</Avatar>}\r\n                />\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    itemLabel: {\r\n      padding: \"0.1rem\",\r\n      margin: \"0.5rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"inline-block\",\r\n      },\r\n    },\r\n    itemDescription: {\r\n       maxWidth: \"75ch\", \r\n       marginBottom: \"1rem\", \r\n       [theme.breakpoints.down(\"sm\")]: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import Badge from \"@material-ui/core/Badge\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { SubSchema } from \"../../../redux/actions/customiser-actions\";\r\nimport { Transactions } from \"../lixi-item-transactions/Transactions\";\r\nimport { useStyles } from \"./labelDescriptionStyle\";\r\n\r\ninterface ILabelDescription {\r\n  lixiItem: LixiBase | undefined;\r\n  localName: string | undefined;\r\n  subSchema: SubSchema | undefined;\r\n}\r\n\r\nexport const LabelDescription: React.FC<ILabelDescription> = ({\r\n  lixiItem,\r\n  localName,\r\n  subSchema,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.itemLabel}>\r\n        <Badge\r\n          color=\"primary\"\r\n          badgeContent={localName}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n        >\r\n          <Typography color=\"primary\" variant=\"h4\">\r\n            {lixiItem?.label}\r\n          </Typography>\r\n        </Badge>\r\n      </div>\r\n\r\n      <div className={classes.itemDescription}>\r\n        <Typography\r\n          style={{ padding: \"0.1rem 1rem\" }}\r\n          color=\"textPrimary\"\r\n          variant=\"body1\"\r\n        >\r\n          {lixiItem?.documentation}\r\n        </Typography>\r\n        <Divider />\r\n        <Transactions lixiItem={lixiItem} subSchema={subSchema} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {},\r\n    saveButton: {\r\n      width: \"max-content\",\r\n      height: \"max-content\",\r\n    },\r\n  })\r\n);\r\n","import { Customiser } from \"./Customiser\";\r\nimport { IntegerTypeAttributeType } from \"./customisationTypes\";\r\n\r\nexport class ListTypeAttributeCustomiser extends Customiser {\r\n  object = {} as IntegerTypeAttributeType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: IntegerTypeAttributeType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      heading: \"\",\r\n      documentation: \"\",\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const {\r\n      optionalToMandatory,\r\n      documentation,\r\n      excerpt,\r\n      minInteger,\r\n      maxInteger,\r\n    } = this.object;\r\n    if (\r\n      !optionalToMandatory &&\r\n      !minInteger &&\r\n      !maxInteger &&\r\n      !documentation &&\r\n      !excerpt\r\n    ) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const { optionalToMandatory, heading } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (optionalToMandatory) {\r\n      this.customiseItem.setAttribute(\"OptionalToMandatory\", \"Yes\");\r\n    }\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        case \"OptionalToMandatory\": {\r\n          this.object.optionalToMandatory = true;\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useStyles } from \"./listTypeAttributeStyle\";\r\nimport { ListTypeAttributeType } from \"../../../models/customisationTypes\";\r\nimport { ListTypeAttributeCustomiser } from \"../../../models/ListTypeAttributeCustomiser\";\r\n\r\ninterface ICustomiseListTypeAttribute {\r\n  lixiItem: LixiBase | undefined;\r\n  type?: \"listType\";\r\n}\r\n\r\nexport const ListTypeAttribute: React.FC<ICustomiseListTypeAttribute> = ({\r\n  lixiItem,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n  const [initialValue, setInitialValue] = React.useState<ListTypeAttributeType>(\r\n    {\r\n      optionalToMandatory: false,\r\n      excerpt: \"\",\r\n      documentation: \"\",\r\n      heading: \"\",\r\n    }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new ListTypeAttributeCustomiser(\r\n      customization,\r\n      lixiItem?.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      // validationSchema={integerTypeSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const attCustomiser = new ListTypeAttributeCustomiser(\r\n          customization,\r\n          lixiItem?.path,\r\n          values\r\n        );\r\n        attCustomiser.customise();\r\n        // console.log(\"ci\", attCustomiser.customisation);\r\n        updateCustomisation(attCustomiser.customisation);\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <FormControl style={{ width: \"100%\" }}>\r\n              <Paper style={{ padding: \"0.5rem\", margin: \"0.5rem 0.2rem\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <AppCheckBox\r\n                    name=\"optionalToMandatory\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    label=\"Optional To Mandatory\"\r\n                    checked={values?.optionalToMandatory}\r\n                  />\r\n                  <Button\r\n                    className={classes.saveButton}\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon fontSize=\"large\" />}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </FormControl>\r\n            <Divider />\r\n            <ExcerptDocumentation />\r\n          </Paper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nListTypeAttribute.defaultProps = {\r\n  type: \"listType\",\r\n};\r\n","import { Theme, createStyles, makeStyles, darken } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {},\r\n    list: {\r\n      height: \"40vh\",\r\n      overflowY: \"scroll\",\r\n      width: \"100%\",\r\n      margin: theme.spacing(\"0.5rem\", 0),\r\n      // border: \"solid red 0.1rem\",\r\n      paddingTop: \"0\",\r\n    },\r\n    subItemHeader: {\r\n      zIndex: 2,\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \"#fff8e1\",\r\n      borderRadius: \"0.2rem\",\r\n      maxHeight: \"5rem\",\r\n      color: theme.palette.primary.main,\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: darken(\"#fff8e1\", 0.1),\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    item: {\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n        color: theme.palette.primary.dark,\r\n      },\r\n    },\r\n\r\n    selectAllText: {},\r\n  })\r\n);\r\n","import { Customiser } from \"./Customiser\";\r\nimport { tokenType } from \"./customisationTypes\";\r\n\r\nexport class TokenTypeCustomiser extends Customiser {\r\n  object = {} as tokenType;\r\n\r\n  constructor(\r\n    customisation: Element | undefined = undefined,\r\n    path?: string,\r\n    values?: tokenType\r\n  ) {\r\n    super(customisation, path);\r\n    this.object = values || {\r\n      tokens: [],\r\n    };\r\n  }\r\n\r\n  customise() {\r\n    const { tokens, documentation, excerpt, heading } = this.object;\r\n    if (!tokens.length && !documentation && !excerpt && !heading) {\r\n      this.removeCustomisedItem();\r\n      return;\r\n    }\r\n    this.excerpt = excerpt ? excerpt : \"\";\r\n    this.documentation = documentation ? documentation : \"\";\r\n    this.removeCustomisedItem();\r\n    this.itemPath();\r\n    this.setInLineAttributes();\r\n    this.tokens();\r\n    this.customExcerpt();\r\n    this.customDocumentation();\r\n\r\n    this.customisation.append(this.customiseItem);\r\n  }\r\n\r\n  setInLineAttributes() {\r\n    const { tokens, heading } = this.object;\r\n    if (heading) {\r\n      this.customiseItem.setAttribute(\"customHeading\", heading);\r\n    }\r\n    if (tokens.length) {\r\n      this.customiseItem.setAttribute(\"Include\", \"Yes\");\r\n    }\r\n  }\r\n\r\n  tokens() {\r\n    if (!this.object.tokens.length) return;\r\n    this.object.tokens.forEach((token: string, idx) => {\r\n      const doc = Customiser.docStub();\r\n      const tokenEle = doc.createElement(\"Enumeration\");\r\n      tokenEle.textContent = token;\r\n      this.customiseItem.append(tokenEle);\r\n    });\r\n  }\r\n\r\n  customisedObject() {\r\n    const customisedAttr = this.getCustomisedItem()?.parentElement;\r\n    if (!customisedAttr) return this.object;\r\n    customisedAttr.getAttributeNames().forEach((att, idx) => {\r\n      switch (att) {\r\n        case \"customHeading\": {\r\n          this.object.heading =\r\n            customisedAttr.getAttribute(\"customHeading\") || \"\";\r\n          break;\r\n        }\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    Array.prototype.forEach.call(customisedAttr.children, (child: Element) => {\r\n      switch (child.localName) {\r\n        case \"CustomExcerpt\":\r\n          const excerpt = child.textContent?.trim();\r\n          this.object.excerpt = excerpt ? excerpt : \"\";\r\n          break;\r\n        case \"CustomDocumentation\":\r\n          const documentation = child.textContent?.trim();\r\n          this.object.documentation = documentation ? documentation : \"\";\r\n          break;\r\n        case \"Enumeration\":\r\n          const token = child.textContent?.trim();\r\n          if (token) {\r\n            this.object.tokens.push(token);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return this.object;\r\n  }\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { tokenType } from \"../../../models/customisationTypes\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { AppCheckBox } from \"../../formik-mterial-ui/AppCheckBox\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport { useStyles } from \"./simpleTokenTypeStyle\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\r\nimport { ExcerptDocumentation } from \"../../excerpt-documentation/ExcerptDocumentation\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { TokenTypeCustomiser } from \"../../../models/TokenTypeCustomiser\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\ninterface ISimpleTokenType {\r\n  lixiItem: LixiBase | undefined;\r\n  baseRestriction?: \"xs:token\";\r\n}\r\n\r\nexport const SimpleTokenType: React.FC<ISimpleTokenType> = ({ lixiItem }) => {\r\n  const classes = useStyles();\r\n  const { updateCustomisation } = useAction();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n\r\n  const [initialValue, setInitialValue] = React.useState<tokenType>({\r\n    tokens: [],\r\n  });\r\n\r\n  const enumerations = React.useMemo(() => {\r\n    if (!lixiItem?.enumeration?.length) return;\r\n    const result: string[] = [];\r\n    lixiItem.enumeration.forEach((e: Element | undefined) => {\r\n      if (e) {\r\n        const enumItem = new LixiBase(e).path?.split(\".\").pop();\r\n        if (!enumItem) return;\r\n        result.push(enumItem);\r\n      }\r\n    });\r\n    return result;\r\n  }, [lixiItem?.enumeration]);\r\n\r\n  const enumerationAddRemove = (el: string | undefined) => {\r\n    console.log(initialValue);\r\n    if (!el) return;\r\n    const copyOfTokens = [...initialValue.tokens];\r\n    if (copyOfTokens.includes(el)) {\r\n      copyOfTokens.splice(copyOfTokens.indexOf(el), 1);\r\n    } else {\r\n      copyOfTokens.push(el);\r\n    }\r\n    setInitialValue((pre) => ({ ...pre, tokens: copyOfTokens.sort() }));\r\n  };\r\n\r\n  const toggle = () => {\r\n    const copyToken = [...initialValue.tokens];\r\n    if (copyToken.length) {\r\n      setInitialValue((pre) => ({ ...pre, tokens: [] }));\r\n      return;\r\n    }\r\n    if (enumerations?.length) {\r\n      setInitialValue((pre) => ({ ...pre, tokens: [...enumerations] }));\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!lixiItem?.path) return;\r\n    const newCustomisation = new TokenTypeCustomiser(\r\n      customization,\r\n      lixiItem.path\r\n    );\r\n    const instruction = newCustomisation.customisedObject();\r\n    setInitialValue(instruction);\r\n  }, [customization, lixiItem?.path]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        if (!lixiItem?.path) return;\r\n        setSubmitting(true);\r\n        const tokeCustomiser = new TokenTypeCustomiser(\r\n          customization,\r\n          lixiItem.path,\r\n          values\r\n        );\r\n        tokeCustomiser.customise();\r\n        updateCustomisation(tokeCustomiser.customisation);\r\n        // setTimeout(() => {\r\n        //   alert(JSON.stringify(values, null, 2));\r\n        //   setSubmitting(false);\r\n        // }, 400);\r\n      }}\r\n    >\r\n      {({ values }) => (\r\n        <Form>\r\n          <Paper style={{ padding: \"0.5rem\" }}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Paper>\r\n                  <List dense className={classes.list}>\r\n                    <ListSubheader\r\n                      title=\"Click To Select All Items\"\r\n                      className={classes.subItemHeader}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <AppCheckBox\r\n                          name=\"allSelected\"\r\n                          checked={\r\n                            values.tokens.length === enumerations?.length\r\n                          }\r\n                          value={\r\n                            values.tokens.length === enumerations?.length\r\n                              ? \"all\"\r\n                              : \"\"\r\n                          }\r\n                          disableRipple\r\n                          onClick={() => toggle()}\r\n                          checkedIcon={\r\n                            <DoneOutlinedIcon style={{ color: \"green\" }} />\r\n                          }\r\n                          icon={<CloseOutlinedIcon style={{ color: \"red\" }} />}\r\n                          indeterminateIcon={\r\n                            <IndeterminateCheckBoxTwoToneIcon color=\"primary\" />\r\n                          }\r\n                          indeterminate={\r\n                            initialValue.tokens.length > 0 &&\r\n                            initialValue.tokens.length <\r\n                              (enumerations?.length || 0)\r\n                          }\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        onClick={() => toggle()}\r\n                        primary=\"Select All Enumerations\"\r\n                      />\r\n                      <Button\r\n                        style={{ alignItems: \"flex-end\" }}\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                      >\r\n                        save\r\n                      </Button>\r\n                    </ListSubheader>\r\n                    <FieldArray\r\n                      name=\"tokens\"\r\n                      render={(arrayHelper) => {\r\n                        if (!enumerations?.length) return <></>;\r\n                        return enumerations?.map((el: string | undefined) => {\r\n                          if (!el) return <></>;\r\n                          return (\r\n                            <ListItem\r\n                              className={classes.item}\r\n                              divider\r\n                              onClick={() => enumerationAddRemove(el)}\r\n                              key={el}\r\n                            >\r\n                              <ListItemIcon>\r\n                                <AppCheckBox\r\n                                  name=\"tokens\"\r\n                                  checked={values?.tokens.includes(el)}\r\n                                  disableRipple\r\n                                  value={values?.tokens.includes(el) ? el : \"\"}\r\n                                  checkedIcon={\r\n                                    <DoneOutlinedIcon\r\n                                      style={{ color: \"green\" }}\r\n                                      fontSize=\"small\"\r\n                                    />\r\n                                  }\r\n                                  icon={\r\n                                    <CloseOutlinedIcon\r\n                                      fontSize=\"small\"\r\n                                      style={{ color: \"red\" }}\r\n                                    />\r\n                                  }\r\n                                />\r\n                              </ListItemIcon>\r\n                              <ListItemText>{el}</ListItemText>\r\n                            </ListItem>\r\n                          );\r\n                        });\r\n                      }}\r\n                    />\r\n                  </List>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <ExcerptDocumentation />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"0.5rem\",\r\n                  }}\r\n                ></Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nSimpleTokenType.defaultProps = {\r\n  baseRestriction: \"xs:token\",\r\n};\r\n","import React from \"react\";\r\ninterface ISwitchSimpleType {\r\n  switchBase: string;\r\n  children: React.ReactElement<{\r\n    baseRestriction: \"xs:token\";\r\n  }>[];\r\n}\r\nexport const SwitchSimpleType: React.FC<ISwitchSimpleType> = ({\r\n  children,\r\n  switchBase,\r\n}) => {\r\n  const child = children.find(({ props }) => {\r\n    const { baseRestriction } = props;\r\n    return switchBase === baseRestriction;\r\n  });\r\n  return child || <></>;\r\n};\r\n","import {\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n\r\n  Divider,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { Customiser } from \"../../models/Customiser\";\r\nimport { ElementCustomiser } from \"../../models/ElementCustomiser\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\n// import { CustomiseAttribute } from \"../customise-attribute/CustomiseAttribute\";\r\nimport { CustomiseElement } from \"../customise-element/CustomiseElement\";\r\nimport { useStyles } from \"./lixiItemStyle\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { IntegerTypeAttribute } from \"../customise-attribute/integer-type-attribute/IntegerTypeAttribute\";\r\nimport { SwitchAttributeType } from \"./AttributeSwitchType\";\r\nimport { StringTypeAttribute } from \"../customise-attribute/string-type-attribute/StringTypeAttribute\";\r\nimport { ItemAttributes } from \"./lixi-item-attributes/ItemAttributes\";\r\nimport { LabelDescription } from \"./lixi-item-label-description/LabelDescription\";\r\nimport { ListTypeAttribute } from \"../customise-attribute/list-type-attribute/ListTypeAttribute\";\r\nimport { SimpleTokenType } from \"../customise-simple-type/simple-token-type/SimpleTokenType\";\r\nimport { SwitchSimpleType } from \"./SimpleTypeSwitchType\";\r\n\r\n\r\ninterface ItemType {\r\n  item: Element | null | undefined;\r\n}\r\nexport const LixiItem: React.FC<ItemType | undefined> = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const [openToCustomise, setOpenToCustomise] = useState<boolean>(false);\r\n  const [alert, setAlert] = useState<{ included: boolean; path: string }>();\r\n  const [lixiItem, setLixiItem] = useState<LixiBase>();\r\n  const [exclude, setExclude] = useState(false);\r\n  const { customization, subSchema } = useTypedSelector(\r\n    (state) => state.customizer\r\n  );\r\n  const { searchItem, updateCustomisation } = useAction();\r\n\r\n  const localName = React.useMemo(() => {\r\n    return lixiItem?.element?.localName;\r\n  }, [lixiItem]);\r\n\r\n  const type = React.useMemo(() => {\r\n    return lixiItem?.element?.getAttribute(\"type\")||\"\";\r\n  }, [lixiItem]);\r\n  const baseRestriction = React.useMemo(() => {\r\n    return lixiItem?.baseRestriction || \"\";\r\n  }, [lixiItem]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      const ele: LixiBase = new LixiBase(item);\r\n      setLixiItem(ele);\r\n      return\r\n    }\r\n    \r\n  }, [item, customization]);\r\n\r\n  const onExclude = () => {\r\n    if (!lixiItem?.path) return;\r\n    const excluded = !exclude;\r\n    setExclude(excluded);\r\n    const newCustomisation = new Customiser(customization, lixiItem?.path);\r\n    if (excluded) {\r\n      newCustomisation.exclude();\r\n    } else {\r\n      newCustomisation.include();\r\n    }\r\n    updateCustomisation(newCustomisation.customisation);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (lixiItem?.path === \"Package\"){\r\n      setOpenToCustomise(true)\r\n    }\r\n  },[lixiItem?.path])\r\n\r\n  useEffect(() => {\r\n    if (exclude) return;\r\n    if (lixiItem?.path) {\r\n      const customiser = new Customiser(customization, lixiItem?.path);\r\n      setExclude(!!customiser.ExcludedItem());\r\n    }\r\n  }, [customization, lixiItem?.path, exclude]);\r\n\r\n  useEffect(() => {\r\n    if (!lixiItem?.element.localName || !lixiItem?.path || !customization)\r\n      return;\r\n    const parentCustomised = ElementCustomiser.parentCustomised(\r\n      lixiItem?.path,\r\n      customization,\r\n      lixiItem.element.localName\r\n    );\r\n    if (parentCustomised) {\r\n      setAlert(parentCustomised);\r\n    }\r\n  }, [customization, lixiItem?.path, lixiItem?.element.localName]);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Paper style={{ marginTop: \"0.5rem\", padding: \"0.5rem 0.5rem\" }}>\r\n          <Grid item xs={12}>\r\n            <Paper>\r\n              {!alert || alert?.included ? (\r\n                <div className={classes.header}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        icon={\r\n                          <DoneOutlinedIcon\r\n                            style={{ color: \"green\" }}\r\n                            fontSize=\"small\"\r\n                          />\r\n                        }\r\n                        checkedIcon={<CloseOutlinedIcon fontSize=\"small\" />}\r\n                        onChange={onExclude}\r\n                        checked={exclude}\r\n                        disabled={alert?.included}\r\n                        name=\"checkedI\"\r\n                      />\r\n                    }\r\n                    label={exclude ? \"Excluded\" : \"Include\"}\r\n                  />\r\n\r\n                  <Button\r\n                    disabled={exclude}\r\n                    style={{ height: \"max-content\", width: \"min-content\" }}\r\n                    onClick={() => setOpenToCustomise((pre) => !pre)}\r\n                    startIcon={<SettingsOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  >\r\n                    Customise\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <Alert\r\n                  variant=\"standard\"\r\n                  severity=\"warning\"\r\n                  action={\r\n                    <Button\r\n                      className={classes.alert}\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      onClick={() => searchItem(alert?.path || \"\")}\r\n                    >\r\n                      see parent\r\n                    </Button>\r\n                  }\r\n                >\r\n                  This item excluded via its parent:{\" \"}\r\n                  {\r\n                    <em>\r\n                      <strong>{alert?.path.split(\".\").pop()}</strong>\r\n                    </em>\r\n                  }\r\n                </Alert>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <LabelDescription\r\n              lixiItem={lixiItem}\r\n              localName={item?.localName}\r\n              subSchema={subSchema}\r\n            />\r\n            <ItemAttributes lixiItem={lixiItem} type={type} />\r\n          </div>\r\n\r\n          {lixiItem?.references ? (\r\n            <div>\r\n              <Divider />\r\n              <List dense subheader={<ListSubheader>References</ListSubheader>}>\r\n                <Divider />\r\n                {lixiItem.references.map((r, idx) => {\r\n                  return (\r\n                    <Fragment key={`${idx}_${r}`}>\r\n                      <ListItem component=\"li\">\r\n                        <Typography variant=\"body1\">{r}</Typography>\r\n                      </ListItem>\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </List>\r\n            </div>\r\n          ) : undefined}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Collapse in={!exclude && openToCustomise}>\r\n          {localName === \"element\" ? (\r\n            <CustomiseElement lixiItem={lixiItem} />\r\n          ) : undefined}\r\n\r\n          {localName === \"attribute\" ? (\r\n            <SwitchAttributeType switchType={type}>\r\n              <IntegerTypeAttribute lixiItem={lixiItem} />\r\n              <StringTypeAttribute lixiItem={lixiItem} />\r\n              <ListTypeAttribute lixiItem={lixiItem} />\r\n            </SwitchAttributeType>\r\n          ) : null}\r\n\r\n          {localName === \"simpleType\" ? (\r\n            <SwitchSimpleType switchBase={baseRestriction}>\r\n              <div></div>\r\n              <SimpleTokenType lixiItem={lixiItem} />\r\n            </SwitchSimpleType>\r\n          ) : null}\r\n        </Collapse>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      // display: \"flex\",\r\n      // justifyContent: \"center\",\r\n      paddingLeft: \"0.5rem\",\r\n      borderLeft: \"solid 0.5rem #3f51b5\",\r\n      borderRadius: \"0.2rem\",\r\n    },\r\n    link: {\r\n      display: \"flex\",\r\n      cursor: \"pointer\",\r\n      color: theme.palette.primary.dark,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff8e1\",\r\n        borderBottom: \"solid 0.1rem #3f51b5\",\r\n      },\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.25),\r\n      color: theme.palette.primary.dark,\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    leafLink: {\r\n      color: theme.palette.primary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff8e1\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\nimport { useStyles } from \"./breadCrumbsStyle\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\ninterface BreadCrumbsType {\r\n  pathSections: string[] | undefined;\r\n  iconClickHandler: () => void;\r\n}\r\n\r\nexport const IconBreadcrumbs: React.FC<BreadCrumbsType> = (\r\n  props: BreadCrumbsType\r\n) => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  const handleClick = (\r\n    event: React.MouseEvent<HTMLParagraphElement, MouseEvent>\r\n  ) => {\r\n    event.preventDefault();\r\n    if (!props.pathSections?.length) return;\r\n    const pathArr = [...props.pathSections];\r\n    const index = props.pathSections.indexOf(event.currentTarget.innerHTML);\r\n    if (index === 0) {\r\n      searchItem(\"Package\");\r\n      return;\r\n    }\r\n    if (!index) return;\r\n    for (let i = pathArr.length; i > index + 1; i--) {\r\n      pathArr?.pop();\r\n    }\r\n    searchItem(pathArr?.join(\".\"));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Breadcrumbs\r\n          separator={<ArrowForwardIosIcon className={classes.icon} />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          {props.pathSections?.map((section, idx) => {\r\n            return (\r\n              <Typography\r\n                onClick={(\r\n                  e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\r\n                ) => handleClick(e)}\r\n                color=\"textSecondary\"\r\n                key={idx}\r\n                className={classes.link}\r\n              >\r\n                {section}\r\n              </Typography>\r\n            );\r\n          })}\r\n          <IconButton\r\n            onClick={props.iconClickHandler}\r\n            aria-label=\"delete\"\r\n            className={classes.leafLink}\r\n            size=\"medium\"\r\n          >\r\n            <FindInPageIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </Breadcrumbs>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import { useTheme, useMediaQuery, ListSubheader } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ListChildComponentProps, VariableSizeList } from \"react-window\";\r\n\r\nconst LISTBOX_PADDING = 8; // px\r\n\r\nfunction renderRow(props: ListChildComponentProps) {\r\n  const { data, index, style } = props;\r\n  return React.cloneElement(data[index], {\r\n    style: {\r\n      ...style,\r\n      top: (style.top as number) + LISTBOX_PADDING,\r\n    },\r\n  });\r\n}\r\n\r\nconst OuterElementContext = React.createContext({});\r\n\r\nconst OuterElementType = React.forwardRef<HTMLDivElement>((props, ref) => {\r\n  const outerProps = React.useContext(OuterElementContext);\r\n  return <div ref={ref} {...props} {...outerProps} />;\r\n});\r\n\r\nfunction useResetCache(data: any) {\r\n  const ref = React.useRef<VariableSizeList>(null);\r\n  React.useEffect(() => {\r\n    if (ref.current != null) {\r\n      ref.current.resetAfterIndex(0, true);\r\n    }\r\n  }, [data]);\r\n  return ref;\r\n}\r\n\r\n// Adapter for react-window\r\nexport const ListboxComponent = React.forwardRef<HTMLDivElement>(\r\n  function ListboxComponent(props, ref) {\r\n    const { children, ...other } = props;\r\n    const itemData = React.Children.toArray(children);\r\n    const theme = useTheme();\r\n    const smUp = useMediaQuery(theme.breakpoints.up(\"sm\"), { noSsr: true });\r\n    const itemCount = itemData.length;\r\n    const itemSize = smUp ? 36 : 48;\r\n\r\n    const getChildSize = (child: React.ReactNode) => {\r\n      if (React.isValidElement(child) && child.type === ListSubheader) {\r\n        return 48;\r\n      }\r\n\r\n      return itemSize;\r\n    };\r\n\r\n    const getHeight = () => {\r\n      if (itemCount > 8) {\r\n        return 8 * itemSize;\r\n      }\r\n      return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    const gridRef = useResetCache(itemCount);\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <OuterElementContext.Provider value={other}>\r\n          <VariableSizeList\r\n            itemData={itemData}\r\n            height={getHeight() + 2 * LISTBOX_PADDING}\r\n            width=\"100%\"\r\n            ref={gridRef}\r\n            outerElementType={OuterElementType}\r\n            innerElementType=\"ul\"\r\n            itemSize={(index) => getChildSize(itemData[index])}\r\n            overscanCount={5}\r\n            itemCount={itemCount}\r\n          >\r\n            {renderRow}\r\n          </VariableSizeList>\r\n        </OuterElementContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    listbox: {\r\n      boxSizing: \"border-box\",\r\n\r\n      \"& ul\": {\r\n        padding: 0,\r\n        margin: 0,\r\n        \"& li:hover\": {\r\n          borderBottom: \"solid #444 0.05rem\",\r\n          backgroundColor: theme.palette.primary.light,\r\n          color: theme.palette.primary.contrastText,\r\n        },\r\n       \r\n      },\r\n    },\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n      marginTop: \"0rem\",\r\n    },\r\n   \r\n  })\r\n);\r\n","import { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { LixiBase } from \"../../models/LixiBase\";\r\nimport { XmlUtil } from \"../../util/nameSpaces\";\r\nimport { IconBreadcrumbs } from \"../breadCrumbs/breadCrumbsComponent\";\r\nimport { ListboxComponent } from \"./listBoxComponent\";\r\nimport { useStyles } from \"./searchPathStyle\";\r\n\r\nexport const SearchPath: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { searchItem } = useAction();\r\n  // const [path, setPath] = useState<string>();\r\n  const [options, setOptions] = useState<string[] | null>([]);\r\n  const [showSearchBox, setShowSearchBox] = useState<boolean>(true);\r\n  const {  schema } = useTypedSelector((state) => state.schema);\r\n  const { data,loading } = useTypedSelector((state) => state.item);\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const [pathsCount, setPathsCount] = useState(0);\r\n\r\n  const _loading = loading || options?.length === 0;\r\n\r\n  const path = React.useMemo(() => {\r\n    if (!data) return;\r\n    const newItem = new LixiBase(data);\r\n    return newItem?.path;\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    if (!data && !loading && schema) {\r\n      searchItem(\"Package\");\r\n      return;\r\n    }\r\n  }, [data, loading, schema, searchItem]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setShowSearchBox(false);\r\n    }\r\n  },  [data]);\r\n\r\n  useEffect(() => {\r\n    const lixiItems = (): Promise<string[]> => {\r\n      return new Promise((resolves, rejects) => {\r\n        if (!schema) return;\r\n        const xmlUtile = new XmlUtil(schema);\r\n        if (subSchema?.transactionType) {\r\n          const allPath = xmlUtile.getPathOfAllItemsInATransaction(\r\n            subSchema.transactionType\r\n          );\r\n          resolves(allPath);\r\n        }\r\n      });\r\n    };\r\n\r\n    (async () => {\r\n      setOptions([]);\r\n      const paths = await lixiItems();\r\n      setPathsCount(paths.length);\r\n      setOptions(paths);\r\n    })();\r\n  }, [subSchema?.transactionType, schema]);\r\n\r\n  const onSubmit = (\r\n    event: React.ChangeEvent<{}> | React.FormEvent<HTMLFormElement>,\r\n    searchText: string | null\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    if (searchText) {\r\n      searchItem(searchText);\r\n      setShowSearchBox(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!data || showSearchBox ? (\r\n          <Slide\r\n            direction=\"down\"\r\n            in={showSearchBox}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            {...(showSearchBox ? { timeout: 500 } : {})}\r\n          >\r\n            <Paper className={classes.root}>\r\n              <Autocomplete\r\n                id=\"virtualize-demo\"\r\n                onChange={(event, option) => onSubmit(event, option)}\r\n                disableListWrap\r\n                classes={classes}\r\n                autoComplete={true}\r\n                includeInputInList\r\n                loading={_loading}\r\n                ListboxComponent={\r\n                  ListboxComponent as React.ComponentType<\r\n                    React.HTMLAttributes<HTMLElement>\r\n                  >\r\n                }\r\n                options={options || []}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    style={{ alignItems: \"center\" }}\r\n                    variant=\"outlined\"\r\n                    label=\"LIXI Item Path\"\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      fullWidth: true,\r\n                      endAdornment: (\r\n                        <React.Fragment>\r\n                          <Typography color=\"textSecondary\">\r\n                            <em>{`${pathsCount} Paths`}</em>\r\n                          </Typography>\r\n                          {loading ? (\r\n                            <CircularProgress color=\"inherit\" size={20} />\r\n                          ) : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </React.Fragment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                )}\r\n                renderOption={(option) => (\r\n                  <Typography noWrap>{option}</Typography>\r\n                )}\r\n              />\r\n            </Paper>\r\n          </Slide>\r\n        ) : (\r\n          <IconBreadcrumbs\r\n            iconClickHandler={() => setShowSearchBox(true)}\r\n            pathSections={path?.split(\".\")}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useAction } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypeSelector\";\r\nimport { Customiser } from \"../../../models/Customiser\";\r\nimport { LixiBase } from \"../../../models/LixiBase\";\r\nimport { ItemXMLViewer } from \"../../itemXMLViewer/ItemXMLViewer\";\r\nimport { LixiItem } from \"../../lixi-item/LixiItem\";\r\nimport { SearchPath } from \"../../search/SearchPath\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport const CreateInstructionTab: React.FC<TabPanelProps> = (\r\n  props: TabPanelProps\r\n) => {\r\n  const { children, value, index, ...other } = props;\r\n  const { data } = useTypedSelector((state) => state.item);\r\n\r\n  const [itemInstruction, setItemInstruction] = React.useState<Element>();\r\n  const { customization } = useTypedSelector((state) => state.customizer);\r\n\r\n  React.useEffect(() => {\r\n    if (!data) return;\r\n    const path = new LixiBase(data)?.path;\r\n    if (path) {\r\n      const newCustomiser = new Customiser(customization, path);\r\n      const customisedItem = newCustomiser?.getCustomisedItem()?.parentElement;\r\n      if (!customisedItem) {\r\n        setItemInstruction(undefined);\r\n        return;\r\n      }\r\n      setItemInstruction(customisedItem);\r\n    }\r\n  }, [customization, data]);\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"div\">\r\n            <SearchPath />\r\n            <Collapse key=\"lixiItem\" in={!!data}>\r\n              {data ? <LixiItem item={data} /> : undefined}\r\n            </Collapse>\r\n            <Collapse key=\"lixiItemXML\" in={!!itemInstruction}>\r\n              {<ItemXMLViewer role=\"view\" itemXML={itemInstruction} />}\r\n            </Collapse>\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useStyles } from \"./navTabsStyle\";\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport const TabPanel: React.FC<TabPanelProps> = (props: TabPanelProps) => {\r\n  const classes = useStyles();\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box className={classes.tabPanelChildren}>\r\n          <Typography component=\"div\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    menuButton: {\r\n      // width: \"max-content\",\r\n      // color: theme.palette.getContrastText(theme.palette.primary.main),\r\n      minWidth: \"10rem\",\r\n      height: \"inherit\",\r\n      marginLeft: \"0.05rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  })\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useAction } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { SubSchema } from \"../../redux/actions/customiser-actions\";\r\nimport { XmlUtil } from \"../../util/nameSpaces\";\r\nimport { useStyles } from \"./subSchemaMenuStyle\";\r\n\r\n\r\n\r\n\r\nexport const SubSchemaMenu: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { customizeSubSchema } = useAction();\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const { schema } = useTypedSelector((state) => state.schema);\r\n  const [transactionList, setTransactionList] = useState<SubSchema[]>([]);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const sortedTransactionList = useMemo(\r\n    () =>\r\n      transactionList?.sort((a, b) => {\r\n        if (a && b && a.transactionType && b.transactionType) {\r\n          return a?.transactionType > b?.transactionType ? 1 : -1;\r\n        }\r\n        return 0;\r\n      }),\r\n    [transactionList]\r\n  );\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n    const s = e.currentTarget.innerText.split(\" \");\r\n    const subSchema: SubSchema = {\r\n      transactionType: s[0],\r\n      transactionVersion: s[1],\r\n    };\r\n    customizeSubSchema(subSchema);\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    const transaction = (): Promise<\r\n      {\r\n        transactionType: string;\r\n        transactionVersion: string;\r\n      }[]\r\n    > => {\r\n      return new Promise((resolves, rejects) => {\r\n        if (!schema) {\r\n          setTransactionList([]);\r\n          return;\r\n        }\r\n        const xmlUtile = new XmlUtil(schema);\r\n        const transactions = xmlUtile.getTransactions();\r\n        resolves(transactions);\r\n      });\r\n    };\r\n\r\n    (async () => {\r\n      setTransactionList(await transaction());\r\n    })();\r\n  }, [schema]);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className={classes.menuButton}\r\n        color=\"primary\"\r\n        // disableRipple\r\n        aria-controls=\"simple-menu\"\r\n        fullWidth\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        variant=\"contained\"\r\n        disabled={transactionList.length ? false : true}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        {subSchema?.transactionType && subSchema?.transactionVersion\r\n          ? `${subSchema.transactionType} ${subSchema.transactionVersion}`\r\n          : \"Transaction\"}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {sortedTransactionList.map(\r\n          ({ transactionType, transactionVersion }) => {\r\n            return (\r\n              <MenuItem\r\n                id={`${transactionType}_${transactionVersion}`}\r\n                key={`${transactionType}_${transactionVersion}`}\r\n                onClick={handleClose}\r\n              >{`${transactionType} ${transactionVersion}`}</MenuItem>\r\n            );\r\n          }\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import { Theme, makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n\r\n    paper: {\r\n      // backgroundColor: \"transparent\",\r\n      boxShadow: \"1px 1px 3px #BDBDBD\",\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0),\r\n    },\r\n    alert: {\r\n      color: \"#c43e00\",\r\n      \"&:hover\": {\r\n        color: \"#ff8f00\",\r\n      },\r\n    },\r\n    button: {\r\n      color: \"orange\",\r\n      backgroundColor: \"#333\",\r\n      \"&:hover\": {\r\n        color: \"#333\",\r\n        backgroundColor: \"orange\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CancelPresentationTwoToneIcon from \"@material-ui/icons/CancelPresentationTwoTone\";\r\n// import {CssBaseline} from \"@material-ui/core\"\r\nimport { Formik, Form } from \"formik\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as Yup from \"yup\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\nimport { SubSchemaMenu } from \"../sub-schema-menu/SubSchemaMenu\";\r\nimport { useStyles } from \"./selectTransactionDialogStyle\";\r\n\r\ninterface IConfirmRemoveItem {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const SelectTransactionDialog: React.FC<IConfirmRemoveItem> = ({\r\n  open,\r\n\r\n  handleClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { subSchema } = useTypedSelector((state) => state.customizer);\r\n  const [preSubSchema, setPreSubSchema] = React.useState(subSchema);\r\n\r\n  React.useEffect(() => {\r\n    if (subSchema?.transactionType !== preSubSchema?.transactionType) {\r\n      setPreSubSchema(subSchema);\r\n      handleClose();\r\n    }\r\n  }, [\r\n    handleClose,\r\n    preSubSchema?.transactionType,\r\n    subSchema,\r\n    subSchema?.transactionType,\r\n  ]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ agree: false }}\r\n      validationSchema={Yup.object().shape({\r\n        agree: Yup.boolean().oneOf([true]),\r\n      })}\r\n      enableReinitialize\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          setSubmitting(true);\r\n\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n          handleClose();\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, errors, touched, resetForm }) => (\r\n        <div>\r\n          <Dialog\r\n            draggable\r\n            BackdropProps={{ classes: { root: classes.root } }}\r\n            PaperProps={{ classes: { root: classes.paper, elevation2: \"5\" } }}\r\n            style={{ boxShadow: \"none\" }}\r\n            open={open}\r\n            onClose={resetForm}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <CssBaseline />\r\n            <DialogTitle\r\n              style={{\r\n                backgroundColor: \"cornsilk\",\r\n                padding: 0,\r\n                boxShadow: \"0.1rem 0.1rem 0.1rem orange\",\r\n              }}\r\n              id=\"form-dialog-title\"\r\n            >\r\n              {subSchema?.transactionType ? (\r\n                <Alert\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  severity=\"warning\"\r\n                  action={\r\n                    <Tooltip title=\"Cancel\" placement=\"top\">\r\n                      <IconButton\r\n                        onClick={handleClose}\r\n                        aria-label=\"delete\"\r\n                        className={classes.alert}\r\n                        size=\"small\"\r\n                        disableRipple\r\n                      >\r\n                        <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  Changing the transaction will reset the customisation file\r\n                </Alert>\r\n              ) : (\r\n                <Alert\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"standard\"\r\n                  severity=\"info\"\r\n                  action={\r\n                    <Tooltip title=\"Cancel\" placement=\"top\">\r\n                      <IconButton\r\n                        onClick={handleClose}\r\n                        aria-label=\"delete\"\r\n                        className={classes.alert}\r\n                        size=\"small\"\r\n                        disableRipple\r\n                      >\r\n                        <CancelPresentationTwoToneIcon fontSize=\"default\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  Target transaction schema must be selected.\r\n                </Alert>\r\n              )}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"subtitle1\">\r\n                Select the transaction from the dropdown list\r\n              </Typography>\r\n\r\n              <DialogContentText></DialogContentText>\r\n            </DialogContent>\r\n            <Divider />\r\n            <Form>\r\n              <DialogActions>\r\n                <SubSchemaMenu />\r\n              </DialogActions>\r\n            </Form>\r\n          </Dialog>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useStyles } from \"./navTabsStyle\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { VerticalLinearStepper } from \"../vertical-stepper/VerticalStepper\";\r\nimport { ItemXMLViewer } from \"../itemXMLViewer/ItemXMLViewer\";\r\nimport { useTypedSelector } from \"../../hooks/useTypeSelector\";\r\n// import { SearchPath } from \"../search/SearchPath\";\r\n// import { LixiItem } from \"../lixi-item/LixiItem\";\r\n// import { Customiser } from \"../../models/Customiser\";\r\n// import { LixiBase } from \"../../models/LixiBase\";\r\nimport { CreateInstructionTab } from \"./create-instruction/CreateInstruction\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { TabPanel } from \"./NavTabPanel\";\r\n// import { SubSchemaMenu } from \"../sub-schema-menu/SubSchemaMenu\";\r\nimport { SelectTransactionDialog } from \"../select-transaction-dialog/SelectTransactionDialog\";\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const NavTabs: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(0);\r\n  // const [itemInstruction, setItemInstruction] = React.useState<Element>();\r\n  const { customization, subSchema } = useTypedSelector(\r\n    (state) => state.customizer\r\n  );\r\n  const { schema } = useTypedSelector((state) => state.schema);\r\n  // const { data } = useTypedSelector((state) => state.item);\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  React.useEffect(() => {\r\n    if (!subSchema?.transactionType && schema && !open) {\r\n      setOpen(true);\r\n    }\r\n  }, [schema, subSchema?.transactionType, open]);\r\n\r\n  // React.useEffect(() => {\r\n  //   console.log(\"data:\", data);\r\n  //   if (!data) return;\r\n  //   const path = new LixiBase(data)?.path;\r\n  //   if (path) {\r\n  //     const newCustomiser = new Customiser(customization, path);\r\n  //     const customisedItem = newCustomiser?.getCustomisedItem()?.parentElement;\r\n  //     console.log(\"customisedItem\", customisedItem);\r\n  //     if (!customisedItem) return;\r\n  //     setItemInstruction(customisedItem);\r\n  //   }\r\n  // }, [customization, data]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SelectTransactionDialog open={open} handleClose={handleClose} />\r\n      <AppBar className={classes.appBar} position=\"sticky\">\r\n        <Toolbar>\r\n          {subSchema?.transactionType ? (\r\n            <Typography\r\n              onClick={() => setOpen(true)}\r\n              noWrap\r\n              variant=\"h6\"\r\n              style={{ flexGrow: 1, cursor: \"pointer\" }}\r\n            >\r\n              <em>{`${subSchema?.transactionType} - ${subSchema?.transactionVersion}`}</em>\r\n            </Typography>\r\n          ) : (\r\n            <Typography\r\n              onClick={() => setOpen(true)}\r\n              noWrap\r\n              color=\"secondary\"\r\n              variant=\"h6\"\r\n              style={{ flexGrow: 1, cursor: \"pointer\" }}\r\n            >\r\n              Transaction?\r\n            </Typography>\r\n          )}\r\n\r\n          <Tabs\r\n            centered\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Instruction set up\" {...a11yProps(0)} />\r\n            <Tab label=\"Create Instruction\" {...a11yProps(1)} />\r\n            <Tab label=\"View Instruction\" {...a11yProps(2)} />\r\n          </Tabs>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Box>\r\n          <VerticalLinearStepper />\r\n        </Box>\r\n      </TabPanel>\r\n\r\n      <CreateInstructionTab value={value} index={1} />\r\n\r\n      <TabPanel value={value} index={2}>\r\n        {<ItemXMLViewer itemXML={customization} />}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n","import { Theme, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      minHeight: \"100vh\",\r\n      backgroundColor: \"#333\",\r\n      padding: \"1rem\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        padding: \"0.5\",\r\n      },\r\n    },\r\n    main: {\r\n      backgroundColor: \"#fff\",\r\n      width: \"50%\",\r\n      margin: \"auto\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        width: \"100%\",\r\n        margin:   \"0\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"70%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from 'react';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { NavTabs } from \"./components/nav-taps/NavTabs\";\r\nimport {useStyles}from \"./appStyle\"\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    <div\r\n      className={classes.main}\r\n    >\r\n      <CssBaseline />\r\n      <NavTabs  />\r\n     \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Theme } from \"@material-ui/core\";\r\nimport { lightTheme } from \"./light\";\r\nimport { darkTheme } from \"./dark\";\r\n\r\nexport function getThemeByName(theme: string): Theme {\r\n  return themeMap[theme];\r\n}\r\n\r\nconst themeMap: { [key: string]: Theme } = {\r\n  lightTheme,\r\n  darkTheme,\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { getThemeByName } from \"./themes/getThem\";\r\n\r\nexport const ThemeContext = React.createContext(\r\n  (themeName: string): void => {}\r\n);\r\n// export const ThemeContext = React.createContext((themeName: string): void => { });\r\n\r\nconst ThemeProvider: React.FC = (props) => {\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = useState(\"lightTheme\");\r\n  // const [theme, setTheme] = useState(getThemeByName(\"darkTheme\"))\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = getThemeByName(themeName);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={_setThemeName}>\r\n      <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ThemProvider from \"./themeProvider\";\r\nimport { store } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <ThemProvider>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n      <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </ThemProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}